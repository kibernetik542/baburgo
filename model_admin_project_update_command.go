/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@itera.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AdminProjectUpdateCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdminProjectUpdateCommand{}

// AdminProjectUpdateCommand struct for AdminProjectUpdateCommand
type AdminProjectUpdateCommand struct {
	Id int32 `json:"id"`
	KubernetesCurrentVersion string `json:"kubernetesCurrentVersion"`
	KubesprayCurrentVersion string `json:"kubesprayCurrentVersion"`
}

// NewAdminProjectUpdateCommand instantiates a new AdminProjectUpdateCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdminProjectUpdateCommand(id int32, kubernetesCurrentVersion string, kubesprayCurrentVersion string) *AdminProjectUpdateCommand {
	this := AdminProjectUpdateCommand{}
	this.Id = id
	this.KubernetesCurrentVersion = kubernetesCurrentVersion
	this.KubesprayCurrentVersion = kubesprayCurrentVersion
	return &this
}

// NewAdminProjectUpdateCommandWithDefaults instantiates a new AdminProjectUpdateCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdminProjectUpdateCommandWithDefaults() *AdminProjectUpdateCommand {
	this := AdminProjectUpdateCommand{}
	return &this
}

// GetId returns the Id field value
func (o *AdminProjectUpdateCommand) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AdminProjectUpdateCommand) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AdminProjectUpdateCommand) SetId(v int32) {
	o.Id = v
}

// GetKubernetesCurrentVersion returns the KubernetesCurrentVersion field value
func (o *AdminProjectUpdateCommand) GetKubernetesCurrentVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KubernetesCurrentVersion
}

// GetKubernetesCurrentVersionOk returns a tuple with the KubernetesCurrentVersion field value
// and a boolean to check if the value has been set.
func (o *AdminProjectUpdateCommand) GetKubernetesCurrentVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KubernetesCurrentVersion, true
}

// SetKubernetesCurrentVersion sets field value
func (o *AdminProjectUpdateCommand) SetKubernetesCurrentVersion(v string) {
	o.KubernetesCurrentVersion = v
}

// GetKubesprayCurrentVersion returns the KubesprayCurrentVersion field value
func (o *AdminProjectUpdateCommand) GetKubesprayCurrentVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KubesprayCurrentVersion
}

// GetKubesprayCurrentVersionOk returns a tuple with the KubesprayCurrentVersion field value
// and a boolean to check if the value has been set.
func (o *AdminProjectUpdateCommand) GetKubesprayCurrentVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KubesprayCurrentVersion, true
}

// SetKubesprayCurrentVersion sets field value
func (o *AdminProjectUpdateCommand) SetKubesprayCurrentVersion(v string) {
	o.KubesprayCurrentVersion = v
}

func (o AdminProjectUpdateCommand) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdminProjectUpdateCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["kubernetesCurrentVersion"] = o.KubernetesCurrentVersion
	toSerialize["kubesprayCurrentVersion"] = o.KubesprayCurrentVersion
	return toSerialize, nil
}

type NullableAdminProjectUpdateCommand struct {
	value *AdminProjectUpdateCommand
	isSet bool
}

func (v NullableAdminProjectUpdateCommand) Get() *AdminProjectUpdateCommand {
	return v.value
}

func (v *NullableAdminProjectUpdateCommand) Set(val *AdminProjectUpdateCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableAdminProjectUpdateCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableAdminProjectUpdateCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdminProjectUpdateCommand(val *AdminProjectUpdateCommand) *NullableAdminProjectUpdateCommand {
	return &NullableAdminProjectUpdateCommand{value: val, isSet: true}
}

func (v NullableAdminProjectUpdateCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdminProjectUpdateCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



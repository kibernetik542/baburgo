/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@itera.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DescribeCrdCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DescribeCrdCommand{}

// DescribeCrdCommand struct for DescribeCrdCommand
type DescribeCrdCommand struct {
	ProjectId int32 `json:"projectId"`
	Name string `json:"name"`
}

// NewDescribeCrdCommand instantiates a new DescribeCrdCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDescribeCrdCommand(projectId int32, name string) *DescribeCrdCommand {
	this := DescribeCrdCommand{}
	this.ProjectId = projectId
	this.Name = name
	return &this
}

// NewDescribeCrdCommandWithDefaults instantiates a new DescribeCrdCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDescribeCrdCommandWithDefaults() *DescribeCrdCommand {
	this := DescribeCrdCommand{}
	return &this
}

// GetProjectId returns the ProjectId field value
func (o *DescribeCrdCommand) GetProjectId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *DescribeCrdCommand) GetProjectIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *DescribeCrdCommand) SetProjectId(v int32) {
	o.ProjectId = v
}

// GetName returns the Name field value
func (o *DescribeCrdCommand) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *DescribeCrdCommand) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *DescribeCrdCommand) SetName(v string) {
	o.Name = v
}

func (o DescribeCrdCommand) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DescribeCrdCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["projectId"] = o.ProjectId
	toSerialize["name"] = o.Name
	return toSerialize, nil
}

type NullableDescribeCrdCommand struct {
	value *DescribeCrdCommand
	isSet bool
}

func (v NullableDescribeCrdCommand) Get() *DescribeCrdCommand {
	return v.value
}

func (v *NullableDescribeCrdCommand) Set(val *DescribeCrdCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableDescribeCrdCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableDescribeCrdCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDescribeCrdCommand(val *DescribeCrdCommand) *NullableDescribeCrdCommand {
	return &NullableDescribeCrdCommand{value: val, isSet: true}
}

func (v NullableDescribeCrdCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDescribeCrdCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



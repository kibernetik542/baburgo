/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@itera.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PrometheusDashboardUpdateCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PrometheusDashboardUpdateCommand{}

// PrometheusDashboardUpdateCommand struct for PrometheusDashboardUpdateCommand
type PrometheusDashboardUpdateCommand struct {
	Id int32 `json:"id"`
	Name string `json:"name"`
	Expression string `json:"expression"`
	Description string `json:"description"`
	CategoryName string `json:"categoryName"`
}

// NewPrometheusDashboardUpdateCommand instantiates a new PrometheusDashboardUpdateCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrometheusDashboardUpdateCommand(id int32, name string, expression string, description string, categoryName string) *PrometheusDashboardUpdateCommand {
	this := PrometheusDashboardUpdateCommand{}
	this.Id = id
	this.Name = name
	this.Expression = expression
	this.Description = description
	this.CategoryName = categoryName
	return &this
}

// NewPrometheusDashboardUpdateCommandWithDefaults instantiates a new PrometheusDashboardUpdateCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrometheusDashboardUpdateCommandWithDefaults() *PrometheusDashboardUpdateCommand {
	this := PrometheusDashboardUpdateCommand{}
	return &this
}

// GetId returns the Id field value
func (o *PrometheusDashboardUpdateCommand) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PrometheusDashboardUpdateCommand) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PrometheusDashboardUpdateCommand) SetId(v int32) {
	o.Id = v
}

// GetName returns the Name field value
func (o *PrometheusDashboardUpdateCommand) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PrometheusDashboardUpdateCommand) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PrometheusDashboardUpdateCommand) SetName(v string) {
	o.Name = v
}

// GetExpression returns the Expression field value
func (o *PrometheusDashboardUpdateCommand) GetExpression() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Expression
}

// GetExpressionOk returns a tuple with the Expression field value
// and a boolean to check if the value has been set.
func (o *PrometheusDashboardUpdateCommand) GetExpressionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Expression, true
}

// SetExpression sets field value
func (o *PrometheusDashboardUpdateCommand) SetExpression(v string) {
	o.Expression = v
}

// GetDescription returns the Description field value
func (o *PrometheusDashboardUpdateCommand) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *PrometheusDashboardUpdateCommand) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *PrometheusDashboardUpdateCommand) SetDescription(v string) {
	o.Description = v
}

// GetCategoryName returns the CategoryName field value
func (o *PrometheusDashboardUpdateCommand) GetCategoryName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CategoryName
}

// GetCategoryNameOk returns a tuple with the CategoryName field value
// and a boolean to check if the value has been set.
func (o *PrometheusDashboardUpdateCommand) GetCategoryNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CategoryName, true
}

// SetCategoryName sets field value
func (o *PrometheusDashboardUpdateCommand) SetCategoryName(v string) {
	o.CategoryName = v
}

func (o PrometheusDashboardUpdateCommand) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PrometheusDashboardUpdateCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["expression"] = o.Expression
	toSerialize["description"] = o.Description
	toSerialize["categoryName"] = o.CategoryName
	return toSerialize, nil
}

type NullablePrometheusDashboardUpdateCommand struct {
	value *PrometheusDashboardUpdateCommand
	isSet bool
}

func (v NullablePrometheusDashboardUpdateCommand) Get() *PrometheusDashboardUpdateCommand {
	return v.value
}

func (v *NullablePrometheusDashboardUpdateCommand) Set(val *PrometheusDashboardUpdateCommand) {
	v.value = val
	v.isSet = true
}

func (v NullablePrometheusDashboardUpdateCommand) IsSet() bool {
	return v.isSet
}

func (v *NullablePrometheusDashboardUpdateCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrometheusDashboardUpdateCommand(val *PrometheusDashboardUpdateCommand) *NullablePrometheusDashboardUpdateCommand {
	return &NullablePrometheusDashboardUpdateCommand{value: val, isSet: true}
}

func (v NullablePrometheusDashboardUpdateCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrometheusDashboardUpdateCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



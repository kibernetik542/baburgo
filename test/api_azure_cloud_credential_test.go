/*
Taikun - WebApi

Testing AzureCloudCredentialApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/kibernetik542/baburgo"
)

func Test_openapi_AzureCloudCredentialApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test AzureCloudCredentialApiService AzureCreate", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.AzureCloudCredentialApi.AzureCreate(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AzureCloudCredentialApiService AzureDashboard", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.AzureCloudCredentialApi.AzureDashboard(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AzureCloudCredentialApiService AzureList", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.AzureCloudCredentialApi.AzureList(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AzureCloudCredentialApiService AzureLocations", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.AzureCloudCredentialApi.AzureLocations(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AzureCloudCredentialApiService AzureOffers", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var cloudId int32
		var publisher string

		resp, httpRes, err := apiClient.AzureCloudCredentialApi.AzureOffers(context.Background(), cloudId, publisher).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AzureCloudCredentialApiService AzurePublishers", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var cloudId int32

		resp, httpRes, err := apiClient.AzureCloudCredentialApi.AzurePublishers(context.Background(), cloudId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AzureCloudCredentialApiService AzureSkus", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var cloudId int32
		var publisher string
		var offer string

		resp, httpRes, err := apiClient.AzureCloudCredentialApi.AzureSkus(context.Background(), cloudId, publisher, offer).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AzureCloudCredentialApiService AzureSubscriptions", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.AzureCloudCredentialApi.AzureSubscriptions(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AzureCloudCredentialApiService AzureUpdate", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		httpRes, err := apiClient.AzureCloudCredentialApi.AzureUpdate(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AzureCloudCredentialApiService AzureZones", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.AzureCloudCredentialApi.AzureZones(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}

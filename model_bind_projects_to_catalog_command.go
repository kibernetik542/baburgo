/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@itera.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BindProjectsToCatalogCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BindProjectsToCatalogCommand{}

// BindProjectsToCatalogCommand struct for BindProjectsToCatalogCommand
type BindProjectsToCatalogCommand struct {
	Projects []UpdateCatalogDto `json:"projects"`
	CatalogId int32 `json:"catalogId"`
}

// NewBindProjectsToCatalogCommand instantiates a new BindProjectsToCatalogCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBindProjectsToCatalogCommand(projects []UpdateCatalogDto, catalogId int32) *BindProjectsToCatalogCommand {
	this := BindProjectsToCatalogCommand{}
	this.Projects = projects
	this.CatalogId = catalogId
	return &this
}

// NewBindProjectsToCatalogCommandWithDefaults instantiates a new BindProjectsToCatalogCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBindProjectsToCatalogCommandWithDefaults() *BindProjectsToCatalogCommand {
	this := BindProjectsToCatalogCommand{}
	return &this
}

// GetProjects returns the Projects field value
func (o *BindProjectsToCatalogCommand) GetProjects() []UpdateCatalogDto {
	if o == nil {
		var ret []UpdateCatalogDto
		return ret
	}

	return o.Projects
}

// GetProjectsOk returns a tuple with the Projects field value
// and a boolean to check if the value has been set.
func (o *BindProjectsToCatalogCommand) GetProjectsOk() ([]UpdateCatalogDto, bool) {
	if o == nil {
		return nil, false
	}
	return o.Projects, true
}

// SetProjects sets field value
func (o *BindProjectsToCatalogCommand) SetProjects(v []UpdateCatalogDto) {
	o.Projects = v
}

// GetCatalogId returns the CatalogId field value
func (o *BindProjectsToCatalogCommand) GetCatalogId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CatalogId
}

// GetCatalogIdOk returns a tuple with the CatalogId field value
// and a boolean to check if the value has been set.
func (o *BindProjectsToCatalogCommand) GetCatalogIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CatalogId, true
}

// SetCatalogId sets field value
func (o *BindProjectsToCatalogCommand) SetCatalogId(v int32) {
	o.CatalogId = v
}

func (o BindProjectsToCatalogCommand) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BindProjectsToCatalogCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["projects"] = o.Projects
	toSerialize["catalogId"] = o.CatalogId
	return toSerialize, nil
}

type NullableBindProjectsToCatalogCommand struct {
	value *BindProjectsToCatalogCommand
	isSet bool
}

func (v NullableBindProjectsToCatalogCommand) Get() *BindProjectsToCatalogCommand {
	return v.value
}

func (v *NullableBindProjectsToCatalogCommand) Set(val *BindProjectsToCatalogCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableBindProjectsToCatalogCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableBindProjectsToCatalogCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBindProjectsToCatalogCommand(val *BindProjectsToCatalogCommand) *NullableBindProjectsToCatalogCommand {
	return &NullableBindProjectsToCatalogCommand{value: val, isSet: true}
}

func (v NullableBindProjectsToCatalogCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBindProjectsToCatalogCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



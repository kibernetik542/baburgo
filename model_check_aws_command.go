/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@itera.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CheckAwsCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CheckAwsCommand{}

// CheckAwsCommand struct for CheckAwsCommand
type CheckAwsCommand struct {
	AwsAccessKeyId string `json:"awsAccessKeyId"`
	AwsSecretAccessKey string `json:"awsSecretAccessKey"`
	Region string `json:"region"`
}

// NewCheckAwsCommand instantiates a new CheckAwsCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCheckAwsCommand(awsAccessKeyId string, awsSecretAccessKey string, region string) *CheckAwsCommand {
	this := CheckAwsCommand{}
	this.AwsAccessKeyId = awsAccessKeyId
	this.AwsSecretAccessKey = awsSecretAccessKey
	this.Region = region
	return &this
}

// NewCheckAwsCommandWithDefaults instantiates a new CheckAwsCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCheckAwsCommandWithDefaults() *CheckAwsCommand {
	this := CheckAwsCommand{}
	return &this
}

// GetAwsAccessKeyId returns the AwsAccessKeyId field value
func (o *CheckAwsCommand) GetAwsAccessKeyId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AwsAccessKeyId
}

// GetAwsAccessKeyIdOk returns a tuple with the AwsAccessKeyId field value
// and a boolean to check if the value has been set.
func (o *CheckAwsCommand) GetAwsAccessKeyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AwsAccessKeyId, true
}

// SetAwsAccessKeyId sets field value
func (o *CheckAwsCommand) SetAwsAccessKeyId(v string) {
	o.AwsAccessKeyId = v
}

// GetAwsSecretAccessKey returns the AwsSecretAccessKey field value
func (o *CheckAwsCommand) GetAwsSecretAccessKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AwsSecretAccessKey
}

// GetAwsSecretAccessKeyOk returns a tuple with the AwsSecretAccessKey field value
// and a boolean to check if the value has been set.
func (o *CheckAwsCommand) GetAwsSecretAccessKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AwsSecretAccessKey, true
}

// SetAwsSecretAccessKey sets field value
func (o *CheckAwsCommand) SetAwsSecretAccessKey(v string) {
	o.AwsSecretAccessKey = v
}

// GetRegion returns the Region field value
func (o *CheckAwsCommand) GetRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *CheckAwsCommand) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *CheckAwsCommand) SetRegion(v string) {
	o.Region = v
}

func (o CheckAwsCommand) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CheckAwsCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["awsAccessKeyId"] = o.AwsAccessKeyId
	toSerialize["awsSecretAccessKey"] = o.AwsSecretAccessKey
	toSerialize["region"] = o.Region
	return toSerialize, nil
}

type NullableCheckAwsCommand struct {
	value *CheckAwsCommand
	isSet bool
}

func (v NullableCheckAwsCommand) Get() *CheckAwsCommand {
	return v.value
}

func (v *NullableCheckAwsCommand) Set(val *CheckAwsCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableCheckAwsCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableCheckAwsCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCheckAwsCommand(val *CheckAwsCommand) *NullableCheckAwsCommand {
	return &NullableCheckAwsCommand{value: val, isSet: true}
}

func (v NullableCheckAwsCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCheckAwsCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



openapi: 3.0.1
info:
  contact:
    email: noreply@itera.io
    name: taikun cloud
    url: http://taikun.cloud/
  description: This Api will be responsible for overall data distribution and authorization.
  title: Taikun - WebApi
  version: v1
servers:
- url: /
security:
- Bearer: []
paths:
  /api/v1/accessprofiles/update/{id}:
    put:
      operationId: accessprofiles-update
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccessProfileDto'
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Update access profile
      tags:
      - Access Profiles
  /api/v1/accessprofiles/create:
    post:
      operationId: accessprofiles-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccessProfileCommand'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Create access profile
      tags:
      - Access Profiles
  /api/v1/accessprofiles/lockmanager:
    post:
      operationId: accessprofiles-lock-manager
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessProfilesLockManagementCommand'
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Lock/unlock access profiles
      tags:
      - Access Profiles
  /api/v1/accessprofiles/list:
    get:
      operationId: accessprofiles-dropdown
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonDropdownDto'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve access profiles by organization Id
      tags:
      - Access Profiles
  /api/v1/accessprofiles:
    get:
      operationId: accessprofiles-list
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessProfilesList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve all access profiles
      tags:
      - Access Profiles
  /api/v1/accessprofiles/{id}:
    delete:
      operationId: accessprofiles-delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Delete access profile by Id
      tags:
      - Access Profiles
  /api/v1/admin/organizations/add/balance:
    post:
      operationId: admin-add-balance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminAddBalanceCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Add balance for organization
      tags:
      - Admin
  /api/v1/admin/cloudcredentials/billing:
    post:
      operationId: admin-billing-operations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminBillingOperationCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: "Billing operations: enable/disable billing "
      tags:
      - Admin
  /api/v1/admin/users/create:
    post:
      operationId: admin-create-user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUserCreateCommand'
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: User creation for admin
      tags:
      - Admin
  /api/v1/admin/organizations/delete:
    post:
      operationId: admin-delete-org
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminOrganizationsDeleteCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Delete organization
      tags:
      - Admin
  /api/v1/admin/users/make/csm:
    post:
      operationId: admin-make-csm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MakeCsmCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: User csm update for admin
      tags:
      - Admin
  /api/v1/admin/users/make/owner:
    post:
      operationId: admin-make-owner
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MakeOwnerCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: User choose owner for admin
      tags:
      - Admin
  /api/v1/admin/projects/update/kubeconfig:
    post:
      operationId: admin-update-project-kube
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUpdateProjectKubeConfigCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Projects update kube for admin
      tags:
      - Admin
  /api/v1/admin/projects/update/version:
    post:
      operationId: admin-update-project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminProjectUpdateCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Projects update for admin
      tags:
      - Admin
  /api/v1/admin/users/update/email:
    post:
      operationId: admin-update-users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUsersUpdateEmailCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: User email update for admin
      tags:
      - Admin
  /api/v1/admin/projects/update/userkube:
    post:
      operationId: admin-update-user-kube
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUpdateUserKubeConfigCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Projects update kube for admin
      tags:
      - Admin
  /api/v1/admin/users/update/password:
    post:
      operationId: admin-update-user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUsersUpdatePasswordCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: User password update for admin
      tags:
      - Admin
  /api/v1/admin/keycloak/list:
    get:
      operationId: admin-keycloak-list
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminProjectsList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Keycloak list for admin
      tags:
      - Admin
  /api/v1/admin/organizations/list:
    get:
      operationId: admin-organizations
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: PartnerId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminOrganizationsList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: ' Organizations for admin'
      tags:
      - Admin
  /api/v1/admin/projects/list:
    get:
      operationId: admin-project-list
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminProjectsList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Projects for admin
      tags:
      - Admin
  /api/v1/admin/users/list:
    get:
      operationId: admin-users-list
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUsersList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Users for admin
      tags:
      - Admin
  /api/v1/documentation:
    get:
      operationId: documentation-list
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Key
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentationsList'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Server Error
      tags:
      - Alerting Integrations
  /api/v1/alertingintegrations/edit:
    put:
      operationId: alertingintegrations-edit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditAlertingIntegrationCommand'
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Edit alerting profile alerting integration
      tags:
      - Alerting Integrations
  /api/v1/alertingintegrations/create:
    post:
      operationId: alertingintegrations-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAlertingIntegrationCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Create alerting profile alerting integration
      tags:
      - Alerting Integrations
  /api/v1/alertingintegrations/{alertingProfileId}:
    get:
      operationId: alertingintegrations-list
      parameters:
      - explode: false
        in: path
        name: alertingProfileId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AlertingIntegrationsListDto'
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Server Error
      tags:
      - Alerting Integrations
  /api/v1/alertingintegrations/{id}:
    delete:
      operationId: alertingintegrations-delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Delete alerting profile alerting integration
      tags:
      - Alerting Integrations
  /api/v1/alertingprofiles/assignemails/{id}:
    put:
      operationId: alertingprofiles-assign-email
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/AlertingEmailDto'
              type: array
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Assign Alerting emails
      tags:
      - Alerting Profiles
  /api/v1/alertingprofiles/assignwebhooks/{id}:
    put:
      operationId: alertingprofiles-assign-webhooks
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/AlertingWebhookDto'
              type: array
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Assign Alerting webhooks
      tags:
      - Alerting Profiles
  /api/v1/alertingprofiles/attach:
    post:
      operationId: alertingprofiles-attach
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachDetachAlertingProfileCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Attach alerting profile to project
      tags:
      - Alerting Profiles
  /api/v1/alertingprofiles/create:
    post:
      operationId: alertingprofiles-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAlertingProfileCommand'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Add Alerting profile
      tags:
      - Alerting Profiles
  /api/v1/alertingprofiles/detach:
    post:
      operationId: alertingprofiles-detach
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachDetachAlertingProfileCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Detach alerting profile from project
      tags:
      - Alerting Profiles
  /api/v1/alertingprofiles/edit:
    post:
      operationId: alertingprofiles-edit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAlertingProfileCommand'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Update Alerting profile
      tags:
      - Alerting Profiles
  /api/v1/alertingprofiles/lockmanager:
    post:
      operationId: alertingprofiles-lock-manager
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertingProfilesLockManagerCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Lock/Unlock Alerting profiles
      tags:
      - Alerting Profiles
  /api/v1/alertingprofiles/verifywebhook:
    post:
      operationId: alertingprofiles-verify
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyWebhookCommand'
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Verify webhook endpoint
      tags:
      - Alerting Profiles
  /api/v1/alertingprofiles/list:
    get:
      operationId: alertingprofiles-dropdown
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonDropdownDto'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve all Alerting profiles for organization
      tags:
      - Alerting Profiles
  /api/v1/alertingprofiles:
    get:
      operationId: alertingprofiles-list
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertingProfilesList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve all Alerting profiles
      tags:
      - Alerting Profiles
  /api/v1/alertingprofiles/{id}:
    delete:
      operationId: alertingprofiles-delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Remove Alerting profiles by Id
      tags:
      - Alerting Profiles
  /api/v1/allowedhost/edit/{id}:
    put:
      operationId: allowedhost-edit
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditAllowedHostDto'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Edit access profile allowed host
      tags:
      - Allowed Host
  /api/v1/allowedhost/create:
    post:
      operationId: allowedhost-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAllowedHostCommand'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Create access profile allowed host
      tags:
      - Allowed Host
  /api/v1/allowedhost/list/{accessProfileId}:
    get:
      operationId: allowedhost-list
      parameters:
      - explode: false
        in: path
        name: accessProfileId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllowedHostList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: List allowed hosts by access profile id
      tags:
      - Allowed Host
  /api/v1/allowedhost/{id}:
    delete:
      operationId: allowedhost-delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Delete access profile allowed host
      tags:
      - Allowed Host
  /api/v1/auth/forgotpassword:
    post:
      operationId: auth-forgot-password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordCommand'
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Generate reset password token if you forgot password
      tags:
      - Auth management
  /api/v1/auth/login:
    post:
      operationId: auth-login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetToken'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Login to API
      tags:
      - Auth management
  /api/v1/auth/refresh:
    post:
      operationId: auth-refresh
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenCommand'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetToken'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Refresh bearer token that generated automatically by API
      tags:
      - Auth management
  /api/v1/auth/resetpassword:
    post:
      operationId: auth-reset-password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordCommand'
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Reset password
      tags:
      - Auth management
  /api/v1/auth/trial:
    post:
      operationId: auth-trial
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TryForFreeCommand'
        required: true
      responses:
        "200":
          description: OK
      summary: Try free
      tags:
      - Auth management
  /api/v1/autoscaling/disable:
    post:
      operationId: autoscaling-disable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisableAutoscalingCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Disable autoscaling
      tags:
      - Autoscaling
  /api/v1/autoscaling/edit:
    post:
      operationId: autoscaling-edit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditAutoscalingCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Edit autoscaling
      tags:
      - Autoscaling
  /api/v1/autoscaling/enable:
    post:
      operationId: autoscaling-enable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableAutoscalingCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Enable autoscaling
      tags:
      - Autoscaling
  /api/v1/autoscaling/sync:
    post:
      operationId: autoscaling-sync
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutoscalingSyncCommand'
        required: true
      responses:
        "200":
          description: OK
      summary: Sync autoscaling
      tags:
      - Autoscaling
  /api/v1/aws/zones:
    post:
      operationId: aws-zones
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AmazonAvailabilityZonesCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzResult'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Fetch Aws zones
      tags:
      - AWS cloud credential
  /api/v1/aws/create:
    post:
      operationId: aws-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAwsCloudCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Add Aws credentials
      tags:
      - AWS cloud credential
  /api/v1/aws/device-names:
    post:
      operationId: aws-device-names
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AwsBlockDeviceMappingsCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Aws device name list
      tags:
      - AWS cloud credential
  /api/v1/aws/regions:
    post:
      operationId: aws-regionlist
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegionListCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AwsRegionDto'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve aws regions list
      tags:
      - AWS cloud credential
  /api/v1/aws/update:
    post:
      operationId: aws-update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAwsCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Update AWS credentials
      tags:
      - AWS cloud credential
  /api/v1/aws/owners:
    get:
      operationId: aws-owners
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonStringBasedDropdownDto'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve aws verified owner list
      tags:
      - AWS cloud credential
  /api/v1/aws/list:
    get:
      operationId: aws-list
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwsCredentialList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve list of aws cloud credentials
      tags:
      - AWS cloud credential
  /api/v1/images/aws:
    get:
      operationId: images-aws-images
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AwsImagesPostListCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwsImagesPostList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve aws images
      tags:
      - Aws images
  /api/v1/azure/create:
    post:
      operationId: azure-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAzureCloudCommand'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Add Azure credentials
      tags:
      - Azure cloud credential
  /api/v1/azure/quota/list:
    post:
      operationId: azure-dashboard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AzureDashboardCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AzureQuotaListRecordDto'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Fetch Azure quota list
      tags:
      - Azure cloud credential
  /api/v1/azure/locations:
    post:
      operationId: azure-locations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AzureLocationsCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Fetch Azure location list
      tags:
      - Azure cloud credential
  /api/v1/azure/subscriptions:
    post:
      operationId: azure-subscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AzureSubscriptionListCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonStringBasedDropdownDto'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Azure subscriptions list
      tags:
      - Azure cloud credential
  /api/v1/azure/update:
    post:
      operationId: azure-update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAzureCommand'
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Update Azure credentials
      tags:
      - Azure cloud credential
  /api/v1/azure/zones:
    post:
      operationId: azure-zones
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AzureZonesCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzResult'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Fetch Azure zone list
      tags:
      - Azure cloud credential
  /api/v1/azure/list:
    get:
      operationId: azure-list
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureCredentialList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve list of azure cloud credentials
      tags:
      - Azure cloud credential
  /api/v1/azure/offers/{cloudId}/{publisher}:
    get:
      operationId: azure-offers
      parameters:
      - explode: false
        in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: publisher
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureOffersList'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Server Error
      tags:
      - Azure cloud credential
  /api/v1/azure/publishers/{cloudId}:
    get:
      operationId: azure-publishers
      parameters:
      - explode: false
        in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzurePublishersList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: List Azure publishers list
      tags:
      - Azure cloud credential
  /api/v1/azure/skus/{cloudId}/{publisher}/{offer}:
    get:
      operationId: azure-skus
      parameters:
      - explode: false
        in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: publisher
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: offer
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureSkusList'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Server Error
      tags:
      - Azure cloud credential
  /api/v1/backup/create:
    post:
      operationId: backup-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBackupPolicyCommand'
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Server Error
      tags:
      - Backup policy
  /api/v1/backup/delete/backup:
    post:
      operationId: backup-delete-backup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteBackupCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Server Error
      tags:
      - Backup policy
  /api/v1/backup/delete/location:
    post:
      operationId: backup-delete-backup-location
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteBackupStorageLocationCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Server Error
      tags:
      - Backup policy
  /api/v1/backup/delete/restore:
    post:
      operationId: backup-delete-restore
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRestoreCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Server Error
      tags:
      - Backup policy
  /api/v1/backup/delete/schedule:
    post:
      operationId: backup-delete-schedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteScheduleCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Server Error
      tags:
      - Backup policy
  /api/v1/backup/disablebackup:
    post:
      operationId: backup-disable-backup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisableBackupCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Server Error
      tags:
      - Backup policy
  /api/v1/backup/enablebackup:
    post:
      operationId: backup-enable-backup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableBackupCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Server Error
      tags:
      - Backup policy
  /api/v1/backup/location:
    post:
      operationId: backup-import-backup-storage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportBackupStorageLocationCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Server Error
      tags:
      - Backup policy
  /api/v1/backup/restore:
    post:
      operationId: backup-restore-backup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestoreBackupCommand'
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Server Error
      tags:
      - Backup policy
  /api/v1/backup/clear/project:
    post:
      operationId: backup-clear-project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClearProjectBackupCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Server Error
      tags:
      - Backup policy
  /api/v1/backup/{projectId}/{name}:
    get:
      operationId: backup-by-name
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupDto'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Server Error
      tags:
      - Backup policy
  /api/v1/backup/describe/backup/{projectId}/{name}:
    get:
      operationId: backup-describe-backup
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Server Error
      tags:
      - Backup policy
  /api/v1/backup/describe/restore/{projectId}/{name}:
    get:
      operationId: backup-describe-restore
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Server Error
      tags:
      - Backup policy
  /api/v1/backup/describe/schedule/{projectId}/{name}:
    get:
      operationId: backup-describe-schedule
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Server Error
      tags:
      - Backup policy
  /api/v1/backup/backups/{projectId}:
    get:
      operationId: backup-list-all-backups
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllBackups'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Server Error
      tags:
      - Backup policy
  /api/v1/backup/location/{projectId}:
    get:
      operationId: backup-list-all-backup-storages
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllBackupStorageLocations'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Server Error
      tags:
      - Backup policy
  /api/v1/backup/delete-requests/{projectId}:
    get:
      operationId: backup-list-all-delete-backup-requests
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllDeleteBackupRequests'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Server Error
      tags:
      - Backup policy
  /api/v1/backup/restores/{projectId}:
    get:
      operationId: backup-list-all-restores
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllRestores'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Server Error
      tags:
      - Backup policy
  /api/v1/backup/schedules/{projectId}:
    get:
      operationId: backup-list-all-schedules
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllSchedules'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Server Error
      tags:
      - Backup policy
  /api/v1/billing/create:
    post:
      operationId: billing-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBillingSummaryCommand'
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Add billing summary
      tags:
      - Billing
  /api/v1/billing/export:
    get:
      operationId: billing-export-csv
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: StartDate
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: EndDate
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: IsDeleted
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: IsEmailEnabled
        required: true
        schema:
          type: boolean
        style: form
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Export Csv
      tags:
      - Billing
  /api/v1/billing/grouped:
    get:
      operationId: billing-grouped-list
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: PeriodDuration
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: IsDeleted
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GroupedBillingInfo'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve a grouped list of billing summaries
      tags:
      - Billing
  /api/v1/billing:
    get:
      operationId: billing-list
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: StartDate
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: EndDate
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: IsDeleted
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: ProjectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingInfo'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve billing info
      tags:
      - Billing
  /api/v1/catalog/edit:
    put:
      operationId: catalog-edit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditCatalogCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Edit catalog
      tags:
      - Catalog
  /api/v1/catalog/bind-project:
    post:
      operationId: catalog-bind-project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BindProjectsToCatalogCommand'
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Bind projects to catalog
      tags:
      - Catalog
  /api/v1/catalog/create:
    post:
      operationId: catalog-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCatalogCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Create catalog
      tags:
      - Catalog
  /api/v1/catalog/lockmanager:
    post:
      operationId: catalog-lock
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogLockManagementCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Lock catalog
      tags:
      - Catalog
  /api/v1/catalog/list:
    get:
      operationId: catalog-dropdown
      parameters:
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CatalogDropdownDto'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Catalog dropdown list for organization
      tags:
      - Catalog
  /api/v1/catalog:
    get:
      operationId: catalog-list
      parameters:
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Catalog list for organization
      tags:
      - Catalog
  /api/v1/catalog/{id}:
    delete:
      operationId: catalog-delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Delete catalog
      tags:
      - Catalog
  /api/v1/catalog-app/edit/params:
    put:
      operationId: catalog-app-edit-params
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditCatalogAppParamCommand'
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Edit catalog app params
      tags:
      - Catalog app
  /api/v1/catalog-app/edit/version:
    put:
      operationId: catalog-app-edit-version
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditCatalogAppVersionCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Edit catalog app version
      tags:
      - Catalog app
  /api/v1/catalog-app/create:
    post:
      operationId: catalog-app-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCatalogAppCommand'
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Create catalog app
      tags:
      - Catalog app
  /api/v1/catalog-app/lockmanager:
    post:
      operationId: catalog-app-lock-manager
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogAppLockManagement'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Lock catalog app
      tags:
      - Catalog app
  /api/v1/catalog-app/{catalogAppId}:
    get:
      operationId: catalog-app-details
      parameters:
      - explode: false
        in: path
        name: catalogAppId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogAppDetailsDto'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Catalog App details
      tags:
      - Catalog app
  /api/v1/catalog-app/params/{catalogAppId}:
    get:
      operationId: catalog-app-param-details
      parameters:
      - explode: false
        in: path
        name: catalogAppId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CatalogAppParamsDetailsDto'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Catalog App param details
      tags:
      - Catalog app
  /api/v1/catalog-app/{id}:
    delete:
      operationId: catalog-app-delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Delete catalog app
      tags:
      - Catalog app
  /api/v1/checker/artifact:
    post:
      operationId: checker-artifact
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArtifactUrlCheckerCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Check artifact url
      tags:
      - Checker
  /api/v1/checker/cidr:
    post:
      operationId: checker-cidr
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CidrCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Check valid cidr format
      tags:
      - Checker
  /api/v1/checker/cron:
    post:
      operationId: checker-cron
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CronJobCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Check valid cron job format
      tags:
      - Checker
  /api/v1/checker/dns:
    post:
      operationId: checker-dns
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Check valid dns format
      tags:
      - Checker
  /api/v1/checker/keycloak:
    post:
      operationId: checker-keycloak
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeycloakCheckerCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Check keycloak credential
      tags:
      - Checker
  /api/v1/checker/ntp:
    post:
      operationId: checker-ntp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NtpCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Check valid ntp format
      tags:
      - Checker
  /api/v1/checker/prometheus:
    post:
      operationId: checker-prometheus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckPrometheusCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Check prometheus credentials
      tags:
      - Checker
  /api/v1/checker/s3:
    post:
      operationId: checker-s3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckS3Command'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Check s3 credential
      tags:
      - Checker
  /api/v1/checker/ssh:
    post:
      operationId: checker-ssh
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SshKeyCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Check valid ssh key format
      tags:
      - Checker
  /api/v1/checker/yaml:
    post:
      operationId: checker-yaml
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/YamlValidatorCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Check yaml file
      tags:
      - Checker
  /api/v1/checker/duplicate:
    post:
      operationId: checker-duplicate-name
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DuplicateNameCheckerCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Duplicate name
      tags:
      - Checker
  /api/v1/checker/node:
    post:
      operationId: checker-node
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodeCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Duplicate server name checker
      tags:
      - Checker
  /api/v1/checker/organization:
    post:
      operationId: checker-organization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationNameCheckerCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Check duplicate org name
      tags:
      - Checker
  /api/v1/checker/user:
    post:
      operationId: checker-user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserExistCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Check duplicate username
      tags:
      - Checker
  /api/v1/checker/aws:
    post:
      operationId: checker-aws
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckAwsCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Check aws credential
      tags:
      - Checker
  /api/v1/checker/azure:
    post:
      operationId: checker-azure
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckAzureCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Check azure credentials
      tags:
      - Checker
  /api/v1/checker/azure/quota/cpu:
    post:
      operationId: checker-azure-quota
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckAzureCpuQuotaCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Check azure cpu quota
      tags:
      - Checker
  /api/v1/checker/google:
    post:
      operationId: checker-google
      requestBody:
        content:
          multipart/form-data:
            schema:
              format: binary
              type: string
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Check google credentials
      tags:
      - Checker
  /api/v1/checker/openstack:
    post:
      operationId: checker-openstack
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckOpenstackCommand'
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Check openstack credential
      tags:
      - Checker
  /api/v1/checker/openstack-image/{id}:
    post:
      operationId: checker-openstack-taikun-image
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Check openstack taikun image
      tags:
      - Checker
  /api/v1/checker/taikun-lb-image/{id}:
    post:
      operationId: checker-openstack-taikun-lb-image
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Check openstack taikun lb image
      tags:
      - Checker
  /api/v1/checker/proxmox:
    post:
      operationId: checker-proxmox
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProxmoxCheckerCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Check proxmox credential
      tags:
      - Checker
  /api/v1/checker/tanzu:
    post:
      operationId: checker-tanzu
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckTanzuCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Check tanzu credential
      tags:
      - Checker
  /api/v1/cloudcredentials/lockmanager:
    post:
      operationId: cloudcredentials-lock-manager
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudLockManagerCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Lock/Unlock cloud credential
      tags:
      - Cloud credential
  /api/v1/cloudcredentials/makedefault:
    post:
      operationId: cloudcredentials-make-default
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialMakeDefaultCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Make cloud credentials default
      tags:
      - Cloud credential
  /api/v1/cloudcredentials/exceeded-quotas:
    get:
      operationId: cloudcredentials-exceeded
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceededQuotaList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve cloud credentials exceeded quotas
      tags:
      - Cloud credential
  /api/v1/cloudcredentials/cli:
    get:
      operationId: cloudcredentials-for-cli
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsForCli'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve cloud credentials for CLI
      tags:
      - Cloud credential
  /api/v1/cloudcredentials/details:
    get:
      operationId: cloudcredentials-for-project
      parameters:
      - explode: true
        in: query
        name: CloudId
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsForProjectList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve cloud credential details by cloud Id
      tags:
      - Cloud credential
  /api/v1/cloudcredentials/flavors/{cloudId}:
    get:
      operationId: cloudcredentials-all-flavors
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: false
        in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: StartRam
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: EndRam
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: StartCpu
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: EndCpu
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllFlavorsList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve all flavors
      tags:
      - Cloud credential
  /api/v1/cloudcredentials:
    get:
      operationId: cloudcredentials-org-list
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: IsAdmin
        required: true
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CloudCredentialsForOrganizationEntity'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve a list of cloud credentials by organization Id
      tags:
      - Cloud credential
  /api/v1/cloudcredentials/list:
    get:
      operationId: cloudcredentials-dashboard-list
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsChart'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve all cloud credentials
      tags:
      - Cloud credential
  /api/v1/cloudcredentials/{cloudId}:
    delete:
      operationId: cloudcredentials-delete
      parameters:
      - explode: false
        in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Remove cloud credential by cloud Id
      tags:
      - Cloud credential
  /api/v1/common/enumvalues:
    get:
      operationId: common-enum-values
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnumList'
          description: OK
      summary: Retrieve enum values
      tags:
      - Common
  /api/v1/common/countries:
    get:
      operationId: common-countries
      parameters:
      - explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CountryListDto'
                type: array
          description: OK
      summary: Retrieve country list
      tags:
      - Common
  /api/v1/common/sorting-elements/{type}:
    get:
      operationId: common-sorting-elements
      parameters:
      - explode: false
        in: path
        name: type
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: Success
      tags:
      - Common
  /api/v1/common/ip-range-count:
    post:
      operationId: common-ip-range-count
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IpAddressRangeCountCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve ip address range count
      tags:
      - Common
  /api/v1/common/ip-range-list:
    post:
      operationId: common-ip-range-list
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IpAddressRangeListCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve ip address range list
      tags:
      - Common
  /api/v1/cronjob/auto-upgrade-projects:
    post:
      operationId: cronjob-auto-upgrade-projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutoUpgradeProjectsCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Upgrade projects that auto-upgrade option enabled
      tags:
      - Cron Job Service
  /api/v1/cronjob/create-key-pool:
    post:
      operationId: cronjob-create-key-pool
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateKeyPoolCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Create key pool
      tags:
      - Cron Job Service
  /api/v1/cronjob/delete-kube-configs:
    post:
      operationId: cronjob-delete-kube-configs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRemovedUsersKubeConfigCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Remove deleted user's kube config
      tags:
      - Cron Job Service
  /api/v1/cronjob/project-expiration:
    post:
      operationId: cronjob-email-for-project-expiration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailAboutProjectExpirationCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Send email to the users about project expiration
      tags:
      - Cron Job Service
  /api/v1/cronjob/sync-backup-credentials:
    post:
      operationId: cronjob-sync-backup-credentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncBackupCredentialsCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Sync backup credentials
      tags:
      - Cron Job Service
  /api/v1/cronjob/sync-projects:
    post:
      operationId: cronjob-sync-projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncProjectsCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Sync projects
      tags:
      - Cron Job Service
  /api/v1/cronjob/trigger-templates:
    post:
      operationId: cronjob-trigger-templates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TriggerTemplateCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Trigger scheduled templates
      tags:
      - Cron Job Service
  /api/v1/cronjob/block-organization:
    post:
      operationId: cronjob-block-organization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlockOrganizationCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Block organization
      tags:
      - Cron Job Service
  /api/v1/cronjob/sync-organizations:
    post:
      operationId: cronjob-sync-organizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncOrganizationsCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Sync organizations
      tags:
      - Cron Job Service
  /api/v1/cronjob/alerts:
    post:
      operationId: cronjob-delete-expired-alerts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteExpiredAlertsCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Delete expired alerts
      tags:
      - Cron Job Service
  /api/v1/cronjob/events:
    post:
      operationId: cronjob-delete-expired-events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteExpiredEventsCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Delete expired events
      tags:
      - Cron Job Service
  /api/v1/cronjob/history-logs:
    post:
      operationId: cronjob-delete-expired-history-logs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteExpiredHistoryLogsCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Delete expired history logs
      tags:
      - Cron Job Service
  /api/v1/cronjob/refresh-tokens:
    post:
      operationId: cronjob-delete-expired-refresh-tokens
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteExpiredRefreshTokensCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Delete expired refresh tokens
      tags:
      - Cron Job Service
  /api/v1/cronjob/taikun-requests:
    post:
      operationId: cronjob-delete-expired-requests
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRequestsCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Delete expired requests
      tags:
      - Cron Job Service
  /api/v1/cronjob/project-actions:
    post:
      operationId: cronjob-delete-useless-project-actions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRedundantProjectActionsCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Delete useless project actions
      tags:
      - Cron Job Service
  /api/v1/cronjob/fetch-artifact-organizations:
    post:
      operationId: cronjob-fetch-artifact-organizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FillArtifacthubOrganizationCommand'
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Fetch artifact hub organizations
      tags:
      - Cron Job Service
  /api/v1/cronjob/sync-app-proxy:
    post:
      operationId: cronjob-sync-app-proxy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncAppProxyCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: 'Sync app proxy command '
      tags:
      - Cron Job Service
  /api/v1/cronjob/sync-project-apps:
    post:
      operationId: cronjob-sync-project-apps
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncProjectAppsCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Sync project apps
      tags:
      - Cron Job Service
  /api/v1/dnsservers/{id}:
    delete:
      operationId: dnsservers-delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Delete dns server
      tags:
      - Dns server
  /api/v1/dnsservers/edit/{id}:
    put:
      operationId: dnsservers-edit
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsNtpAddressEditDto'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Edit dns server
      tags:
      - Dns servers
  /api/v1/dnsservers/create:
    post:
      operationId: dnsservers-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDnsServerCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Create dns servers for access profile
      tags:
      - Dns servers
  /api/v1/dnsservers/{accessProfileId}:
    get:
      operationId: dnsservers-list
      parameters:
      - explode: false
        in: path
        name: accessProfileId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DnsServersListDto'
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Server Error
      tags:
      - Dns Servers
  /api/v1/flavors/bind:
    get:
      operationId: flavors-bind-to-project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BindFlavorToProjectCommand'
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Server Error
      tags:
      - Flavors
  /api/v1/flavors/unbind:
    get:
      operationId: flavors-unbind-from-project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnbindFlavorFromProjectCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Server Error
      tags:
      - Flavors
  /api/v1/flavors/credentials/dropdown/list:
    get:
      operationId: flavors-dropdown-flavors
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: FilterBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CloudCredentialsDropdownRecordDto'
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Server Error
      tags:
      - Flavors
  /api/v1/flavors/aws/{cloudId}:
    get:
      operationId: flavors-aws-instance-types
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: false
        in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: StartRam
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: EndRam
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: StartCpu
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: EndCpu
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwsFlavorList'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Server Error
      tags:
      - Flavors
  /api/v1/flavors/azure/{cloudId}:
    get:
      operationId: flavors-azure-vm-sizes
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: false
        in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: StartRam
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: EndRam
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: StartCpu
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: EndCpu
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureFlavorList'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Server Error
      tags:
      - Flavors
  /api/v1/flavors/projects/list:
    get:
      operationId: flavors-selected-flavors-for-project
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: ProjectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: FilterBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: FlavorName
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: WithPrice
        required: true
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoundFlavorsForProjectsList'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Server Error
      tags:
      - Flavors
  /api/v1/flavors/google/{cloudId}:
    get:
      operationId: flavors-google-machine-types
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: false
        in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: StartRam
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: EndRam
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: StartCpu
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: EndCpu
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFlavorList'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Server Error
      tags:
      - Flavors
  /api/v1/flavors/openstack/{cloudId}:
    get:
      operationId: flavors-openstack-flavors
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: false
        in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: StartRam
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: EndRam
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: StartCpu
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: EndCpu
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenstackFlavorList'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Server Error
      tags:
      - Flavors
  /api/v1/flavors/proxmox/{cloudId}:
    get:
      operationId: flavors-proxmox-flavors
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: false
        in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: StartRam
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: EndRam
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: StartCpu
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: EndCpu
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxFlavorList'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Server Error
      tags:
      - Flavors
  /api/v1/flavors/tanzu/{cloudId}:
    get:
      operationId: flavors-tanzu-flavors
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: false
        in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: StartRam
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: EndRam
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: StartCpu
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: EndCpu
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TanzuFlavorList'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Server Error
      tags:
      - Flavors
  /api/v1/googlecloud/billing-accounts:
    post:
      operationId: googlecloud-billing-account-list
      requestBody:
        content:
          multipart/form-data:
            schema:
              format: binary
              type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonStringBasedDropdownDto'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve google billing accounts list
      tags:
      - Google
  /api/v1/googlecloud/create:
    post:
      operationId: googlecloud-create
      requestBody:
        content:
          multipart/form-data:
            schema:
              format: binary
              type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Create google cloud credential
      tags:
      - Google
  /api/v1/googlecloud/regions:
    post:
      operationId: googlecloud-region-list
      requestBody:
        content:
          multipart/form-data:
            schema:
              format: binary
              type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve google region list
      tags:
      - Google
  /api/v1/googlecloud/zones:
    post:
      operationId: googlecloud-zone-list
      requestBody:
        content:
          multipart/form-data:
            schema:
              format: binary
              type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzResult'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Google zones list
      tags:
      - Google
  /api/v1/googlecloud/list:
    get:
      operationId: googlecloud-list
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCredentialList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve list of google cloud credentials
      tags:
      - Google
  /api/v1/images/aws/common/{cloudId}:
    get:
      operationId: images-aws-common-images
      parameters:
      - explode: false
        in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AwsOwnerDetails'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Commonly used aws images
      tags:
      - images
  /api/v1/images/google/common/{cloudId}:
    get:
      operationId: images-common-google-images
      parameters:
      - explode: false
        in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GoogleOwnerDetails'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Commonly used google images
      tags:
      - images
  /api/v1/images/aws/personal/{cloudId}:
    get:
      operationId: images-aws-personal-images
      parameters:
      - explode: false
        in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonStringBasedDropdownDto'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Aws personal images
      tags:
      - images
  /api/v1/images/azure/personal/{cloudId}:
    get:
      operationId: images-azure-personal-images
      parameters:
      - explode: false
        in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonStringBasedDropdownDto'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Azure personal images
      tags:
      - images
  /api/v1/images/tanzu/{cloudId}:
    get:
      operationId: images-tanzu-images
      parameters:
      - explode: false
        in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TanzuImageList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve tanzu images
      tags:
      - images
  /api/v1/images/bind:
    get:
      operationId: images-bind-images-to-project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BindImageToProjectCommand'
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Bind images to project
      tags:
      - Images
  /api/v1/images/details:
    get:
      operationId: images-image-details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageByIdCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Get image details
      tags:
      - Images
  /api/v1/images/unbind:
    get:
      operationId: images-unbind-images-from-project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteImageFromProjectCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Unbind images from project
      tags:
      - Images
  /api/v1/images/azure/{cloudId}/{publisherName}/{offer}/{sku}:
    get:
      operationId: images-azure-images
      parameters:
      - explode: false
        in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: publisherName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: offer
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: sku
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Latest
        required: true
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureImageList'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Server Error
      tags:
      - Images
  /api/v1/images/projects/lis:
    get:
      operationId: images-selected-images-for-project
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: ProjectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: FilterBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoundImagesForProjectsList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve selected images for projects
      tags:
      - Images
  /api/v1/images/google/{cloudId}/{type}:
    get:
      operationId: images-google-images
      parameters:
      - explode: false
        in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: type
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Latest
        required: true
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleImageList'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Server Error
      tags:
      - Images
  /api/v1/images/openstack/{cloudId}:
    get:
      operationId: images-openstack-images
      parameters:
      - explode: false
        in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Personal
        required: true
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenstackImageList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve openstack images
      tags:
      - Images
  /api/v1/invoices/update/{invoiceId}:
    put:
      operationId: invoices-update
      parameters:
      - explode: false
        in: path
        name: invoiceId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInvoiceDto'
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Update invoice
      tags:
      - Invoices
  /api/v1/invoices/create:
    post:
      operationId: invoices-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInvoiceCommand'
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Create invoice
      tags:
      - Invoices
  /api/v1/invoices/download:
    get:
      operationId: invoices-download
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DownloadInvoiceCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Download invoice
      tags:
      - Invoices
  /api/v1/invoices/list:
    get:
      operationId: invoices-list
      parameters:
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: StartDate
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: EndDate
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: FilterBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: PartnerId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoices'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Invoices list
      tags:
      - Invoices
  /api/v1/keycloak/edit:
    post:
      operationId: keycloak-edit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeycloakEditCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Edit keycloak configuration for organization
      tags:
      - Keycloak
  /api/v1/keycloak/create:
    post:
      operationId: keycloak-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeycloakCreateCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Create keycloak configuration for organization
      tags:
      - Keycloak
  /api/v1/keycloak/delete:
    post:
      operationId: keycloak-delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeycloakDeleteCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Delete keycloak configuration
      tags:
      - Keycloak
  /api/v1/keycloak:
    get:
      operationId: keycloak-list
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeycloakListDto'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Get keycloak configuration
      tags:
      - Keycloak
  /api/v1/kubeconfig:
    get:
      operationId: kubeconfig-list
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: ProjectId
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubeConfigForUserList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve a list of kube configs for project
      tags:
      - Kube Config
    post:
      operationId: kubeconfig-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateKubeConfigCommand'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Create kube config
      tags:
      - Kube Config
  /api/v1/kubeconfig/delete:
    post:
      operationId: kubeconfig-delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteKubeConfigCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Delete kube config
      tags:
      - Kube Config
  /api/v1/kubeconfig/download:
    post:
      operationId: kubeconfig-download
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DownloadKubeConfigCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Download kube config file for user by project Id
      tags:
      - Kube Config
  /api/v1/kubeconfig/interactive-shell:
    post:
      operationId: kubeconfig-interactive-shell
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KubeConfigInteractiveShellCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Interactive shell for user kube config
      tags:
      - Kube Config
  /api/v1/kubeconfig/delete-by-project-id:
    post:
      operationId: kubeconfig-delete-by-project-id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteKubeConfigByProjectIdCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Delete kube config by project id
      tags:
      - Kube Config
  /api/v1/kubeconfigrole:
    get:
      operationId: kubeconfigrole-list
      parameters:
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubeConfigRoleResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve list of kube config role
      tags:
      - Kube Config role
  /api/v1/kubernetes/updatealert/{alertId}:
    put:
      operationId: kubernetes-update-alert
      parameters:
      - explode: false
        in: path
        name: alertId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateKubernetesAlertDto'
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Update k8s alert
      tags:
      - Kubernetes
  /api/v1/kubernetes/alert/{projectId}:
    post:
      operationId: kubernetes-add-k8s-alert
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAlertDto'
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Add k8s alert
      tags:
      - Kubernetes
  /api/v1/kubernetes/event/{projectId}:
    post:
      operationId: kubernetes-add-k8s-events
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KubernetesEventCreateDto'
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Add k8s event
      tags:
      - Kubernetes
  /api/v1/kubernetes/removealerts:
    post:
      operationId: kubernetes-removealerts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAlertCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Remove k8s alerts
      tags:
      - Kubernetes
  /api/v1/kubernetes/cli:
    post:
      operationId: kubernetes-cli
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KubernetesCliCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Execute k8s web socket namespaced pod
      tags:
      - Kubernetes
  /api/v1/kubernetes/podLogs:
    post:
      operationId: kubernetes-pod-logs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KubernetesPodLogsCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve k8s pod logs
      tags:
      - Kubernetes
  /api/v1/kubernetes/interactive-shell:
    post:
      operationId: kubernetes-interactive-shell
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InteractiveShellSendCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Produce interactive shell command
      tags:
      - Kubernetes
  /api/v1/kubernetes/{projectId}/deletepod/{metadataName}/{namespace}:
    post:
      operationId: kubernetes-kill-pod
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: metadataName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Server Error
      tags:
      - Kubernetes
  /api/v1/kubernetes/restart/daemonset:
    post:
      operationId: kubernetes-restart-daemon-set
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestartDaemonSetCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Restart daemon set
      tags:
      - Kubernetes
  /api/v1/kubernetes/restart/deployment:
    post:
      operationId: kubernetes-restart-deployment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestartDeploymentCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Restart deployment
      tags:
      - Kubernetes
  /api/v1/kubernetes/restart/sts:
    post:
      operationId: kubernetes-restart-sts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestartStsCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Restart stateful set
      tags:
      - Kubernetes
  /api/v1/kubernetes/silencemanager:
    post:
      operationId: kubernetes-silence-manager
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SilenceOperationsCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Silence management for k8s alerts
      tags:
      - Kubernetes
  /api/v1/kubernetes/patch/crd:
    post:
      operationId: kubernetes-patch-crd
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchCrdCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Patch crd
      tags:
      - Kubernetes
  /api/v1/kubernetes/patch/cronjob:
    post:
      operationId: kubernetes-patch-cron-job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchCronJobCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Patch cron-job
      tags:
      - Kubernetes
  /api/v1/kubernetes/patch/ingress:
    post:
      operationId: kubernetes-patch-ingress
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchIngressCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Patch ingress
      tags:
      - Kubernetes
  /api/v1/kubernetes/patch/job:
    post:
      operationId: kubernetes-patch-job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchJobCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Patch job
      tags:
      - Kubernetes
  /api/v1/kubernetes/patch/node:
    post:
      operationId: kubernetes-patch-node
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchNodeCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Patch node
      tags:
      - Kubernetes
  /api/v1/kubernetes/patch/pdb:
    post:
      operationId: kubernetes-patch-pdb
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchPdbCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Patch pdb
      tags:
      - Kubernetes
  /api/v1/kubernetes/patch/pod:
    post:
      operationId: kubernetes-patch-pod
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchPodCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Patch pod
      tags:
      - Kubernetes
  /api/v1/kubernetes/patch/pvc:
    post:
      operationId: kubernetes-patch-pvc
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchPvcCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Patch pvc
      tags:
      - Kubernetes
  /api/v1/kubernetes/patch/secret:
    post:
      operationId: kubernetes-patch-secret
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchSecretCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Patch secret
      tags:
      - Kubernetes
  /api/v1/kubernetes/patch/sts:
    post:
      operationId: kubernetes-patch-sts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchStsCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Patch sts
      tags:
      - Kubernetes
  /api/v1/kubernetes/{projectId}/download:
    get:
      operationId: kubernetes-download
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Download kube config file
      tags:
      - Kubernetes
  /api/v1/kubernetes/{projectId}/configmap:
    get:
      operationId: kubernetes-config-map-list
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: FilterBy
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigMaps'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve a list of k8s config map for all namespaces
      tags:
      - Kubernetes
  /api/v1/kubernetes/{projectId}/crd:
    get:
      operationId: kubernetes-crd-list
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: FilterBy
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve a list of crd
      tags:
      - Kubernetes
  /api/v1/kubernetes/{projectId}/cronjobs:
    get:
      operationId: kubernetes-cron-job-list
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: FilterBy
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesCronJobsList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve a list of k8s cron jobs for all namespaces
      tags:
      - Kubernetes
  /api/v1/kubernetes/{projectId}/daemonset:
    get:
      operationId: kubernetes-daemon-set-list
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: FilterBy
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DaemonSets'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve list of k8s daemonset
      tags:
      - Kubernetes
  /api/v1/kubernetes/{projectId}/dashboard:
    get:
      operationId: kubernetes-dashboard-list
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve a list of crd
      tags:
      - Kubernetes
  /api/v1/kubernetes/{projectId}/deployment:
    get:
      operationId: kubernetes-deployment-list
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: FilterBy
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deployments'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve a list of k8s deployment for all namespaces
      tags:
      - Kubernetes
  /api/v1/kubernetes/{projectId}/helmreleases:
    get:
      operationId: kubernetes-helm-release-list
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: FilterBy
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelmReleasesList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve a list of k8s helm releases for all namespaces
      tags:
      - Kubernetes
  /api/v1/kubernetes/{projectId}/ingress:
    get:
      operationId: kubernetes-ingress-list
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: FilterBy
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ingresses'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve a list of k8s ingress for all namespaces
      tags:
      - Kubernetes
  /api/v1/kubernetes/{projectId}/jobs:
    get:
      operationId: kubernetes-jobs-list
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: FilterBy
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesJobList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve a list of k8s jobs for all namespaces
      tags:
      - Kubernetes
  /api/v1/kubernetes/{projectId}/kubeconfig:
    get:
      operationId: kubernetes-kube-config
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubeConfigResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve kube config file
      tags:
      - Kubernetes
  /api/v1/kubernetes/{projectId}/alerts:
    get:
      operationId: kubernetes-alert-list
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Type
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: StartDate
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: EndDate
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesAlertList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve a list of alerts for project
      tags:
      - Kubernetes
  /api/v1/kubernetes/{projectId}/namespaces:
    get:
      operationId: kubernetes-namespace-list
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve kube config file
      tags:
      - Kubernetes
  /api/v1/kubernetes/{projectId}/network-policies:
    get:
      operationId: kubernetes-network-policy-list
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: FilterBy
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkPolicies'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve a list of k8s network-policies for all namespaces
      tags:
      - Kubernetes
  /api/v1/kubernetes/{projectId}/node:
    get:
      operationId: kubernetes-node-list
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve a list of k8s node
      tags:
      - Kubernetes
  /api/v1/kubernetes/{projectId}/pdb:
    get:
      operationId: kubernetes-pdb-list
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: FilterBy
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PodDisruptions'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve a list of k8s pdb for all namespaces
      tags:
      - Kubernetes
  /api/v1/kubernetes/{projectId}/pvc:
    get:
      operationId: kubernetes-pvc-list
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: FilterBy
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pvcs'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve a list of k8s pvc for all namespaces
      tags:
      - Kubernetes
  /api/v1/kubernetes/{projectId}/pod:
    get:
      operationId: kubernetes-pod-list
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: FilterBy
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pods'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve a list of k8s pod for all namespaces
      tags:
      - Kubernetes
  /api/v1/kubernetes/{projectId}/secret:
    get:
      operationId: kubernetes-secret-list
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: FilterBy
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secrets'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve a list of k8s secret for all namespaces
      tags:
      - Kubernetes
  /api/v1/kubernetes/{projectId}/service:
    get:
      operationId: kubernetes-service-list
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: FilterBy
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Services'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve a list of k8s service for all namespaces
      tags:
      - Kubernetes
  /api/v1/kubernetes/{projectId}/storageclass:
    get:
      operationId: kubernetes-storage-class-list
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: FilterBy
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageClasses'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve a list of k8s storageclass for all namespaces
      tags:
      - Kubernetes
  /api/v1/kubernetes/{projectId}/sts:
    get:
      operationId: kubernetes-sts-list
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: FilterBy
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StsList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve a list of k8s sts for all namespaces
      tags:
      - Kubernetes
  /api/v1/kubernetes/supported/list:
    get:
      operationId: kubernetes-get-supported-list
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/KubernetesVersionListDto'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve Taikun supported kubernetes versions
      tags:
      - Kubernetes
  /api/v1/kubernetes/overview:
    get:
      operationId: kubernetes-overview
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Overview kubernetes nodes and pods by organization id
      tags:
      - Kubernetes
  /api/v1/kubernetes/describe/configmap:
    post:
      operationId: kubernetes-describe-config-map
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeConfigMapCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Describe configmap
      tags:
      - Kubernetes
  /api/v1/kubernetes/describe/crd:
    post:
      operationId: kubernetes-describe-crd
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeCrdCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Describe crd
      tags:
      - Kubernetes
  /api/v1/kubernetes/describe/cronjob:
    post:
      operationId: kubernetes-describe-cronjob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeCronJobCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Describe cronjob
      tags:
      - Kubernetes
  /api/v1/kubernetes/describe/daemonset:
    post:
      operationId: kubernetes-describe-daemon-set
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDaemonSetCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Describe daemonset
      tags:
      - Kubernetes
  /api/v1/kubernetes/describe/deployment:
    post:
      operationId: kubernetes-describe-deployment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDeploymentCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Describe deployment
      tags:
      - Kubernetes
  /api/v1/kubernetes/describe/ingress:
    post:
      operationId: kubernetes-describe-ingress
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeIngressCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Describe ingress
      tags:
      - Kubernetes
  /api/v1/kubernetes/describe/job:
    post:
      operationId: kubernetes-describe-job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeJobCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Describe job
      tags:
      - Kubernetes
  /api/v1/kubernetes/describe/network-policy:
    post:
      operationId: kubernetes-describe-network-policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeNetworkPolicyCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Describe network policy
      tags:
      - Kubernetes
  /api/v1/kubernetes/describe/node:
    post:
      operationId: kubernetes-describe-node
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeNodeCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Describe node
      tags:
      - Kubernetes
  /api/v1/kubernetes/describe/pdb:
    post:
      operationId: kubernetes-describe-pdb
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribePodDisruptionCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Describe pdb
      tags:
      - Kubernetes
  /api/v1/kubernetes/describe/pod:
    post:
      operationId: kubernetes-describe-pod
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribePodCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Describe pod
      tags:
      - Kubernetes
  /api/v1/kubernetes/describe/pvc:
    post:
      operationId: kubernetes-describe-pvc
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribePvcCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Describe pvc
      tags:
      - Kubernetes
  /api/v1/kubernetes/describe/secret:
    post:
      operationId: kubernetes-describe-secret
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeSecretCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Describe secret
      tags:
      - Kubernetes
  /api/v1/kubernetes/describe/service:
    post:
      operationId: kubernetes-describe-service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeServiceCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Describe service
      tags:
      - Kubernetes
  /api/v1/kubernetes/describe/storageclass:
    post:
      operationId: kubernetes-describe-storage-class
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeStorageClassCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Describe storage class
      tags:
      - Kubernetes
  /api/v1/kubernetes/describe/sts:
    post:
      operationId: kubernetes-describe-sts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeStsCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Describe stateful set
      tags:
      - Kubernetes
  /api/v1/kubernetesprofiles:
    get:
      operationId: kubernetesprofiles-dropdown
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/KubernetesProfilesEntity'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve all kubernetes profiles for organization
      tags:
      - Kubernetes profiles
    post:
      operationId: kubernetesprofiles-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateKubernetesProfileCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Add kubernetes profile
      tags:
      - Kubernetes Profiles
  /api/v1/kubernetesprofiles/list:
    get:
      operationId: kubernetesprofiles-list
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesProfilesList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve all kubernetes profiles
      tags:
      - Kubernetes profiles
  /api/v1/kubernetesprofiles/{id}:
    delete:
      operationId: kubernetesprofiles-delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Delete kubernetes profile
      tags:
      - Kubernetes profiles
  /api/v1/notifications/list:
    get:
      operationId: notifications-list
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: StartDate
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: EndDate
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: FilterBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: ProjectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: UserId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: IsDeleted
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationHistory'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve all notifications
      tags:
      - Kubernetes profiles
  /api/v1/kubernetesprofiles/lockmanager:
    post:
      operationId: kubernetesprofiles-lock-manager
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KubernetesProfilesLockManagerCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Kubernetes profile lock/unlock
      tags:
      - Kubernetes Profiles
  /api/v1/kubespray/list:
    get:
      operationId: kubespray-list
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Kubesprays'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve all kubespray versions
      tags:
      - kubespray
  /api/v1/kubespray:
    post:
      operationId: kubespray-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KubesprayCreateCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Add kubespray
      tags:
      - Kubespray
  /api/v1/kubespray/{id}:
    delete:
      operationId: kubespray-delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Delete kubespray
      tags:
      - Kubespray
  /api/v1/notifications/add:
    post:
      operationId: notifications-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationSendCommand'
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Create notification
      tags:
      - Notifications
  /api/v1/notifications/operations:
    post:
      operationId: notifications-operation-messages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetProjectOperationCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Get project operations
      tags:
      - Notifications
  /api/v1/notifications/notifyowner:
    post:
      operationId: notifications-notify-owner
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotifyOwnersCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Notify owner
      tags:
      - Notifications
  /api/v1/notifications/download:
    get:
      operationId: notifications-export-csv
      parameters:
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: StartDate
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: EndDate
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: FilterBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: ProjectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: UserId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: IsDeleted
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: IsEmailEnabled
        required: true
        schema:
          type: boolean
        style: form
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Export Csv
      tags:
      - Notifications
  /api/v1/ntpservers/edit/{id}:
    put:
      operationId: ntpservers-edit
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsNtpAddressEditDto'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Edit access profile ntp server
      tags:
      - Ntp servers
  /api/v1/ntpservers/create:
    post:
      operationId: ntpservers-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNtpServerCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Create access profile ntp server
      tags:
      - Ntp servers
  /api/v1/ntpservers/list/{accessProfileId}:
    get:
      operationId: ntpservers-list
      parameters:
      - explode: false
        in: path
        name: accessProfileId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NtpServersListDto'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: List ntp server by access profile id
      tags:
      - Ntp servers
  /api/v1/ntpservers/{id}:
    delete:
      operationId: ntpservers-delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Delete access profile ntp server
      tags:
      - Ntp servers
  /api/v1/opaprofiles:
    get:
      operationId: opaprofiles-list
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpaProfileList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve all policy profiles
      tags:
      - Opa Profiles
    put:
      operationId: opaprofiles-update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpaProfileUpdateCommand'
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Update policy profile
      tags:
      - Opa Profiles
  /api/v1/opaprofiles/create:
    post:
      operationId: opaprofiles-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOpaProfileCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Add policy profile
      tags:
      - Opa Profiles
  /api/v1/opaprofiles/disablegatekeeper:
    post:
      operationId: opaprofiles-disable-gatekeeper
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisableGatekeeperCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Disable Gatekeeper by the projectId
      tags:
      - Opa Profiles
  /api/v1/opaprofiles/enablegatekeeper:
    post:
      operationId: opaprofiles-enable-gatekeeper
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableGatekeeperCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Enable Gatekeeper by the projectId
      tags:
      - Opa Profiles
  /api/v1/opaprofiles/lockmanager:
    post:
      operationId: opaprofiles-lock-manager
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpaProfileLockManagerCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Lock/Unlock policy profile
      tags:
      - Opa Profiles
  /api/v1/opaprofiles/make-default:
    post:
      operationId: opaprofiles-make-default
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpaMakeDefaultCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Choose default policy profile
      tags:
      - Opa Profiles
  /api/v1/opaprofiles/sync:
    post:
      operationId: opaprofiles-sync
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpaProfileSyncCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Sync policy profile
      tags:
      - Opa Profiles
  /api/v1/opaprofiles/{id}:
    delete:
      operationId: opaprofiles-delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Remove Opa profile by Id
      tags:
      - Opa Profiles
  /api/v1/opaprofiles/list:
    get:
      operationId: opaprofiles-dropdown
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonExtendedDropdownDto'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve policy profiles for organization
      tags:
      - Opar Profiles
  /api/v1/openstack/create:
    post:
      operationId: openstack-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOpenstackCloudCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Add Openstack credentials
      tags:
      - Openstack cloud credential
  /api/v1/openstack/networks:
    post:
      operationId: openstack-networks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpenStackNetworkListQuery'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonStringBasedDropdownDto'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Openstack network list
      tags:
      - Openstack cloud credential
  /api/v1/openstack/projects:
    post:
      operationId: openstack-projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpenStackProjectListQuery'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonStringBasedDropdownDto'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Openstack project list
      tags:
      - Openstack cloud credential
  /api/v1/openstack/quotas:
    post:
      operationId: openstack-quotas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpenstackQuotasCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenstackQuotaList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Openstack quota list
      tags:
      - Openstack cloud credential
  /api/v1/openstack/regions:
    post:
      operationId: openstack-region-list
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpenStackRegionListQuery'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve Openstack regions
      tags:
      - Openstack cloud credential
  /api/v1/openstack/subnets:
    post:
      operationId: openstack-subnet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpenstackSubnetListQuery'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Subnet'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve Openstack subnets
      tags:
      - Openstack cloud credential
  /api/v1/openstack/update:
    post:
      operationId: openstack-update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOpenStackCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Update Openstack credentials
      tags:
      - Openstack cloud credential
  /api/v1/openstack/volumes:
    post:
      operationId: openstack-volumes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpenstackVolumeTypeListQuery'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Openstack volume list
      tags:
      - Openstack cloud credential
  /api/v1/openstack/zones:
    post:
      operationId: openstack-zones
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpenStackZoneListQuery'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Fetch Openstack zones
      tags:
      - Openstack cloud credential
  /api/v1/openstack/list:
    get:
      operationId: openstack-list
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenstackCredentialList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve list of openstack cloud credentials
      tags:
      - Openstack cloud credential
  /api/v1/opscredentials/list:
    get:
      operationId: opscredentials-list
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCredentials'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve all operation credentials
      tags:
      - Operation credential
  /api/v1/opscredentials:
    get:
      operationId: opscredentials-list-by-organizationId
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OperationCredentialsForOrganizationEntity'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve operation credentials by organization Id
      tags:
      - Operation credential
    post:
      operationId: opscredentials-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationCredentialsCreateCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Add Operation credentials
      tags:
      - Operation credentials
  /api/v1/opscredentials/lockmanager:
    post:
      operationId: opscredentials-lock-manager
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationCredentialLockManagerCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Lock/Unlock operation credential
      tags:
      - Operation Credentials
  /api/v1/opscredentials/makedefault:
    post:
      operationId: opscredentials-make-default
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationCredentialsMakeDefaultCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Choose default operation credential
      tags:
      - Operation Credentials
  /api/v1/opscredentials/{id}:
    delete:
      operationId: opscredentials-delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Remove Operation credential by Id
      tags:
      - Operation Credentials
  /api/v1/organizationsubcriptions/update:
    post:
      operationId: organizationsubcriptions-update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrganizationSubscriptionCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Update subscription
      tags:
      - Organization Subscriptions
  /api/v1/organizationsubcriptions:
    get:
      operationId: organizationsubcriptions-list
      parameters:
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationSubscriptionList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve all organization subscriptions
      tags:
      - Organization Subscriptions
  /api/v1/organizations/accept-offer:
    post:
      operationId: organizations-accept-offer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptOfferCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Accept discount offer
      tags:
      - Organizations
  /api/v1/organizations:
    get:
      operationId: organizations-list
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve all organizations
      tags:
      - Organizations
    post:
      operationId: organizations-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationCreateCommand'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Add a new organization. Only available for admins.
      tags:
      - Organizations
  /api/v1/organizations/leave:
    post:
      operationId: organizations-leave
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeaveTaikunCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaveTaikunDto'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Leave taikun
      tags:
      - Organizations
  /api/v1/organizations/toggle/keycloak:
    post:
      operationId: organizations-toggle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToggleKeycloakCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Toggle keycloak login option
      tags:
      - Organizations
  /api/v1/organizations/update:
    post:
      operationId: organizations-update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrganizationCommand'
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Update organization by Id
      tags:
      - Organizations
  /api/v1/organizations/updatepaymentmethod:
    post:
      operationId: organizations-update-payment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePaymentIdCommand'
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Update organization payment Id
      tags:
      - Organizations
  /api/v1/organizations/details:
    get:
      operationId: organizations-detawils
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardChart'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve all data about current organization by Id
      tags:
      - Organizations
  /api/v1/organizations/export:
    get:
      operationId: organizations-export-csv
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Export Csv file
      tags:
      - Organizations
  /api/v1/organizations/list:
    get:
      operationId: organizations-organization-list
      parameters:
      - explode: true
        in: query
        name: PartnerId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonDropdownDto'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve organizations
      tags:
      - Organizations
  /api/v1/organizations/{id}:
    delete:
      operationId: organizations-delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Delete the specified organization. Only available for admins.
      tags:
      - Organizations
  /api/v1/package/value:
    post:
      operationId: package-value
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCatalogAppValueCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Get yaml based value
      tags:
      - Package
  /api/v1/package/value-autocomplete:
    post:
      operationId: package-value-autocomplete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCatalogAppValueAutocompleteCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PackageAutocompleteDto'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Get autocomplete dictionary
      tags:
      - Package
  /api/v1/package/versions:
    post:
      operationId: package-versions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListCatalogAppAvailableVersionsCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Get available versions
      tags:
      - Package
  /api/v1/package/{repoName}/{packageName}:
    get:
      operationId: package-details
      parameters:
      - explode: false
        in: path
        name: repoName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: packageName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailablePackageDetailsDto'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Server Error
      tags:
      - Package
  /api/v1/package/list:
    get:
      operationId: package-list
      parameters:
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: CatalogId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailablePackagesList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve all available packages
      tags:
      - Package
  /api/v1/partner/add/whitelist/domain:
    post:
      operationId: partner-add/whitelist/domain
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WhiteListDomainCreateCommand'
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Add white list domain
      tags:
      - Partners
  /api/v1/partner/become-a-partner:
    post:
      operationId: partner-become-a-partner
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BecomePartnerCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Become a partner
      tags:
      - Partners
  /api/v1/partner/bindorganizations:
    post:
      operationId: partner-bind-organizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BindOrganizationsCommand'
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Bind organizations to a partner
      tags:
      - Partners
  /api/v1/partner/contact-us:
    post:
      operationId: partner-contact-us
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactUsCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Contact with us
      tags:
      - Partners
  /api/v1/partner/delete/whitelist/domain:
    post:
      operationId: partner-delete/whitelist/domain
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WhiteListDomainDeleteCommand'
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Delete white list domain
      tags:
      - Partners
  /api/v1/partner/details:
    get:
      operationId: partner-details
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerDetailsDto'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Details of partners
      tags:
      - Partners
  /api/v1/partner:
    get:
      operationId: partner-list
      parameters:
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnersList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Get partners
      tags:
      - Partners
  /api/v1/partner/info:
    get:
      operationId: partner-info
      parameters:
      - explode: true
        in: query
        name: Domain
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerRecordDto'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Get partner's registration info
      tags:
      - Partners
  /api/v1/partner/list:
    get:
      operationId: partner-dropdown
      parameters:
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PartnerEntity'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Get partners dropdown
      tags:
      - Partners
  /api/v1/payment/cardinfo:
    get:
      operationId: payment-cardinfo
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardInformationDto'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Get card information
      tags:
      - Payment
  /api/v1/payment/stripeinvoices/{subscriptionId}:
    get:
      operationId: payment-get-stripe-invoices
      parameters:
      - explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StripeInvoices'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Server Error
      tags:
      - Payment
  /api/v1/payment/billing-info:
    get:
      operationId: payment-billing-info
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingInfoDto'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Get billing info for organization
      tags:
      - Payment
  /api/v1/payment/clear:
    post:
      operationId: payment-clear
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClearCanceledPaymentMethodCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Clear payment
      tags:
      - Payments
  /api/v1/payment/createcustomer:
    post:
      operationId: payment-create-customer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStripeCustomerCommand'
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Create customer
      tags:
      - Payments
  /api/v1/payment/finalprice:
    post:
      operationId: payment-final-price
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FinalPriceCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinalPriceDto'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Fetch final price
      tags:
      - Payments
  /api/v1/payment/pay:
    post:
      operationId: payment-pay
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayInvoiceCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IResult'
          description: OK
      summary: Pay invoice
      tags:
      - Payments
  /api/v1/payment/updatecard:
    post:
      operationId: payment-update-card
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeCardCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Update payment card
      tags:
      - Payments
  /api/v1/payment/webhook:
    post:
      operationId: payment-webhook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentWebhookCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Listen to payment webhook
      tags:
      - Payments
  /api/v1/predefinedqueries/prometheus/dashboard/create:
    post:
      operationId: predefinedqueries-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrometheusDashboardCreateCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Create prometheus dashboard pre defined query
      tags:
      - Pre-defined queries
  /api/v1/predefinedqueries/prometheus/dashboard/update:
    post:
      operationId: predefinedqueries-update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrometheusDashboardUpdateCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Update prometheus dashboard pre defined query
      tags:
      - Pre-defined queries
  /api/v1/predefinedqueries/prometheus/dashboard/common/{projectId}:
    get:
      operationId: predefinedqueries-prometheus-dashboard-common
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PrometheusDashboardListDto'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: et list of pre defined common prometheus dashboard elements
      tags:
      - Pre-defined queries
  /api/v1/predefinedqueries/prometheus/dashboard/list/{projectId}:
    get:
      operationId: predefinedqueries-list
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PrometheusDashboardListDto'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Get list of pre defined organization prometheus dashboard elements
      tags:
      - Pre-defined queries
  /api/v1/predefinedqueries/prometheus/dashboard/delete/{id}:
    delete:
      operationId: predefinedqueries-delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Delete prometheus dashboard pre defined query
      tags:
      - Pre-defined queries
  /api/v1/projectactions/edit/{projectId}:
    put:
      operationId: projectactions-edit
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectActionUpdateDto'
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Update project action by projectId
      tags:
      - Project actions
  /api/v1/projectactions/{projectId}:
    delete:
      operationId: projectactions-delete
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Delete the project action
      tags:
      - Project actions
  /api/v1/projectappparam/edit/{projectAppId}:
    put:
      operationId: projectappparam-edit
      parameters:
      - explode: false
        in: path
        name: projectAppId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/EditProjectAppParamsDto'
              type: array
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Edit project app params
      tags:
      - Project app params
  /api/v1/projectapp/autosync:
    post:
      operationId: projectapp-autosync
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutoSyncManagementCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: AutoSync management
      tags:
      - Project apps
  /api/v1/projectapp/install:
    post:
      operationId: projectapp-install
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectAppCommand'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Install an application
      tags:
      - Project apps
  /api/v1/projectapp/lockmanager:
    post:
      operationId: projectapp-lock-manager
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LockProjectAppCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Lock/Unlock project app
      tags:
      - Project apps
  /api/v1/projectapp/sync:
    post:
      operationId: projectapp-sync
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncProjectAppCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Sync an application
      tags:
      - Project apps
  /api/v1/projectapp/{id}:
    get:
      operationId: projectapp-details
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectAppDetailsDto'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve project app's details
      tags:
      - Project apps
  /api/v1/projectapp/list:
    get:
      operationId: projectapp-list
      parameters:
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectAppList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve all project apps according to current organization
      tags:
      - Project apps
  /api/v1/projectapp/uninstall/{projectAppId}:
    delete:
      operationId: projectapp-delete
      parameters:
      - explode: false
        in: path
        name: projectAppId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Uninstall application
      tags:
      - Project apps
  /api/v1/projectgroups/update/{projectGroupId}:
    put:
      operationId: projectgroups-edit
      parameters:
      - explode: false
        in: path
        name: projectGroupId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectGroupDto'
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Update project groups
      tags:
      - Project groups
  /api/v1/projectgroups/bind:
    post:
      operationId: projectgroups-bind
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BindUserGroupsToProjectGroupCommand'
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Bind User groups
      tags:
      - Project groups
  /api/v1/projectgroups/create:
    post:
      operationId: projectgroups-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectGroupCommand'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Add Project groups
      tags:
      - Project groups
  /api/v1/projectgroups/list:
    get:
      operationId: projectgroups-list
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectGroupList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve list of Project groups
      tags:
      - Project groups
  /api/v1/projectgroups/list/{userGroupId}:
    get:
      operationId: projectgroups-list-by-user-id
      parameters:
      - explode: false
        in: path
        name: userGroupId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonDropdownDto'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve list of Project groups by user group id for dropdown
      tags:
      - Project groups
  /api/v1/projectgroups/{projectGroupId}/projects:
    get:
      operationId: projectgroups-project-list
      parameters:
      - explode: false
        in: path
        name: projectGroupId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: OrganizationId
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectListForProjectGroupDto'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve list of projects by project group id
      tags:
      - Project groups
  /api/v1/projectgroups:
    delete:
      operationId: projectgroups-delete
      requestBody:
        content:
          application/json:
            schema:
              items:
                format: int32
                type: integer
              type: array
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Remove Project group(s)
      tags:
      - Project groups
  /api/v1/s3credentials:
    get:
      operationId: s3credentials-dropdown
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BackupCredentialsForOrganizationEntity'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve all S3 credentials for organization
      tags:
      - S3 Credentials
    post:
      operationId: s3credentials-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupCredentialsCreateCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Add s3 credential
      tags:
      - S3 Credentials
    put:
      operationId: s3credentials-update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupCredentialsUpdateCommand'
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Update s3 credential
      tags:
      - S3 Credentials
  /api/v1/s3credentials/lockmanager:
    post:
      operationId: s3credentials-lock-management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupLockManagerCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Lock/unlock s3 credential
      tags:
      - S3 Credentials
  /api/v1/s3credentials/makedefault:
    post:
      operationId: s3credentials-make-deafult
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupMakeDefaultCommand'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Make default s3 credential
      tags:
      - S3 Credentials
  /api/v1/s3credentials/list:
    get:
      operationId: s3credentials-list
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupCredentials'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Retrieve all S3 credentials
      tags:
      - S3 Credentials
  /api/v1/s3credentials/{id}:
    delete:
      operationId: s3credentials-delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Delete s3 credential
      tags:
      - S3 Credentials
  /api/v1/search/access-profiles:
    post:
      operationId: search-access-profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessProfilesSearchCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessProfilesSearchList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Global search for access-profiles
      tags:
      - Search
  /api/v1/search/backup-credentials:
    post:
      operationId: search-backup-credentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupCredentialsSearchCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupCredentialsSearchList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Global search for backup-credentials
      tags:
      - Search
  /api/v1/search/billing-credentials:
    post:
      operationId: search-billing-credentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillingCredentialsSearchCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingCredentialsSearchList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Global search for billing-credentials
      tags:
      - Search
  /api/v1/search/cloud-credentials:
    post:
      operationId: search-cloud-credentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudCredentialsSearchCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudCredentialsSearchList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Global search for cloud-credentials
      tags:
      - Search
  /api/v1/search/config-maps:
    post:
      operationId: search-config-maps
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigMapSearchCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigMapSearchList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Global search for config-maps
      tags:
      - Search
  /api/v1/search/daemon-sets:
    post:
      operationId: search-daemon-sets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DaemonSetSearchCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DaemonSetSearchList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Global search for daemon-sets
      tags:
      - Search
  /api/v1/search/deployments:
    post:
      operationId: search-deployments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeploymentSearchCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentSearchList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Global search for deployments
      tags:
      - Search
  /api/v1/search/ingress:
    post:
      operationId: search-ingress
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IngressSearchCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngressSearchList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Global search for ingress
      tags:
      - Search
  /api/v1/search/kubernetes-profiles:
    post:
      operationId: search-kubernetes-profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KubernetesProfilesSearchCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesProfilesSearchList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Global search for kubernetes-profiles
      tags:
      - Search
  /api/v1/search/nodes:
    post:
      operationId: search-nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodesSearchCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesSearchList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Global search for nodes
      tags:
      - Search
  /api/v1/search/organizations:
    post:
      operationId: search-organizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationSearchCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationSearchList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Global search for organizations
      tags:
      - Search
  /api/v1/search/partners:
    post:
      operationId: search-partners
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnersSearchCommand'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnersSearchList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Global search for partners
      tags:
      - Search
  /api/v1/search/pvcs:
    post:
      operationId: search-pvcs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PvcSearchCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PvcSearchList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Global search for pvcs
      tags:
      - Search
  /api/v1/search/pods:
    post:
      operationId: search-pods
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PodsSearchCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PodsSearchList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Global search for pods
      tags:
      - Search
  /api/v1/search/projects:
    post:
      operationId: search-projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectsSearchCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsSearchList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Global search for projects
      tags:
      - Search
  /api/v1/search/prometheus-rules:
    post:
      operationId: search-prometheus-rules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrometheusRulesSearchCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrometheusRulesSearchList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Global search for prometheus-rules
      tags:
      - Search
  /api/v1/search/secrets:
    post:
      operationId: search-secrets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretSearchCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretSearchList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Global search for secrets
      tags:
      - Search
  /api/v1/search/servers:
    post:
      operationId: search-servers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServersSearchCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServersSearchList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Global search for servers
      tags:
      - Search
  /api/v1/search/services:
    post:
      operationId: search-services
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceSearchCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceSearchList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Global search for services
      tags:
      - Search
  /api/v1/search/stand-alone-profiles:
    post:
      operationId: search-stand-alone-profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StandAloneProfilesSearchCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandAloneProfilesSearchList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Global search for stand-alone-profiles
      tags:
      - Search
  /api/v1/search/sts:
    post:
      operationId: search-sts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StsSearchCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StsSearchList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Global search for sts
      tags:
      - Search
  /api/v1/search/users:
    post:
      operationId: search-users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersSearchCommand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersSearchList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Global search for users
      tags:
      - Search
  /api/v1/securitygroup/edit:
    put:
      operationId: securitygroup-edit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditSecurityGroupCommand'
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Edit standalone profile security group
      tags:
      - Security group
  /api/v1/securitygroup/create:
    post:
      operationId: securitygroup-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSecurityGroupCommand'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Create standalonealone profile security group
      tags:
      - Security group
  /api/v1/securitygroup/list/{standAloneProfileId}:
    get:
      operationId: securitygroup-list
      parameters:
      - explode: false
        in: path
        name: standAloneProfileId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SecurityGroupListDto'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: List stand alone security group by profile id
      tags:
      - Security group
  /api/v1/securitygroup/{id}:
    delete:
      operationId: securitygroup-delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
      summary: Delete standalone profile security group
      tags:
      - Security group
components:
  schemas:
    AcceptOfferCommand:
      additionalProperties: false
      type: object
    AccessProfilesList:
      additionalProperties: false
      example:
        data:
        - allowedHosts:
          - accessProfileName: accessProfileName
            ipAddress: ipAddress
            description: description
            accessProfileId: 7
            id: 5
            maskBits: 2
          - accessProfileName: accessProfileName
            ipAddress: ipAddress
            description: description
            accessProfileId: 7
            id: 5
            maskBits: 2
          projects:
          - name: name
            id: 0
          - name: name
            id: 0
          organizationName: organizationName
          httpProxy: httpProxy
          lastModifiedBy: lastModifiedBy
          organizationId: 6
          createdAt: createdAt
          createdBy: createdBy
          ntpServers:
          - address: address
            id: 5
          - address: address
            id: 5
          isLocked: true
          name: name
          id: 0
          lastModified: lastModified
          dnsServers:
          - address: address
            id: 1
          - address: address
            id: 1
        - allowedHosts:
          - accessProfileName: accessProfileName
            ipAddress: ipAddress
            description: description
            accessProfileId: 7
            id: 5
            maskBits: 2
          - accessProfileName: accessProfileName
            ipAddress: ipAddress
            description: description
            accessProfileId: 7
            id: 5
            maskBits: 2
          projects:
          - name: name
            id: 0
          - name: name
            id: 0
          organizationName: organizationName
          httpProxy: httpProxy
          lastModifiedBy: lastModifiedBy
          organizationId: 6
          createdAt: createdAt
          createdBy: createdBy
          ntpServers:
          - address: address
            id: 5
          - address: address
            id: 5
          isLocked: true
          name: name
          id: 0
          lastModified: lastModified
          dnsServers:
          - address: address
            id: 1
          - address: address
            id: 1
        totalCount: 9
      properties:
        data:
          items:
            $ref: '#/components/schemas/AccessProfilesListDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    AccessProfilesListDto:
      additionalProperties: false
      example:
        allowedHosts:
        - accessProfileName: accessProfileName
          ipAddress: ipAddress
          description: description
          accessProfileId: 7
          id: 5
          maskBits: 2
        - accessProfileName: accessProfileName
          ipAddress: ipAddress
          description: description
          accessProfileId: 7
          id: 5
          maskBits: 2
        projects:
        - name: name
          id: 0
        - name: name
          id: 0
        organizationName: organizationName
        httpProxy: httpProxy
        lastModifiedBy: lastModifiedBy
        organizationId: 6
        createdAt: createdAt
        createdBy: createdBy
        ntpServers:
        - address: address
          id: 5
        - address: address
          id: 5
        isLocked: true
        name: name
        id: 0
        lastModified: lastModified
        dnsServers:
        - address: address
          id: 1
        - address: address
          id: 1
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        httpProxy:
          nullable: true
          type: string
        organizationId:
          format: int32
          nullable: true
          type: integer
        organizationName:
          nullable: true
          type: string
        isLocked:
          type: boolean
        dnsServers:
          items:
            $ref: '#/components/schemas/DnsServerListDto'
          nullable: true
          type: array
        ntpServers:
          items:
            $ref: '#/components/schemas/NtpServerListDto'
          nullable: true
          type: array
        allowedHosts:
          items:
            $ref: '#/components/schemas/AllowedHostListDto'
          nullable: true
          type: array
        projects:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          nullable: true
          type: array
        createdBy:
          nullable: true
          type: string
        lastModified:
          nullable: true
          type: string
        lastModifiedBy:
          nullable: true
          type: string
        createdAt:
          nullable: true
          type: string
      type: object
    AccessProfilesLockManagementCommand:
      additionalProperties: false
      example:
        mode: mode
        id: 0
      properties:
        id:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        mode:
          minLength: 1
          type: string
      required:
      - id
      - mode
      type: object
    AccessProfilesSearchCommand:
      additionalProperties: false
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          nullable: true
          type: integer
        offset:
          format: int32
          nullable: true
          type: integer
        searchTerm:
          nullable: true
          type: string
      type: object
    AccessProfilesSearchList:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          name: name
          id: 0
        - organizationId: 6
          organizationName: organizationName
          name: name
          id: 0
        totalCount: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/CommonSearchResponseData'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    ActionStatus:
      enum:
      - 0
      - 1
      - 2
      format: int32
      type: integer
    ActionType:
      enum:
      - 10
      - 20
      - 30
      - 32
      - 34
      - 36
      - 38
      - 40
      - 42
      - 44
      - 50
      - 60
      - 70
      - 80
      - 90
      - 100
      - 105
      - 106
      - 107
      - 108
      - 109
      - 110
      - 120
      - 130
      - 140
      - 150
      - 155
      - 156
      - 160
      - 165
      - 170
      - 175
      - 176
      - 177
      - 180
      - 190
      - 200
      - 210
      - 220
      - 230
      - 240
      - 250
      - 260
      - 270
      - 280
      - 290
      - 300
      - 310
      - 320
      - 330
      - 340
      - 350
      - 360
      - 370
      - 380
      - 390
      - 400
      - 410
      format: int32
      type: integer
    AdminAddBalanceCommand:
      additionalProperties: false
      example:
        balance: 8009
        customerId: customerId
      properties:
        customerId:
          minLength: 1
          type: string
        balance:
          format: int64
          maximum: 100000
          minimum: 1
          type: integer
      required:
      - customerId
      type: object
    AdminBillingOperationCommand:
      additionalProperties: false
      example:
        cloudCredentialId: 0
      properties:
        cloudCredentialId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
      required:
      - cloudCredentialId
      type: object
    AdminOrganizationsDeleteCommand:
      additionalProperties: false
      example:
        id: 0
      properties:
        id:
          format: int32
          type: integer
      type: object
    AdminOrganizationsList:
      additionalProperties: false
      example:
        data:
        - partnerName: partnerName
          partnerLogo: partnerLogo
          name: name
          customerId: customerId
          id: 0
        - partnerName: partnerName
          partnerLogo: partnerLogo
          name: name
          customerId: customerId
          id: 0
        totalCount: 6
      properties:
        data:
          items:
            $ref: '#/components/schemas/AdminOrganizationsListDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    AdminOrganizationsListDto:
      additionalProperties: false
      example:
        partnerName: partnerName
        partnerLogo: partnerLogo
        name: name
        customerId: customerId
        id: 0
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        customerId:
          nullable: true
          type: string
        partnerName:
          nullable: true
          type: string
        partnerLogo:
          nullable: true
          type: string
      type: object
    AdminProjectUpdateCommand:
      additionalProperties: false
      example:
        kubernetesCurrentVersion: kubernetesCurrentVersion
        kubesprayCurrentVersion: kubesprayCurrentVersion
        id: 0
      properties:
        id:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        kubernetesCurrentVersion:
          maxLength: 15
          minLength: 3
          pattern: "^v\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}"
          type: string
        kubesprayCurrentVersion:
          maxLength: 15
          minLength: 3
          pattern: "^v\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}"
          type: string
      required:
      - id
      - kubernetesCurrentVersion
      - kubesprayCurrentVersion
      type: object
    AdminProjectsList:
      additionalProperties: false
      example:
        data:
        - createdAt: createdAt
          organizationName: organizationName
          isLocked: true
          tcu: 1
          name: name
          serversCount: 6
          kubernetesCurrentVersion: kubernetesCurrentVersion
          kubesprayCurrentVersion: kubesprayCurrentVersion
          id: 0
          status: status
        - createdAt: createdAt
          organizationName: organizationName
          isLocked: true
          tcu: 1
          name: name
          serversCount: 6
          kubernetesCurrentVersion: kubernetesCurrentVersion
          kubesprayCurrentVersion: kubesprayCurrentVersion
          id: 0
          status: status
        totalCount: 5
      properties:
        data:
          items:
            $ref: '#/components/schemas/AdminProjectsResponseData'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    AdminProjectsResponseData:
      additionalProperties: false
      example:
        createdAt: createdAt
        organizationName: organizationName
        isLocked: true
        tcu: 1
        name: name
        serversCount: 6
        kubernetesCurrentVersion: kubernetesCurrentVersion
        kubesprayCurrentVersion: kubesprayCurrentVersion
        id: 0
        status: status
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        organizationName:
          nullable: true
          type: string
        isLocked:
          type: boolean
        kubernetesCurrentVersion:
          nullable: true
          type: string
        kubesprayCurrentVersion:
          nullable: true
          type: string
        status:
          nullable: true
          type: string
        serversCount:
          format: int32
          type: integer
        tcu:
          format: int32
          type: integer
        createdAt:
          nullable: true
          type: string
      type: object
    AdminUpdateProjectKubeConfigCommand:
      additionalProperties: false
      example:
        projectId: 0
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
      required:
      - projectId
      type: object
    AdminUpdateUserKubeConfigCommand:
      additionalProperties: false
      example:
        id: 0
      properties:
        id:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
      required:
      - id
      type: object
    AdminUserCreateCommand:
      additionalProperties: false
      example:
        organizationId: 0
        password: password
        role: null
        email: email
        username: username
      properties:
        email:
          format: email
          maxLength: 2000
          minLength: 3
          type: string
        username:
          maxLength: 30
          minLength: 3
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        password:
          allOf:
          - pattern: "[A-Z]"
          - pattern: "[a-z]"
          - pattern: "[0-9]"
          - pattern: \W|_
          maxLength: 200
          minLength: 6
          type: string
        role:
          $ref: '#/components/schemas/UserRole'
        organizationId:
          format: int32
          nullable: true
          type: integer
      required:
      - email
      - password
      - username
      type: object
    AdminUsersList:
      additionalProperties: false
      example:
        data:
        - owner: true
          role: role
          organizationName: organizationName
          name: name
          id: id
          csm: true
          email: email
        - owner: true
          role: role
          organizationName: organizationName
          name: name
          id: id
          csm: true
          email: email
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/AdminUsersResponseData'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    AdminUsersResponseData:
      additionalProperties: false
      example:
        owner: true
        role: role
        organizationName: organizationName
        name: name
        id: id
        csm: true
        email: email
      properties:
        id:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        role:
          nullable: true
          type: string
        organizationName:
          nullable: true
          type: string
        owner:
          type: boolean
        csm:
          type: boolean
      type: object
    AdminUsersUpdateEmailCommand:
      additionalProperties: false
      example:
        id: id
        email: email
      properties:
        id:
          minLength: 1
          type: string
        email:
          format: email
          nullable: true
          type: string
      required:
      - id
      type: object
    AdminUsersUpdatePasswordCommand:
      additionalProperties: false
      example:
        password: password
        id: id
      properties:
        id:
          minLength: 1
          type: string
        password:
          allOf:
          - pattern: "[A-Z]"
          - pattern: "[a-z]"
          - pattern: "[0-9]"
          - pattern: \W|_
          minLength: 6
          type: string
      required:
      - id
      - password
      type: object
    AlertingEmailDto:
      additionalProperties: false
      example:
        email: email
      properties:
        email:
          format: email
          minLength: 1
          type: string
      required:
      - email
      type: object
    AlertingIntegrationDto:
      additionalProperties: false
      example:
        url: url
        token: token
        alertingIntegrationType: null
      properties:
        url:
          minLength: 1
          type: string
        token:
          nullable: true
          type: string
        alertingIntegrationType:
          $ref: '#/components/schemas/AlertingIntegrationType'
      required:
      - alertingIntegrationType
      - url
      type: object
    AlertingIntegrationType:
      enum:
      - 100
      - 200
      - 300
      - 400
      format: int32
      type: integer
    AlertingIntegrationsListDto:
      additionalProperties: false
      example:
        alertingProfileName: alertingProfileName
        id: 0
        url: url
        token: token
        alertingIntegrationType: alertingIntegrationType
      properties:
        id:
          format: int32
          type: integer
        url:
          nullable: true
          type: string
        token:
          nullable: true
          type: string
        alertingIntegrationType:
          nullable: true
          type: string
        alertingProfileName:
          nullable: true
          type: string
      type: object
    AlertingProfilesList:
      additionalProperties: false
      example:
        data:
        - slackConfigurationId: 1
          projects:
          - name: name
            id: 0
          - name: name
            id: 0
          organizationName: organizationName
          reminder: reminder
          slackConfigurationName: slackConfigurationName
          lastModifiedBy: lastModifiedBy
          organizationId: 6
          emails:
          - email: email
          - email: email
          createdAt: createdAt
          webhooks:
          - headers:
            - id: 6
              value: value
              key: key
            - id: 6
              value: value
              key: key
            id: 0
            url: url
          - headers:
            - id: 6
              value: value
              key: key
            - id: 6
              value: value
              key: key
            id: 0
            url: url
          createdBy: createdBy
          isLocked: true
          name: name
          id: 0
          lastModified: lastModified
        - slackConfigurationId: 1
          projects:
          - name: name
            id: 0
          - name: name
            id: 0
          organizationName: organizationName
          reminder: reminder
          slackConfigurationName: slackConfigurationName
          lastModifiedBy: lastModifiedBy
          organizationId: 6
          emails:
          - email: email
          - email: email
          createdAt: createdAt
          webhooks:
          - headers:
            - id: 6
              value: value
              key: key
            - id: 6
              value: value
              key: key
            id: 0
            url: url
          - headers:
            - id: 6
              value: value
              key: key
            - id: 6
              value: value
              key: key
            id: 0
            url: url
          createdBy: createdBy
          isLocked: true
          name: name
          id: 0
          lastModified: lastModified
        totalCount: 5
      properties:
        data:
          items:
            $ref: '#/components/schemas/AlertingProfilesListDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    AlertingProfilesListDto:
      additionalProperties: false
      example:
        slackConfigurationId: 1
        projects:
        - name: name
          id: 0
        - name: name
          id: 0
        organizationName: organizationName
        reminder: reminder
        slackConfigurationName: slackConfigurationName
        lastModifiedBy: lastModifiedBy
        organizationId: 6
        emails:
        - email: email
        - email: email
        createdAt: createdAt
        webhooks:
        - headers:
          - id: 6
            value: value
            key: key
          - id: 6
            value: value
            key: key
          id: 0
          url: url
        - headers:
          - id: 6
            value: value
            key: key
          - id: 6
            value: value
            key: key
          id: 0
          url: url
        createdBy: createdBy
        isLocked: true
        name: name
        id: 0
        lastModified: lastModified
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        organizationId:
          format: int32
          nullable: true
          type: integer
        organizationName:
          nullable: true
          type: string
        slackConfigurationId:
          format: int32
          nullable: true
          type: integer
        slackConfigurationName:
          nullable: true
          type: string
        isLocked:
          type: boolean
        emails:
          items:
            $ref: '#/components/schemas/AlertingEmailDto'
          nullable: true
          type: array
        webhooks:
          items:
            $ref: '#/components/schemas/AlertingWebhookDto'
          nullable: true
          type: array
        projects:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          nullable: true
          type: array
        createdBy:
          nullable: true
          type: string
        lastModified:
          nullable: true
          type: string
        lastModifiedBy:
          nullable: true
          type: string
        reminder:
          nullable: true
          type: string
        createdAt:
          nullable: true
          type: string
      type: object
    AlertingProfilesLockManagerCommand:
      additionalProperties: false
      example:
        mode: mode
        id: 0
      properties:
        id:
          format: int32
          type: integer
        mode:
          nullable: true
          type: string
      type: object
    AlertingReminder:
      enum:
      - 100
      - 200
      - 300
      - -1
      format: int32
      type: integer
    AlertingWebhookDto:
      additionalProperties: false
      example:
        headers:
        - id: 6
          value: value
          key: key
        - id: 6
          value: value
          key: key
        id: 0
        url: url
      properties:
        id:
          format: int32
          type: integer
        url:
          nullable: true
          type: string
        headers:
          items:
            $ref: '#/components/schemas/WebhookHeaderDto'
          nullable: true
          type: array
      type: object
    AllFlavorsList:
      additionalProperties: false
      example:
        data:
        - maxDataDiskCount: 1.4658129805029452
          name: name
          cpu: 6
          description: ""
          ram: 0
        - maxDataDiskCount: 1.4658129805029452
          name: name
          cpu: 6
          description: ""
          ram: 0
        cloudType: cloudType
        totalCount: 5
      properties:
        data:
          items:
            $ref: '#/components/schemas/FlavorsListDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
        cloudType:
          nullable: true
          type: string
      type: object
    AllowedHostCreateDto:
      additionalProperties: false
      example:
        ipAddress: ipAddress
        description: description
        maskBits: 19
      properties:
        description:
          nullable: true
          type: string
        ipAddress:
          minLength: 1
          type: string
        maskBits:
          format: int32
          maximum: 32
          minimum: 0
          type: integer
      required:
      - ipAddress
      type: object
    AllowedHostList:
      additionalProperties: false
      example:
        data:
        - accessProfileName: accessProfileName
          ipAddress: ipAddress
          description: description
          accessProfileId: 7
          id: 5
          maskBits: 2
        - accessProfileName: accessProfileName
          ipAddress: ipAddress
          description: description
          accessProfileId: 7
          id: 5
          maskBits: 2
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/AllowedHostListDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    AllowedHostListDto:
      additionalProperties: false
      example:
        accessProfileName: accessProfileName
        ipAddress: ipAddress
        description: description
        accessProfileId: 7
        id: 5
        maskBits: 2
      properties:
        id:
          format: int32
          type: integer
        description:
          nullable: true
          type: string
        ipAddress:
          nullable: true
          type: string
        maskBits:
          format: int32
          type: integer
        accessProfileId:
          format: int32
          type: integer
        accessProfileName:
          nullable: true
          type: string
      type: object
    AmazonAvailabilityZonesCommand:
      additionalProperties: false
      example:
        awsAccessKeyId: awsAccessKeyId
        cloudId: 0
        region: region
        awsSecretAccessKey: awsSecretAccessKey
      properties:
        region:
          nullable: true
          type: string
        awsAccessKeyId:
          nullable: true
          type: string
        awsSecretAccessKey:
          nullable: true
          type: string
        cloudId:
          format: int32
          nullable: true
          type: integer
      type: object
    AmazonCredentialsListDto:
      additionalProperties: false
      example:
        projectCount: 6
        projects:
        - name: name
          id: 0
        - name: name
          id: 0
        organizationName: organizationName
        lastModifiedBy: lastModifiedBy
        availabilityZones:
        - availabilityZones
        - availabilityZones
        organizationId: 1
        createdAt: createdAt
        isDefault: true
        createdBy: createdBy
        isLocked: true
        name: name
        id: 0
        lastModified: lastModified
        region: region
        continentName: continentName
      properties:
        id:
          format: int32
          type: integer
        projectCount:
          format: int32
          type: integer
        isLocked:
          type: boolean
        name:
          nullable: true
          type: string
        region:
          nullable: true
          type: string
        availabilityZones:
          items:
            type: string
          nullable: true
          type: array
        projects:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          nullable: true
          type: array
        createdBy:
          nullable: true
          type: string
        lastModified:
          nullable: true
          type: string
        lastModifiedBy:
          nullable: true
          type: string
        isDefault:
          type: boolean
        organizationId:
          format: int32
          type: integer
        organizationName:
          nullable: true
          type: string
        createdAt:
          nullable: true
          type: string
        continentName:
          nullable: true
          type: string
      type: object
    Annotations:
      additionalProperties: false
      example:
        description: description
        title: title
      properties:
        description:
          nullable: true
          type: string
        title:
          nullable: true
          type: string
      type: object
    ApiResponse:
      additionalProperties: false
      example:
        result: ""
        isError: true
        id: id
        message: message
        status: 0
      properties:
        id:
          nullable: true
          type: string
        status:
          format: int32
          type: integer
        message:
          nullable: true
          type: string
        isError:
          type: boolean
        result:
          nullable: true
      type: object
    ArtifactUrlCheckerCommand:
      additionalProperties: false
      example:
        name: name
        url: url
      properties:
        url:
          nullable: true
          pattern: "^(http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\\
            /([\\w#!:.?+=&%@!\\-\\/]))?"
          type: string
        name:
          minLength: 1
          type: string
      required:
      - name
      type: object
    AttachDetachAlertingProfileCommand:
      additionalProperties: false
      example:
        alertingProfileId: 6
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        alertingProfileId:
          format: int32
          nullable: true
          type: integer
      type: object
    AutoSyncManagementCommand:
      additionalProperties: false
      example:
        mode: mode
        id: 0
      properties:
        id:
          format: int32
          type: integer
        mode:
          nullable: true
          type: string
      type: object
    AutoUpgradeProjectsCommand:
      additionalProperties: false
      type: object
    AutoscalingSyncCommand:
      additionalProperties: false
      example:
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
      type: object
    AvailablePackageDetailsDto:
      additionalProperties: false
      example:
        appVersion: appVersion
        packageId: packageId
        description: description
        securityReport:
          high: 7
          critical: 2
          low: 2
          medium: 9
          unknown: 3
        official: true
        readme: readme
        stars: 0
        version: version
        verifiedPublisher: true
        appRepoOrganizationName: appRepoOrganizationName
        appRepoName: appRepoName
        appRepoId: appRepoId
        hasJsonSchema: true
        name: name
        boundCatalogs:
        - name: name
          id: 0
        - name: name
          id: 0
        logoId: logoId
      properties:
        name:
          nullable: true
          type: string
        appRepoName:
          nullable: true
          type: string
        appRepoOrganizationName:
          nullable: true
          type: string
        appRepoId:
          nullable: true
          type: string
        packageId:
          nullable: true
          type: string
        logoId:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        readme:
          nullable: true
          type: string
        version:
          nullable: true
          type: string
        securityReport:
          $ref: '#/components/schemas/SecurityReportSummaryDto'
        appVersion:
          nullable: true
          type: string
        stars:
          format: int32
          type: integer
        verifiedPublisher:
          type: boolean
        official:
          type: boolean
        boundCatalogs:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          nullable: true
          type: array
        hasJsonSchema:
          type: boolean
      type: object
    AvailablePackagesDto:
      additionalProperties: false
      example:
        appVersion: appVersion
        logoImageId: logoImageId
        deprecated: true
        packageId: packageId
        description: description
        signed: true
        stars: 5
        repository:
          scannerDisabled: true
          organizationName: organizationName
          organizationDisplayName: organizationDisplayName
          kind: 4
          name: name
          repositoryId: repositoryId
          official: true
          verifiedPublisher: true
          url: url
        catalogAppId: 1
        version: version
        installedInstanceCount: 5
        isLocked: true
        name: name
        normalizedName: normalizedName
        securityReportSummary:
          high: 7
          critical: 2
          low: 2
          medium: 9
          unknown: 3
        ts: ts
      properties:
        packageId:
          nullable: true
          type: string
        catalogAppId:
          format: int32
          nullable: true
          type: integer
        installedInstanceCount:
          format: int32
          nullable: true
          type: integer
        name:
          nullable: true
          type: string
        normalizedName:
          nullable: true
          type: string
        logoImageId:
          nullable: true
          type: string
        stars:
          format: int64
          type: integer
        description:
          nullable: true
          type: string
        version:
          nullable: true
          type: string
        appVersion:
          nullable: true
          type: string
        deprecated:
          type: boolean
        signed:
          type: boolean
        isLocked:
          type: boolean
        securityReportSummary:
          $ref: '#/components/schemas/SecurityReportSummary'
        ts:
          nullable: true
          type: string
        repository:
          $ref: '#/components/schemas/Repository'
      type: object
    AvailablePackagesList:
      additionalProperties: false
      example:
        data:
        - appVersion: appVersion
          logoImageId: logoImageId
          deprecated: true
          packageId: packageId
          description: description
          signed: true
          stars: 5
          repository:
            scannerDisabled: true
            organizationName: organizationName
            organizationDisplayName: organizationDisplayName
            kind: 4
            name: name
            repositoryId: repositoryId
            official: true
            verifiedPublisher: true
            url: url
          catalogAppId: 1
          version: version
          installedInstanceCount: 5
          isLocked: true
          name: name
          normalizedName: normalizedName
          securityReportSummary:
            high: 7
            critical: 2
            low: 2
            medium: 9
            unknown: 3
          ts: ts
        - appVersion: appVersion
          logoImageId: logoImageId
          deprecated: true
          packageId: packageId
          description: description
          signed: true
          stars: 5
          repository:
            scannerDisabled: true
            organizationName: organizationName
            organizationDisplayName: organizationDisplayName
            kind: 4
            name: name
            repositoryId: repositoryId
            official: true
            verifiedPublisher: true
            url: url
          catalogAppId: 1
          version: version
          installedInstanceCount: 5
          isLocked: true
          name: name
          normalizedName: normalizedName
          securityReportSummary:
            high: 7
            critical: 2
            low: 2
            medium: 9
            unknown: 3
          ts: ts
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/AvailablePackagesDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    AwsBlockDeviceMappingsCommand:
      additionalProperties: false
      example:
        imageId: imageId
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        imageId:
          nullable: true
          type: string
      type: object
    AwsCommonImages:
      additionalProperties: false
      example:
        displayName: displayName
        name: name
        id: id
      properties:
        name:
          nullable: true
          type: string
        id:
          nullable: true
          type: string
        displayName:
          nullable: true
          type: string
      type: object
    AwsCredentialList:
      additionalProperties: false
      example:
        data:
        - projectCount: 6
          projects:
          - name: name
            id: 0
          - name: name
            id: 0
          organizationName: organizationName
          lastModifiedBy: lastModifiedBy
          availabilityZones:
          - availabilityZones
          - availabilityZones
          organizationId: 1
          createdAt: createdAt
          isDefault: true
          createdBy: createdBy
          isLocked: true
          name: name
          id: 0
          lastModified: lastModified
          region: region
          continentName: continentName
        - projectCount: 6
          projects:
          - name: name
            id: 0
          - name: name
            id: 0
          organizationName: organizationName
          lastModifiedBy: lastModifiedBy
          availabilityZones:
          - availabilityZones
          - availabilityZones
          organizationId: 1
          createdAt: createdAt
          isDefault: true
          createdBy: createdBy
          isLocked: true
          name: name
          id: 0
          lastModified: lastModified
          region: region
          continentName: continentName
        totalCount: 5
      properties:
        data:
          items:
            $ref: '#/components/schemas/AmazonCredentialsListDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    AwsCredentialsForProjectDto:
      additionalProperties: false
      example:
        awsRegion: awsRegion
        awsAccessKeyId: awsAccessKeyId
        awsSecretAccessKey: awsSecretAccessKey
      properties:
        awsAccessKeyId:
          nullable: true
          type: string
        awsSecretAccessKey:
          nullable: true
          type: string
        awsRegion:
          nullable: true
          type: string
      type: object
    AwsExtendedImagesListDto:
      additionalProperties: false
      example:
        ownerAlias: ownerAlias
        name: name
        description: description
        platformDetails: platformDetails
        logo: logo
        id: id
        ownerId: ownerId
      properties:
        id:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        platformDetails:
          nullable: true
          type: string
        ownerId:
          nullable: true
          type: string
        ownerAlias:
          nullable: true
          type: string
        logo:
          nullable: true
          type: string
      type: object
    AwsFlavorList:
      additionalProperties: false
      example:
        data:
        - windowsSpotPrice: windowsSpotPrice
          name: name
          cpu: 6
          description: ""
          windowsPrice: windowsPrice
          linuxPrice: linuxPrice
          ram: 0
          linuxSpotPrice: linuxSpotPrice
        - windowsSpotPrice: windowsSpotPrice
          name: name
          cpu: 6
          description: ""
          windowsPrice: windowsPrice
          linuxPrice: linuxPrice
          ram: 0
          linuxSpotPrice: linuxSpotPrice
        totalCount: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/AwsFlavorListDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    AwsFlavorListDto:
      additionalProperties: false
      example:
        windowsSpotPrice: windowsSpotPrice
        name: name
        cpu: 6
        description: ""
        windowsPrice: windowsPrice
        linuxPrice: linuxPrice
        ram: 0
        linuxSpotPrice: linuxSpotPrice
      properties:
        ram:
          format: int64
          type: integer
        cpu:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        description:
          nullable: true
        linuxPrice:
          nullable: true
          type: string
        windowsPrice:
          nullable: true
          type: string
        windowsSpotPrice:
          nullable: true
          type: string
        linuxSpotPrice:
          nullable: true
          type: string
      type: object
    AwsImagesPostList:
      additionalProperties: false
      example:
        data:
        - ownerAlias: ownerAlias
          name: name
          description: description
          platformDetails: platformDetails
          logo: logo
          id: id
          ownerId: ownerId
        - ownerAlias: ownerAlias
          name: name
          description: description
          platformDetails: platformDetails
          logo: logo
          id: id
          ownerId: ownerId
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/AwsExtendedImagesListDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    AwsImagesPostListCommand:
      additionalProperties: false
      example:
        sortDirection: sortDirection
        search: search
        offset: 1
        cloudId: 0
        limit: 6
        sortBy: sortBy
        owners:
        - owners
        - owners
        latest: true
      properties:
        cloudId:
          format: int32
          type: integer
        limit:
          format: int32
          nullable: true
          type: integer
        offset:
          format: int32
          nullable: true
          type: integer
        sortBy:
          nullable: true
          type: string
        sortDirection:
          nullable: true
          type: string
        search:
          nullable: true
          type: string
        latest:
          type: boolean
        owners:
          items:
            type: string
          nullable: true
          type: array
      type: object
    AwsOwnerDetails:
      additionalProperties: false
      example:
        image:
          displayName: displayName
          name: name
          id: id
        ownerName: ownerName
        ownerId: ownerId
      properties:
        ownerId:
          nullable: true
          type: string
        ownerName:
          nullable: true
          type: string
        image:
          $ref: '#/components/schemas/AwsCommonImages'
      type: object
    AwsRegionDto:
      additionalProperties: false
      example:
        name: name
        region: region
      properties:
        name:
          nullable: true
          type: string
        region:
          nullable: true
          type: string
      type: object
    AzResult:
      additionalProperties: false
      example:
        list:
        - list
        - list
        totalCount: 0
      properties:
        list:
          items:
            type: string
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    AzureCredentialList:
      additionalProperties: false
      example:
        data:
        - projectCount: 6
          projects:
          - name: name
            id: 0
          - name: name
            id: 0
          organizationName: organizationName
          lastModifiedBy: lastModifiedBy
          availabilityZones:
          - availabilityZones
          - availabilityZones
          organizationId: 1
          createdAt: createdAt
          isDefault: true
          createdBy: createdBy
          isLocked: true
          name: name
          tenantId: tenantId
          location: location
          id: 0
          lastModified: lastModified
          continentName: continentName
        - projectCount: 6
          projects:
          - name: name
            id: 0
          - name: name
            id: 0
          organizationName: organizationName
          lastModifiedBy: lastModifiedBy
          availabilityZones:
          - availabilityZones
          - availabilityZones
          organizationId: 1
          createdAt: createdAt
          isDefault: true
          createdBy: createdBy
          isLocked: true
          name: name
          tenantId: tenantId
          location: location
          id: 0
          lastModified: lastModified
          continentName: continentName
        totalCount: 5
      properties:
        data:
          items:
            $ref: '#/components/schemas/AzureCredentialsListDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    AzureCredentialsForProjectDto:
      additionalProperties: false
      example:
        azureClientSecret: azureClientSecret
        azureClientId: azureClientId
        azureLocation: azureLocation
        azureTenantId: azureTenantId
        azureSubscriptionId: azureSubscriptionId
      properties:
        azureClientId:
          nullable: true
          type: string
        azureClientSecret:
          nullable: true
          type: string
        azureSubscriptionId:
          nullable: true
          type: string
        azureTenantId:
          nullable: true
          type: string
        azureLocation:
          nullable: true
          type: string
      type: object
    AzureCredentialsListDto:
      additionalProperties: false
      example:
        projectCount: 6
        projects:
        - name: name
          id: 0
        - name: name
          id: 0
        organizationName: organizationName
        lastModifiedBy: lastModifiedBy
        availabilityZones:
        - availabilityZones
        - availabilityZones
        organizationId: 1
        createdAt: createdAt
        isDefault: true
        createdBy: createdBy
        isLocked: true
        name: name
        tenantId: tenantId
        location: location
        id: 0
        lastModified: lastModified
        continentName: continentName
      properties:
        id:
          format: int32
          type: integer
        projectCount:
          format: int32
          type: integer
        isLocked:
          type: boolean
        name:
          nullable: true
          type: string
        tenantId:
          nullable: true
          type: string
        location:
          nullable: true
          type: string
        availabilityZones:
          items:
            type: string
          nullable: true
          type: array
        projects:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          nullable: true
          type: array
        createdBy:
          nullable: true
          type: string
        createdAt:
          nullable: true
          type: string
        lastModified:
          nullable: true
          type: string
        lastModifiedBy:
          nullable: true
          type: string
        isDefault:
          type: boolean
        organizationId:
          format: int32
          type: integer
        organizationName:
          nullable: true
          type: string
        continentName:
          nullable: true
          type: string
      type: object
    AzureDashboardCommand:
      additionalProperties: false
      example:
        cloudId: 0
        filterBy: filterBy
      properties:
        cloudId:
          format: int32
          type: integer
        filterBy:
          nullable: true
          type: string
      type: object
    AzureFlavorList:
      additionalProperties: false
      example:
        data:
        - maxDataDiskCount: 1.4658129805029452
          windowsSpotPrice: windowsSpotPrice
          name: name
          cpu: 0
          description: ""
          windowsPrice: windowsPrice
          linuxPrice: linuxPrice
          linuxSpotPrice: linuxSpotPrice
          ram: 6
        - maxDataDiskCount: 1.4658129805029452
          windowsSpotPrice: windowsSpotPrice
          name: name
          cpu: 0
          description: ""
          windowsPrice: windowsPrice
          linuxPrice: linuxPrice
          linuxSpotPrice: linuxSpotPrice
          ram: 6
        totalCount: 5
      properties:
        data:
          items:
            $ref: '#/components/schemas/AzureFlavorsWithPriceDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    AzureFlavorsWithPriceDto:
      additionalProperties: false
      example:
        maxDataDiskCount: 1.4658129805029452
        windowsSpotPrice: windowsSpotPrice
        name: name
        cpu: 0
        description: ""
        windowsPrice: windowsPrice
        linuxPrice: linuxPrice
        linuxSpotPrice: linuxSpotPrice
        ram: 6
      properties:
        name:
          nullable: true
          type: string
        windowsPrice:
          nullable: true
          type: string
        linuxPrice:
          nullable: true
          type: string
        windowsSpotPrice:
          nullable: true
          type: string
        linuxSpotPrice:
          nullable: true
          type: string
        cpu:
          format: int32
          type: integer
        ram:
          format: int64
          type: integer
        description:
          nullable: true
        maxDataDiskCount:
          format: double
          nullable: true
          type: number
      type: object
    AzureImageList:
      additionalProperties: false
      example:
        data:
        - name: name
          id: id
        - name: name
          id: id
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/CommonStringBasedDropdownDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    AzureLocationsCommand:
      additionalProperties: false
      example:
        azureClientSecret: azureClientSecret
        azureClientId: azureClientId
        azureTenantId: azureTenantId
        azureSubscriptionId: azureSubscriptionId
      properties:
        azureSubscriptionId:
          nullable: true
          type: string
        azureClientId:
          nullable: true
          type: string
        azureClientSecret:
          nullable: true
          type: string
        azureTenantId:
          nullable: true
          type: string
      type: object
    AzureOffersList:
      additionalProperties: false
      example:
        data:
        - data
        - data
        totalCount: 0
      properties:
        data:
          items:
            type: string
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    AzurePublishersList:
      additionalProperties: false
      example:
        data:
        - data
        - data
        totalCount: 0
      properties:
        data:
          items:
            type: string
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    AzureQuotaListRecordDto:
      additionalProperties: false
      example:
        totalCores: 0
        currentUsage: 6
        name: name
      properties:
        totalCores:
          format: int64
          type: integer
        currentUsage:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
      type: object
    AzureSkusList:
      additionalProperties: false
      example:
        data:
        - data
        - data
        totalCount: 0
      properties:
        data:
          items:
            type: string
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    AzureSubscriptionListCommand:
      additionalProperties: false
      example:
        clientId: clientId
        tenantId: tenantId
        clientSecret: clientSecret
      properties:
        clientId:
          minLength: 1
          type: string
        clientSecret:
          minLength: 1
          type: string
        tenantId:
          minLength: 1
          type: string
      required:
      - clientId
      - clientSecret
      - tenantId
      type: object
    AzureZonesCommand:
      additionalProperties: false
      example:
        azureClientSecret: azureClientSecret
        azureClientId: azureClientId
        azureLocation: azureLocation
        cloudId: 0
        azureTenantId: azureTenantId
        azureSubscriptionId: azureSubscriptionId
      properties:
        azureSubscriptionId:
          nullable: true
          type: string
        azureClientId:
          nullable: true
          type: string
        azureClientSecret:
          nullable: true
          type: string
        azureTenantId:
          nullable: true
          type: string
        azureLocation:
          nullable: true
          type: string
        cloudId:
          format: int32
          nullable: true
          type: integer
      type: object
    BackupCredentials:
      additionalProperties: false
      example:
        data:
        - projects:
          - name: name
            id: 0
          - name: name
            id: 0
          organizationName: organizationName
          s3Region: s3Region
          lastModifiedBy: lastModifiedBy
          organizationId: 6
          createdAt: createdAt
          isDefault: true
          s3Endpoint: s3Endpoint
          createdBy: createdBy
          s3AccessKeyId: s3AccessKeyId
          isLocked: true
          id: 0
          s3Name: s3Name
          lastModified: lastModified
        - projects:
          - name: name
            id: 0
          - name: name
            id: 0
          organizationName: organizationName
          s3Region: s3Region
          lastModifiedBy: lastModifiedBy
          organizationId: 6
          createdAt: createdAt
          isDefault: true
          s3Endpoint: s3Endpoint
          createdBy: createdBy
          s3AccessKeyId: s3AccessKeyId
          isLocked: true
          id: 0
          s3Name: s3Name
          lastModified: lastModified
        totalCount: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/BackupCredentialsListDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    BackupCredentialsCreateCommand:
      additionalProperties: false
      example:
        organizationId: 0
        s3SecretKey: s3SecretKey
        s3Endpoint: s3Endpoint
        s3AccessKeyId: s3AccessKeyId
        s3Region: s3Region
        s3Name: s3Name
      properties:
        s3Name:
          maxLength: 30
          minLength: 3
          type: string
        s3AccessKeyId:
          minLength: 1
          type: string
        s3SecretKey:
          minLength: 1
          type: string
        s3Endpoint:
          minLength: 1
          type: string
        s3Region:
          nullable: true
          type: string
        organizationId:
          format: int32
          nullable: true
          type: integer
      required:
      - s3AccessKeyId
      - s3Endpoint
      - s3Name
      - s3SecretKey
      type: object
    BackupCredentialsForOrganizationEntity:
      additionalProperties: false
      example:
        isDefault: true
        name: name
        backupCredentialId: 0
      properties:
        backupCredentialId:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        isDefault:
          type: boolean
      type: object
    BackupCredentialsListDto:
      additionalProperties: false
      example:
        projects:
        - name: name
          id: 0
        - name: name
          id: 0
        organizationName: organizationName
        s3Region: s3Region
        lastModifiedBy: lastModifiedBy
        organizationId: 6
        createdAt: createdAt
        isDefault: true
        s3Endpoint: s3Endpoint
        createdBy: createdBy
        s3AccessKeyId: s3AccessKeyId
        isLocked: true
        id: 0
        s3Name: s3Name
        lastModified: lastModified
      properties:
        id:
          format: int32
          type: integer
        s3Name:
          nullable: true
          type: string
        s3AccessKeyId:
          nullable: true
          type: string
        s3Endpoint:
          nullable: true
          type: string
        s3Region:
          nullable: true
          type: string
        organizationId:
          format: int32
          nullable: true
          type: integer
        organizationName:
          nullable: true
          type: string
        projects:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          nullable: true
          type: array
        isLocked:
          type: boolean
        createdBy:
          nullable: true
          type: string
        lastModified:
          nullable: true
          type: string
        lastModifiedBy:
          nullable: true
          type: string
        createdAt:
          nullable: true
          type: string
        isDefault:
          type: boolean
      type: object
    BackupCredentialsSearchCommand:
      additionalProperties: false
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          nullable: true
          type: integer
        offset:
          format: int32
          nullable: true
          type: integer
        searchTerm:
          nullable: true
          type: string
      type: object
    BackupCredentialsSearchList:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          name: name
          id: 0
        - organizationId: 6
          organizationName: organizationName
          name: name
          id: 0
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/CommonSearchResponseData'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    BackupCredentialsUpdateCommand:
      additionalProperties: false
      example:
        s3SecretKey: s3SecretKey
        s3AccessKeyId: s3AccessKeyId
        id: 0
        s3Name: s3Name
      properties:
        id:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        s3Name:
          maxLength: 30
          minLength: 3
          type: string
        s3AccessKeyId:
          minLength: 1
          type: string
        s3SecretKey:
          minLength: 1
          type: string
      required:
      - id
      - s3AccessKeyId
      - s3Name
      - s3SecretKey
      type: object
    BackupDto:
      additionalProperties: false
      example:
        includedNamespace:
        - includedNamespace
        - includedNamespace
        excludedNamespace:
        - excludedNamespace
        - excludedNamespace
      properties:
        includedNamespace:
          items:
            type: string
          nullable: true
          type: array
        excludedNamespace:
          items:
            type: string
          nullable: true
          type: array
      type: object
    BackupLockManagerCommand:
      additionalProperties: false
      example:
        mode: mode
        id: 0
      properties:
        id:
          format: int32
          type: integer
        mode:
          nullable: true
          type: string
      type: object
    BackupMakeDefaultCommand:
      additionalProperties: false
      example:
        id: 0
      properties:
        id:
          format: int32
          type: integer
      type: object
    BackupStorageLocationDto:
      additionalProperties: false
      example:
        phase: phase
        createdAt: 2000-01-23T04:56:07.000+00:00
        provider: provider
        namespace: namespace
        metadataName: metadataName
        accessMode: accessMode
        lastValidated: 2000-01-23T04:56:07.000+00:00
        backupCredentialId: 0
      properties:
        metadataName:
          nullable: true
          type: string
        provider:
          nullable: true
          type: string
        namespace:
          nullable: true
          type: string
        lastValidated:
          format: date-time
          nullable: true
          type: string
        createdAt:
          format: date-time
          nullable: true
          type: string
        accessMode:
          nullable: true
          type: string
        phase:
          nullable: true
          type: string
        backupCredentialId:
          format: int32
          nullable: true
          type: integer
      type: object
    BecomePartnerCommand:
      additionalProperties: false
      example:
        fullName: fullName
        email: email
      properties:
        fullName:
          maxLength: 100
          minLength: 3
          type: string
        email:
          format: email
          minLength: 1
          type: string
      required:
      - email
      - fullName
      type: object
    BillingCredentialsSearchCommand:
      additionalProperties: false
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          nullable: true
          type: integer
        offset:
          format: int32
          nullable: true
          type: integer
        searchTerm:
          nullable: true
          type: string
      type: object
    BillingCredentialsSearchList:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          name: name
          id: 0
        - organizationId: 6
          organizationName: organizationName
          name: name
          id: 0
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/CommonSearchResponseData'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    BillingInfo:
      additionalProperties: false
      example:
        data:
        - isDeleted: true
          endDate: 2000-01-23T04:56:07.000+00:00
          tcu: 6.027456183070403
          projectName: projectName
          projectId: 0
          startDate: 2000-01-23T04:56:07.000+00:00
        - isDeleted: true
          endDate: 2000-01-23T04:56:07.000+00:00
          tcu: 6.027456183070403
          projectName: projectName
          projectId: 0
          startDate: 2000-01-23T04:56:07.000+00:00
        totalTcu: 1.4658129805029452
        totalCount: 5
      properties:
        data:
          items:
            $ref: '#/components/schemas/BillingSummaryDto'
          nullable: true
          type: array
        totalTcu:
          format: double
          type: number
        totalCount:
          format: int32
          type: integer
      type: object
    BillingInfoDto:
      additionalProperties: false
      example:
        legalName: legalName
        country: country
        address: address
        city: city
        billingEmail: billingEmail
        vatNumber: vatNumber
      properties:
        country:
          nullable: true
          type: string
        vatNumber:
          nullable: true
          type: string
        legalName:
          nullable: true
          type: string
        city:
          nullable: true
          type: string
        billingEmail:
          nullable: true
          type: string
        address:
          nullable: true
          type: string
      type: object
    BillingSummaryDto:
      additionalProperties: false
      example:
        isDeleted: true
        endDate: 2000-01-23T04:56:07.000+00:00
        tcu: 6.027456183070403
        projectName: projectName
        projectId: 0
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        projectId:
          format: int32
          type: integer
        projectName:
          nullable: true
          type: string
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          nullable: true
          type: string
        tcu:
          format: double
          type: number
        isDeleted:
          type: boolean
      type: object
    BindFlavorToProjectCommand:
      additionalProperties: false
      example:
        flavors:
        - flavors
        - flavors
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        flavors:
          items:
            type: string
          nullable: true
          type: array
      type: object
    BindImageToProjectCommand:
      additionalProperties: false
      example:
        images:
        - images
        - images
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        images:
          items:
            type: string
          nullable: true
          type: array
      type: object
    BindOrganizationsCommand:
      additionalProperties: false
      example:
        organizations:
        - organizationId: 0
          isBound: true
        - organizationId: 0
          isBound: true
        partnerId: 6
      properties:
        organizations:
          items:
            $ref: '#/components/schemas/OrganizationDto'
          nullable: true
          type: array
        partnerId:
          format: int32
          type: integer
      required:
      - partnerId
      type: object
    BindProjectsToCatalogCommand:
      additionalProperties: false
      example:
        projects:
        - isBound: true
          projectId: 0
        - isBound: true
          projectId: 0
        catalogId: 0
      properties:
        projects:
          items:
            $ref: '#/components/schemas/UpdateCatalogDto'
          minItems: 1
          type: array
        catalogId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
      required:
      - catalogId
      - projects
      type: object
    BindUserGroupsToProjectGroupCommand:
      additionalProperties: false
      example:
        userGroups:
        - userGroupId: 0
          isBound: true
        - userGroupId: 0
          isBound: true
        projectGroupId: 0
        projectGroupName: projectGroupName
      properties:
        userGroups:
          items:
            $ref: '#/components/schemas/UpdateProjectUserGroupDto'
          nullable: true
          type: array
        projectGroupId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        projectGroupName:
          nullable: true
          type: string
      required:
      - projectGroupId
      type: object
    BlockOrganizationCommand:
      additionalProperties: false
      type: object
    BoundFlavorsForProjectsList:
      additionalProperties: false
      example:
        data:
        - isGoogle: true
          cpu: 6
          windowsPrice: windowsPrice
          isAws: true
          maxDataDiskCount: 5
          windowsSpotPrice: windowsSpotPrice
          isOpenstack: true
          name: name
          hasWSpotPrice: true
          id: 0
          projectName: projectName
          linuxPrice: linuxPrice
          projectId: 5
          isAzure: true
          ram: 1
          hasLSpotPrice: true
          linuxSpotPrice: linuxSpotPrice
        - isGoogle: true
          cpu: 6
          windowsPrice: windowsPrice
          isAws: true
          maxDataDiskCount: 5
          windowsSpotPrice: windowsSpotPrice
          isOpenstack: true
          name: name
          hasWSpotPrice: true
          id: 0
          projectName: projectName
          linuxPrice: linuxPrice
          projectId: 5
          isAzure: true
          ram: 1
          hasLSpotPrice: true
          linuxSpotPrice: linuxSpotPrice
        totalCount: 2
      properties:
        data:
          items:
            $ref: '#/components/schemas/BoundFlavorsForProjectsListDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    BoundFlavorsForProjectsListDto:
      additionalProperties: false
      example:
        isGoogle: true
        cpu: 6
        windowsPrice: windowsPrice
        isAws: true
        maxDataDiskCount: 5
        windowsSpotPrice: windowsSpotPrice
        isOpenstack: true
        name: name
        hasWSpotPrice: true
        id: 0
        projectName: projectName
        linuxPrice: linuxPrice
        projectId: 5
        isAzure: true
        ram: 1
        hasLSpotPrice: true
        linuxSpotPrice: linuxSpotPrice
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        cpu:
          format: int32
          type: integer
        ram:
          format: int64
          type: integer
        projectId:
          format: int32
          nullable: true
          type: integer
        isAzure:
          type: boolean
        isAws:
          type: boolean
        isOpenstack:
          type: boolean
        isGoogle:
          type: boolean
        projectName:
          nullable: true
          type: string
        maxDataDiskCount:
          format: int32
          nullable: true
          type: integer
        hasLSpotPrice:
          type: boolean
        hasWSpotPrice:
          type: boolean
        linuxSpotPrice:
          nullable: true
          type: string
        linuxPrice:
          nullable: true
          type: string
        windowsSpotPrice:
          nullable: true
          type: string
        windowsPrice:
          nullable: true
          type: string
      type: object
    BoundImagesForProjectsList:
      additionalProperties: false
      example:
        data:
        - imageId: imageId
          size: 1.4658129805029452
          isOpenstack: true
          cloudId: 5
          name: name
          isWindows: true
          id: 0
          projectName: projectName
          projectId: 6
          isAzure: true
          isAws: true
        - imageId: imageId
          size: 1.4658129805029452
          isOpenstack: true
          cloudId: 5
          name: name
          isWindows: true
          id: 0
          projectName: projectName
          projectId: 6
          isAzure: true
          isAws: true
        totalCount: 5
      properties:
        data:
          items:
            $ref: '#/components/schemas/BoundImagesForProjectsListDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    BoundImagesForProjectsListDto:
      additionalProperties: false
      example:
        imageId: imageId
        size: 1.4658129805029452
        isOpenstack: true
        cloudId: 5
        name: name
        isWindows: true
        id: 0
        projectName: projectName
        projectId: 6
        isAzure: true
        isAws: true
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        projectId:
          format: int32
          nullable: true
          type: integer
        isAzure:
          type: boolean
        isAws:
          type: boolean
        isOpenstack:
          type: boolean
        projectName:
          nullable: true
          type: string
        size:
          format: double
          nullable: true
          type: number
        imageId:
          nullable: true
          type: string
        cloudId:
          format: int32
          nullable: true
          type: integer
        isWindows:
          type: boolean
      type: object
    CScheduleDto:
      additionalProperties: false
      example:
        phase: phase
        createdAt: 2000-01-23T04:56:07.000+00:00
        schedule: schedule
        lastBackup: 2000-01-23T04:56:07.000+00:00
        namespace: namespace
        metadataName: metadataName
        includedNamespaces:
        - includedNamespaces
        - includedNamespaces
        excludedNamespaces:
        - excludedNamespaces
        - excludedNamespaces
        ttl: ttl
        status:
          phase: phase
          lastBackup: 2000-01-23T04:56:07.000+00:00
      properties:
        status:
          $ref: '#/components/schemas/Status'
        metadataName:
          nullable: true
          type: string
        namespace:
          nullable: true
          type: string
        createdAt:
          format: date-time
          nullable: true
          type: string
        schedule:
          nullable: true
          type: string
        ttl:
          nullable: true
          type: string
        lastBackup:
          format: date-time
          nullable: true
          type: string
        phase:
          nullable: true
          type: string
        excludedNamespaces:
          items:
            type: string
          nullable: true
          type: array
        includedNamespaces:
          items:
            type: string
          nullable: true
          type: array
      type: object
    CardInformationDto:
      additionalProperties: false
      example:
        expirationYear: expirationYear
        last4: last4
        holderName: holderName
        balance: 0
        expirationMonth: expirationMonth
        brand: brand
      properties:
        expirationMonth:
          nullable: true
          type: string
        expirationYear:
          nullable: true
          type: string
        last4:
          nullable: true
          type: string
        brand:
          nullable: true
          type: string
        holderName:
          nullable: true
          type: string
        balance:
          format: int64
          type: integer
      type: object
    CatalogAppDetailsDto:
      additionalProperties: false
      example:
        appVersion: appVersion
        packageId: packageId
        description: description
        securityReport:
          high: 7
          critical: 2
          low: 2
          medium: 9
          unknown: 3
        official: true
        readme: readme
        stars: 4
        version: version
        verifiedPublisher: true
        appRepoOrganizationName: appRepoOrganizationName
        catalogName: catalogName
        appRepoName: appRepoName
        appRepoId: 6
        catalogId: 1
        hasJsonSchema: true
        name: name
        projectApps:
        - isLocked: true
          name: name
          namespace: namespace
          id: 5
          projectName: projectName
          projectId: 5
          version: version
          status: status
        - isLocked: true
          name: name
          namespace: namespace
          id: 5
          projectName: projectName
          projectId: 5
          version: version
          status: status
        id: 0
        logoId: logoId
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        appRepoName:
          nullable: true
          type: string
        appRepoOrganizationName:
          nullable: true
          type: string
        appRepoId:
          format: int32
          type: integer
        catalogName:
          nullable: true
          type: string
        catalogId:
          format: int32
          type: integer
        packageId:
          nullable: true
          type: string
        version:
          nullable: true
          type: string
        logoId:
          nullable: true
          type: string
        projectApps:
          items:
            $ref: '#/components/schemas/ProjectAppDto'
          nullable: true
          type: array
        description:
          nullable: true
          type: string
        readme:
          nullable: true
          type: string
        securityReport:
          $ref: '#/components/schemas/SecurityReportSummaryDto'
        appVersion:
          nullable: true
          type: string
        stars:
          format: int32
          type: integer
        verifiedPublisher:
          type: boolean
        official:
          type: boolean
        hasJsonSchema:
          type: boolean
      type: object
    CatalogAppLockManagement:
      additionalProperties: false
      example:
        mode: mode
        id: 0
      properties:
        id:
          format: int32
          type: integer
        mode:
          nullable: true
          type: string
      type: object
    CatalogAppParamsDetailsDto:
      additionalProperties: false
      example:
        catalogAppName: catalogAppName
        hasJsonSchema: true
        isEditableWhenInstalling: true
        id: 0
        value: value
        key: key
        isMandatory: true
        isEditableAfterInstallation: true
      properties:
        id:
          format: int32
          type: integer
        catalogAppName:
          nullable: true
          type: string
        key:
          nullable: true
          type: string
        value:
          nullable: true
          type: string
        isEditableWhenInstalling:
          type: boolean
        isEditableAfterInstallation:
          type: boolean
        isMandatory:
          type: boolean
        hasJsonSchema:
          type: boolean
      type: object
    CatalogAppParamsDto:
      additionalProperties: false
      example:
        isEditableWhenInstalling: true
        value: value
        key: key
        isMandatory: true
        isEditableAfterInstallation: true
      properties:
        key:
          minLength: 1
          type: string
        value:
          nullable: true
          type: string
        isEditableWhenInstalling:
          type: boolean
        isEditableAfterInstallation:
          type: boolean
        isMandatory:
          type: boolean
      required:
      - key
      type: object
    CatalogDropdownDto:
      additionalProperties: false
      example:
        name: name
        id: 0
        packageIds:
        - packageIds
        - packageIds
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        packageIds:
          items:
            type: string
          nullable: true
          type: array
      type: object
    CatalogList:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          boundApplications:
          - appVersion: appVersion
            logoImageId: logoImageId
            deprecated: true
            packageId: packageId
            description: description
            signed: true
            stars: 5
            repository:
              scannerDisabled: true
              organizationName: organizationName
              organizationDisplayName: organizationDisplayName
              kind: 4
              name: name
              repositoryId: repositoryId
              official: true
              verifiedPublisher: true
              url: url
            catalogAppId: 1
            version: version
            installedInstanceCount: 5
            isLocked: true
            name: name
            normalizedName: normalizedName
            securityReportSummary:
              high: 7
              critical: 2
              low: 2
              medium: 9
              unknown: 3
            ts: ts
          - appVersion: appVersion
            logoImageId: logoImageId
            deprecated: true
            packageId: packageId
            description: description
            signed: true
            stars: 5
            repository:
              scannerDisabled: true
              organizationName: organizationName
              organizationDisplayName: organizationDisplayName
              kind: 4
              name: name
              repositoryId: repositoryId
              official: true
              verifiedPublisher: true
              url: url
            catalogAppId: 1
            version: version
            installedInstanceCount: 5
            isLocked: true
            name: name
            normalizedName: normalizedName
            securityReportSummary:
              high: 7
              critical: 2
              low: 2
              medium: 9
              unknown: 3
            ts: ts
          isLocked: true
          name: name
          description: description
          boundProjects:
          - name: name
            id: 0
          - name: name
            id: 0
          id: 0
          packageIds:
          - packageIds
          - packageIds
        - organizationId: 6
          boundApplications:
          - appVersion: appVersion
            logoImageId: logoImageId
            deprecated: true
            packageId: packageId
            description: description
            signed: true
            stars: 5
            repository:
              scannerDisabled: true
              organizationName: organizationName
              organizationDisplayName: organizationDisplayName
              kind: 4
              name: name
              repositoryId: repositoryId
              official: true
              verifiedPublisher: true
              url: url
            catalogAppId: 1
            version: version
            installedInstanceCount: 5
            isLocked: true
            name: name
            normalizedName: normalizedName
            securityReportSummary:
              high: 7
              critical: 2
              low: 2
              medium: 9
              unknown: 3
            ts: ts
          - appVersion: appVersion
            logoImageId: logoImageId
            deprecated: true
            packageId: packageId
            description: description
            signed: true
            stars: 5
            repository:
              scannerDisabled: true
              organizationName: organizationName
              organizationDisplayName: organizationDisplayName
              kind: 4
              name: name
              repositoryId: repositoryId
              official: true
              verifiedPublisher: true
              url: url
            catalogAppId: 1
            version: version
            installedInstanceCount: 5
            isLocked: true
            name: name
            normalizedName: normalizedName
            securityReportSummary:
              high: 7
              critical: 2
              low: 2
              medium: 9
              unknown: 3
            ts: ts
          isLocked: true
          name: name
          description: description
          boundProjects:
          - name: name
            id: 0
          - name: name
            id: 0
          id: 0
          packageIds:
          - packageIds
          - packageIds
        totalCount: 7
      properties:
        data:
          items:
            $ref: '#/components/schemas/CatalogListDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    CatalogListDto:
      additionalProperties: false
      example:
        organizationId: 6
        boundApplications:
        - appVersion: appVersion
          logoImageId: logoImageId
          deprecated: true
          packageId: packageId
          description: description
          signed: true
          stars: 5
          repository:
            scannerDisabled: true
            organizationName: organizationName
            organizationDisplayName: organizationDisplayName
            kind: 4
            name: name
            repositoryId: repositoryId
            official: true
            verifiedPublisher: true
            url: url
          catalogAppId: 1
          version: version
          installedInstanceCount: 5
          isLocked: true
          name: name
          normalizedName: normalizedName
          securityReportSummary:
            high: 7
            critical: 2
            low: 2
            medium: 9
            unknown: 3
          ts: ts
        - appVersion: appVersion
          logoImageId: logoImageId
          deprecated: true
          packageId: packageId
          description: description
          signed: true
          stars: 5
          repository:
            scannerDisabled: true
            organizationName: organizationName
            organizationDisplayName: organizationDisplayName
            kind: 4
            name: name
            repositoryId: repositoryId
            official: true
            verifiedPublisher: true
            url: url
          catalogAppId: 1
          version: version
          installedInstanceCount: 5
          isLocked: true
          name: name
          normalizedName: normalizedName
          securityReportSummary:
            high: 7
            critical: 2
            low: 2
            medium: 9
            unknown: 3
          ts: ts
        isLocked: true
        name: name
        description: description
        boundProjects:
        - name: name
          id: 0
        - name: name
          id: 0
        id: 0
        packageIds:
        - packageIds
        - packageIds
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        isLocked:
          type: boolean
        organizationId:
          format: int32
          type: integer
        packageIds:
          items:
            type: string
          nullable: true
          type: array
        boundProjects:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          nullable: true
          type: array
        boundApplications:
          items:
            $ref: '#/components/schemas/AvailablePackagesDto'
          nullable: true
          type: array
      type: object
    CatalogLockManagementCommand:
      additionalProperties: false
      example:
        mode: mode
        id: 0
      properties:
        id:
          format: int32
          type: integer
        mode:
          nullable: true
          type: string
      type: object
    ChangeCardCommand:
      additionalProperties: false
      example:
        paymentMethodId: paymentMethodId
      properties:
        paymentMethodId:
          minLength: 1
          type: string
      required:
      - paymentMethodId
      type: object
    Chart:
      additionalProperties: false
      example:
        spec:
          interval: interval
          sourceRef:
            kind: kind
            name: name
          chart: chart
          version: version
      properties:
        spec:
          $ref: '#/components/schemas/ChartSpec'
      type: object
    ChartSpec:
      additionalProperties: false
      example:
        interval: interval
        sourceRef:
          kind: kind
          name: name
        chart: chart
        version: version
      properties:
        chart:
          nullable: true
          type: string
        version:
          nullable: true
          type: string
        sourceRef:
          $ref: '#/components/schemas/SourceRef'
        interval:
          nullable: true
          type: string
      type: object
    CheckAwsCommand:
      additionalProperties: false
      example:
        awsAccessKeyId: awsAccessKeyId
        region: region
        awsSecretAccessKey: awsSecretAccessKey
      properties:
        awsAccessKeyId:
          minLength: 1
          type: string
        awsSecretAccessKey:
          minLength: 1
          type: string
        region:
          minLength: 1
          type: string
      required:
      - awsAccessKeyId
      - awsSecretAccessKey
      - region
      type: object
    CheckAzureCommand:
      additionalProperties: false
      example:
        azureClientSecret: azureClientSecret
        azureClientId: azureClientId
        azureTenantId: azureTenantId
      properties:
        azureClientId:
          minLength: 1
          type: string
        azureClientSecret:
          minLength: 1
          type: string
        azureTenantId:
          minLength: 1
          type: string
      required:
      - azureClientId
      - azureClientSecret
      - azureTenantId
      type: object
    CheckAzureCpuQuotaCommand:
      additionalProperties: false
      example:
        cloudId: 0
      properties:
        cloudId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
      required:
      - cloudId
      type: object
    CheckOpenstackCommand:
      additionalProperties: false
      example:
        openStackUrl: openStackUrl
        openStackPassword: openStackPassword
        openStackDomain: openStackDomain
        openStackUser: openStackUser
        isAdmin: true
      properties:
        openStackUser:
          minLength: 1
          type: string
        openStackPassword:
          minLength: 1
          type: string
        openStackUrl:
          minLength: 1
          type: string
        openStackDomain:
          minLength: 1
          type: string
        isAdmin:
          type: boolean
      required:
      - openStackDomain
      - openStackPassword
      - openStackUrl
      - openStackUser
      type: object
    CheckPrometheusCommand:
      additionalProperties: false
      example:
        password: password
        userName: userName
        url: url
      properties:
        password:
          minLength: 1
          type: string
        userName:
          minLength: 1
          type: string
        url:
          minLength: 1
          type: string
      required:
      - password
      - url
      - userName
      type: object
    CheckS3Command:
      additionalProperties: false
      example:
        s3SecretKey: s3SecretKey
        s3Endpoint: s3Endpoint
        s3AccessKeyId: s3AccessKeyId
        s3Region: s3Region
      properties:
        s3AccessKeyId:
          minLength: 1
          type: string
        s3SecretKey:
          minLength: 1
          type: string
        s3Endpoint:
          minLength: 1
          type: string
        s3Region:
          minLength: 1
          type: string
      required:
      - s3AccessKeyId
      - s3Endpoint
      - s3Region
      - s3SecretKey
      type: object
    CheckTanzuCommand:
      additionalProperties: false
      example:
        volumeType: volumeType
        password: password
        port: 0
        namespace: namespace
        url: url
        username: username
      properties:
        username:
          maxLength: 100
          minLength: 3
          type: string
        url:
          maxLength: 150
          minLength: 3
          pattern: "^(http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\\
            /([\\w#!:.?+=&%@!\\-\\/]))?"
          type: string
        password:
          maxLength: 100
          minLength: 3
          type: string
        namespace:
          maxLength: 63
          minLength: 3
          pattern: "^[a-z0-9]([-a-z0-9]*[a-z0-9])?"
          type: string
        port:
          format: int32
          nullable: true
          type: integer
        volumeType:
          maxLength: 100
          minLength: 1
          type: string
      required:
      - namespace
      - password
      - url
      - username
      - volumeType
      type: object
    CidrCommand:
      additionalProperties: false
      example:
        cidr: cidr
      properties:
        cidr:
          minLength: 1
          type: string
      required:
      - cidr
      type: object
    ClearCanceledPaymentMethodCommand:
      additionalProperties: false
      type: object
    ClearProjectBackupCommand:
      additionalProperties: false
      example:
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
      type: object
    CloudCredentialsDropdownRecordDto:
      additionalProperties: false
      example:
        projects:
        - flavors:
          - flavors
          - flavors
          images:
          - images
          - images
          imageNames:
          - imageNames
          - imageNames
          isReady: true
          name: name
          id: 6
        - flavors:
          - flavors
          - flavors
          images:
          - images
          - images
          imageNames:
          - imageNames
          - imageNames
          isReady: true
          name: name
          id: 6
        cloudType: cloudType
        name: name
        id: 0
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        cloudType:
          nullable: true
          type: string
        projects:
          items:
            $ref: '#/components/schemas/ProjectWithFlavorsAndImagesDto'
          nullable: true
          type: array
      type: object
    CloudCredentialsForOrganizationEntity:
      additionalProperties: false
      example:
        isDefault: true
        projects:
        - name: name
          id: 0
        - name: name
          id: 0
        cloudType: cloudType
        fullName: fullName
        id: 0
      properties:
        id:
          format: int32
          type: integer
        projects:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          nullable: true
          type: array
        fullName:
          nullable: true
          type: string
        cloudType:
          nullable: true
          type: string
        isDefault:
          type: boolean
      type: object
    CloudCredentialsResponseData:
      additionalProperties: false
      example:
        organizationId: 6
        organizationName: organizationName
        cloudType: cloudType
        name: name
        id: 0
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        organizationId:
          format: int32
          nullable: true
          type: integer
        organizationName:
          nullable: true
          type: string
        cloudType:
          nullable: true
          type: string
      type: object
    CloudCredentialsSearchCommand:
      additionalProperties: false
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          nullable: true
          type: integer
        offset:
          format: int32
          nullable: true
          type: integer
        searchTerm:
          nullable: true
          type: string
      type: object
    CloudCredentialsSearchList:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          cloudType: cloudType
          name: name
          id: 0
        - organizationId: 6
          organizationName: organizationName
          cloudType: cloudType
          name: name
          id: 0
        totalCount: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/CloudCredentialsResponseData'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    CloudLockManagerCommand:
      additionalProperties: false
      example:
        mode: mode
        id: 0
      properties:
        id:
          format: int32
          type: integer
        mode:
          nullable: true
          type: string
      type: object
    CloudType:
      enum:
      - 100
      - 200
      - 300
      - 400
      - 500
      - 600
      format: int32
      type: integer
    CommonAvailabilityDto:
      additionalProperties: false
      example:
        name: name
        id: true
      properties:
        id:
          type: boolean
        name:
          nullable: true
          type: string
      type: object
    CommonDropdownDto:
      additionalProperties: false
      example:
        name: name
        id: 0
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
      type: object
    CommonExtendedDropdownDto:
      additionalProperties: false
      example:
        isDefault: true
        name: name
        id: 0
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        isDefault:
          type: boolean
      type: object
    CommonSearchKubernetesResponseData:
      additionalProperties: false
      example:
        organizationId: 6
        organizationName: organizationName
        namespace: namespace
        metadataName: metadataName
        projectName: projectName
        projectId: 0
      properties:
        metadataName:
          nullable: true
          type: string
        namespace:
          nullable: true
          type: string
        projectId:
          format: int32
          type: integer
        projectName:
          nullable: true
          type: string
        organizationId:
          format: int32
          type: integer
        organizationName:
          nullable: true
          type: string
      type: object
    CommonSearchResponseData:
      additionalProperties: false
      example:
        organizationId: 6
        organizationName: organizationName
        name: name
        id: 0
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        organizationId:
          format: int32
          nullable: true
          type: integer
        organizationName:
          nullable: true
          type: string
      type: object
    CommonStringBasedDropdownDto:
      additionalProperties: false
      example:
        name: name
        id: id
      properties:
        id:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
      type: object
    Condition:
      additionalProperties: false
      example:
        reason: reason
        lastTransitionTime: 2000-01-23T04:56:07.000+00:00
        message: message
        type: type
        status: status
      properties:
        lastTransitionTime:
          format: date-time
          nullable: true
          type: string
        message:
          nullable: true
          type: string
        reason:
          nullable: true
          type: string
        status:
          nullable: true
          type: string
        type:
          nullable: true
          type: string
      type: object
    ConfigMapDto:
      additionalProperties: false
      example:
        namespace: namespace
        metadataName: metadataName
        age: age
      properties:
        metadataName:
          nullable: true
          type: string
        namespace:
          nullable: true
          type: string
        age:
          nullable: true
          type: string
      type: object
    ConfigMapSearchCommand:
      additionalProperties: false
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          nullable: true
          type: integer
        offset:
          format: int32
          nullable: true
          type: integer
        searchTerm:
          nullable: true
          type: string
      type: object
    ConfigMapSearchList:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        totalCount: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/CommonSearchKubernetesResponseData'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    ConfigMaps:
      additionalProperties: false
      example:
        data:
        - namespace: namespace
          metadataName: metadataName
          age: age
        - namespace: namespace
          metadataName: metadataName
          age: age
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/ConfigMapDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    ContactUsCommand:
      additionalProperties: false
      example:
        businessEmail: businessEmail
        companyName: companyName
        name: name
        comment: comment
      properties:
        name:
          maxLength: 200
          minLength: 3
          type: string
        businessEmail:
          format: email
          minLength: 1
          type: string
        companyName:
          maxLength: 200
          minLength: 3
          type: string
        comment:
          nullable: true
          type: string
      required:
      - businessEmail
      - companyName
      - name
      type: object
    CountryListDto:
      additionalProperties: false
      example:
        name: name
        isEu: true
      properties:
        name:
          nullable: true
          type: string
        isEu:
          type: boolean
      type: object
    CreateAccessProfileCommand:
      additionalProperties: false
      example:
        organizationId: 0
        allowedHosts:
        - ipAddress: ipAddress
          description: description
          maskBits: 19
        - ipAddress: ipAddress
          description: description
          maskBits: 19
        httpProxy: httpProxy
        ntpServers:
        - address: address
        - address: address
        name: name
        dnsServers:
        - address: address
        - address: address
        sshUsers:
        - sshPublicKey: sshPublicKey
          name: name
        - sshPublicKey: sshPublicKey
          name: name
      properties:
        name:
          maxLength: 30
          minLength: 3
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        httpProxy:
          nullable: true
          type: string
        organizationId:
          format: int32
          nullable: true
          type: integer
        sshUsers:
          items:
            $ref: '#/components/schemas/SshUserCreateDto'
          nullable: true
          type: array
        dnsServers:
          items:
            $ref: '#/components/schemas/DnsServerCreateDto'
          nullable: true
          type: array
        ntpServers:
          items:
            $ref: '#/components/schemas/NtpServerCreateDto'
          nullable: true
          type: array
        allowedHosts:
          items:
            $ref: '#/components/schemas/AllowedHostCreateDto'
          nullable: true
          type: array
      required:
      - name
      type: object
    CreateAlertDto:
      additionalProperties: false
      example:
        alerts:
        - fingerprint: fingerprint
          annotations:
            description: description
            title: title
          startsAt: 2000-01-23T04:56:07.000+00:00
          endsAt: 2000-01-23T04:56:07.000+00:00
          status: status
          labels: ""
        - fingerprint: fingerprint
          annotations:
            description: description
            title: title
          startsAt: 2000-01-23T04:56:07.000+00:00
          endsAt: 2000-01-23T04:56:07.000+00:00
          status: status
          labels: ""
        status: status
      properties:
        alerts:
          items:
            $ref: '#/components/schemas/KubernetesAlertCreateDto'
          nullable: true
          type: array
        status:
          nullable: true
          type: string
      type: object
    CreateAlertingIntegrationCommand:
      additionalProperties: false
      example:
        alertingProfileId: 0
        url: url
        token: token
        alertingIntegrationType: null
      properties:
        url:
          minLength: 1
          type: string
        token:
          nullable: true
          type: string
        alertingIntegrationType:
          $ref: '#/components/schemas/AlertingIntegrationType'
        alertingProfileId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
      required:
      - alertingIntegrationType
      - alertingProfileId
      - url
      type: object
    CreateAlertingProfileCommand:
      additionalProperties: false
      example:
        organizationId: 6
        emails:
        - email: email
        - email: email
        slackConfigurationId: 0
        reminder: null
        webhooks:
        - headers:
          - id: 6
            value: value
            key: key
          - id: 6
            value: value
            key: key
          id: 0
          url: url
        - headers:
          - id: 6
            value: value
            key: key
          - id: 6
            value: value
            key: key
          id: 0
          url: url
        name: name
        alertingIntegrations:
        - url: url
          token: token
          alertingIntegrationType: null
        - url: url
          token: token
          alertingIntegrationType: null
      properties:
        name:
          maxLength: 30
          minLength: 3
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        slackConfigurationId:
          format: int32
          nullable: true
          type: integer
        organizationId:
          format: int32
          nullable: true
          type: integer
        emails:
          items:
            $ref: '#/components/schemas/AlertingEmailDto'
          nullable: true
          type: array
        webhooks:
          items:
            $ref: '#/components/schemas/AlertingWebhookDto'
          nullable: true
          type: array
        alertingIntegrations:
          items:
            $ref: '#/components/schemas/AlertingIntegrationDto'
          nullable: true
          type: array
        reminder:
          $ref: '#/components/schemas/AlertingReminder'
      required:
      - name
      type: object
    CreateAllowedHostCommand:
      additionalProperties: false
      example:
        ipAddress: ipAddress
        accessProfileId: 0
        description: description
        maskBits: 19
      properties:
        accessProfileId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        description:
          nullable: true
          type: string
        ipAddress:
          minLength: 1
          type: string
        maskBits:
          format: int32
          maximum: 32
          minimum: 0
          type: integer
      required:
      - accessProfileId
      - ipAddress
      type: object
    CreateAwsCloudCommand:
      additionalProperties: false
      example:
        organizationId: 6
        awsRegion: awsRegion
        awsAccessKeyId: awsAccessKeyId
        azCount: 0
        name: name
        awsSecretAccessKey: awsSecretAccessKey
      properties:
        name:
          maxLength: 30
          minLength: 3
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        awsSecretAccessKey:
          minLength: 1
          type: string
        awsAccessKeyId:
          minLength: 1
          type: string
        azCount:
          format: int32
          type: integer
        awsRegion:
          minLength: 1
          type: string
        organizationId:
          format: int32
          nullable: true
          type: integer
      required:
      - awsAccessKeyId
      - awsRegion
      - awsSecretAccessKey
      - name
      type: object
    CreateAzureCloudCommand:
      additionalProperties: false
      example:
        organizationId: 6
        azureClientSecret: azureClientSecret
        azureClientId: azureClientId
        azureLocation: azureLocation
        azCount: 0
        name: name
        azureTenantId: azureTenantId
        azureSubscriptionId: azureSubscriptionId
      properties:
        name:
          maxLength: 30
          minLength: 3
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        azureSubscriptionId:
          minLength: 1
          type: string
        azureClientId:
          minLength: 1
          type: string
        azureClientSecret:
          minLength: 1
          type: string
        azureTenantId:
          minLength: 1
          type: string
        azureLocation:
          minLength: 1
          type: string
        azCount:
          format: int32
          type: integer
        organizationId:
          format: int32
          nullable: true
          type: integer
      required:
      - azureClientId
      - azureClientSecret
      - azureLocation
      - azureSubscriptionId
      - azureTenantId
      - name
      type: object
    CreateBackupPolicyCommand:
      additionalProperties: false
      example:
        cronPeriod: cronPeriod
        name: name
        projectId: 0
        includeNamespaces:
        - includeNamespaces
        - includeNamespaces
        retentionPeriod: retentionPeriod
      properties:
        name:
          maxLength: 30
          minLength: 3
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        includeNamespaces:
          items:
            type: string
          nullable: true
          type: array
        cronPeriod:
          minLength: 1
          type: string
        retentionPeriod:
          minLength: 1
          pattern: ^(\d+h)?(\d+m)?(\d+s)?$
          type: string
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
      required:
      - cronPeriod
      - name
      - projectId
      - retentionPeriod
      type: object
    CreateBillingSummaryCommand:
      additionalProperties: false
      example:
        beginApply: 2000-01-23T04:56:07.000+00:00
        icu: 0
        projectId: 0
      properties:
        icu:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        beginApply:
          format: date-time
          type: string
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
      required:
      - icu
      - projectId
      type: object
    CreateCatalogAppCommand:
      additionalProperties: false
      example:
        catalogId: 0
        repoName: repoName
        packageName: packageName
        version: version
        parameters:
        - isEditableWhenInstalling: true
          value: value
          key: key
          isMandatory: true
          isEditableAfterInstallation: true
        - isEditableWhenInstalling: true
          value: value
          key: key
          isMandatory: true
          isEditableAfterInstallation: true
      properties:
        repoName:
          minLength: 1
          type: string
        packageName:
          minLength: 1
          type: string
        catalogId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        version:
          nullable: true
          type: string
        parameters:
          items:
            $ref: '#/components/schemas/CatalogAppParamsDto'
          nullable: true
          type: array
      required:
      - catalogId
      - packageName
      - repoName
      type: object
    CreateCatalogCommand:
      additionalProperties: false
      example:
        name: name
        description: description
      properties:
        name:
          maxLength: 30
          minLength: 3
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        description:
          nullable: true
          type: string
      required:
      - name
      type: object
    CreateDnsServerCommand:
      additionalProperties: false
      example:
        address: address
        accessProfileId: 0
      properties:
        address:
          minLength: 1
          type: string
        accessProfileId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
      required:
      - accessProfileId
      - address
      type: object
    CreateInvoiceCommand:
      additionalProperties: false
      example:
        isPaid: true
        endDate: 2000-01-23T04:56:07.000+00:00
        price: 18082368.946465593
        dueDate: 2000-01-23T04:56:07.000+00:00
        name: name
        organizationSubscriptionId: 0
        requiredPaymentAction: true
        stripeInvoiceId: stripeInvoiceId
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        name:
          minLength: 1
          type: string
        organizationSubscriptionId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        dueDate:
          format: date-time
          type: string
        isPaid:
          type: boolean
        requiredPaymentAction:
          type: boolean
        stripeInvoiceId:
          nullable: true
          type: string
        price:
          format: double
          maximum: 30000000
          minimum: 1
          type: number
      required:
      - name
      - organizationSubscriptionId
      type: object
    CreateKeyPoolCommand:
      additionalProperties: false
      type: object
    CreateKubeConfigCommand:
      additionalProperties: false
      example:
        isAccessibleForManager: true
        name: name
        namespace: namespace
        isAccessibleForAll: true
        kubeConfigRoleId: 6
        projectId: 0
        userId: userId
        ttl: 1
      properties:
        name:
          maxLength: 230
          minLength: 3
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-z][a-z0-9-]*[a-z0-9]$"
          type: string
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        isAccessibleForAll:
          type: boolean
        isAccessibleForManager:
          type: boolean
        kubeConfigRoleId:
          format: int32
          type: integer
        userId:
          nullable: true
          type: string
        namespace:
          nullable: true
          type: string
        ttl:
          format: int32
          nullable: true
          type: integer
      required:
      - name
      - projectId
      type: object
    CreateKubernetesProfileCommand:
      additionalProperties: false
      example:
        organizationId: 0
        octaviaEnabled: true
        name: name
        exposeNodePortOnBastion: true
        allowSchedulingOnMaster: true
        uniqueClusterName: true
        taikunLBEnabled: true
      properties:
        name:
          maxLength: 30
          minLength: 3
          type: string
        octaviaEnabled:
          type: boolean
        exposeNodePortOnBastion:
          type: boolean
        organizationId:
          format: int32
          nullable: true
          type: integer
        taikunLBEnabled:
          type: boolean
        allowSchedulingOnMaster:
          type: boolean
        uniqueClusterName:
          type: boolean
      required:
      - name
      type: object
    CreateNtpServerCommand:
      additionalProperties: false
      example:
        address: address
        accessProfileId: 0
      properties:
        address:
          minLength: 1
          type: string
        accessProfileId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
      required:
      - accessProfileId
      - address
      type: object
    CreateOpaProfileCommand:
      additionalProperties: false
      example:
        organizationId: 0
        forbidHttpIngress: true
        allowedRepo:
        - allowedRepo
        - allowedRepo
        requireProbe: true
        name: name
        uniqueServiceSelector: true
        forbidSpecificTags:
        - forbidSpecificTags
        - forbidSpecificTags
        forbidNodePort: true
        uniqueIngresses: true
        ingressWhitelist:
        - ingressWhitelist
        - ingressWhitelist
      properties:
        name:
          maxLength: 50
          minLength: 2
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        forbidNodePort:
          type: boolean
        forbidHttpIngress:
          type: boolean
        requireProbe:
          type: boolean
        uniqueIngresses:
          type: boolean
        uniqueServiceSelector:
          type: boolean
        allowedRepo:
          items:
            type: string
          nullable: true
          type: array
        forbidSpecificTags:
          items:
            type: string
          nullable: true
          type: array
        ingressWhitelist:
          items:
            type: string
          nullable: true
          type: array
        organizationId:
          format: int32
          nullable: true
          type: integer
      required:
      - name
      type: object
    CreateOpenstackCloudCommand:
      additionalProperties: false
      example:
        openStackUrl: openStackUrl
        applicationCredEnabled: true
        openStackPassword: openStackPassword
        openStackUser: openStackUser
        isAdmin: true
        openStackVolumeType: openStackVolumeType
        openStackProject: openStackProject
        organizationId: 0
        openStackContinent: openStackContinent
        openStackDomain: openStackDomain
        openStackInternalSubnetId: openStackInternalSubnetId
        name: name
        openStackAvailabilityZone: openStackAvailabilityZone
        openStackRegion: openStackRegion
        openStackImportNetwork: true
        openStackPublicNetwork: openStackPublicNetwork
      properties:
        name:
          maxLength: 30
          minLength: 3
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        openStackUser:
          minLength: 1
          type: string
        openStackPassword:
          minLength: 1
          type: string
        openStackUrl:
          minLength: 1
          type: string
        openStackProject:
          nullable: true
          type: string
        openStackPublicNetwork:
          minLength: 1
          type: string
        openStackAvailabilityZone:
          nullable: true
          type: string
        openStackDomain:
          nullable: true
          type: string
        openStackRegion:
          minLength: 1
          type: string
        openStackContinent:
          nullable: true
          type: string
        openStackVolumeType:
          nullable: true
          type: string
        openStackImportNetwork:
          type: boolean
        openStackInternalSubnetId:
          nullable: true
          type: string
        organizationId:
          format: int32
          nullable: true
          type: integer
        applicationCredEnabled:
          type: boolean
        isAdmin:
          type: boolean
      required:
      - name
      - openStackPassword
      - openStackPublicNetwork
      - openStackRegion
      - openStackUrl
      - openStackUser
      type: object
    CreateProjectAppCommand:
      additionalProperties: false
      example:
        extraValues: extraValues
        name: name
        namespace: namespace
        autoSync: true
        projectId: 0
        catalogAppId: 0
        parameters:
        - value: value
          key: key
        - value: value
          key: key
      properties:
        name:
          maxLength: 63
          minLength: 3
          pattern: "^[a-z]([-a-z0-9]*[a-z0-9])?"
          type: string
        namespace:
          maxLength: 63
          minLength: 1
          pattern: "^[a-z0-9]([-a-z0-9]*[a-z0-9])?"
          type: string
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        catalogAppId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        extraValues:
          nullable: true
          type: string
        autoSync:
          type: boolean
        parameters:
          items:
            $ref: '#/components/schemas/ProjectAppParamsDto'
          nullable: true
          type: array
      required:
      - catalogAppId
      - name
      - namespace
      - projectId
      type: object
    CreateProjectGroupCommand:
      additionalProperties: false
      example:
        organizationId: 0
        name: name
        projectIds:
        - 6
        - 6
      properties:
        name:
          maxLength: 30
          minLength: 3
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        organizationId:
          format: int32
          nullable: true
          type: integer
        projectIds:
          items:
            format: int32
            type: integer
          nullable: true
          type: array
      required:
      - name
      type: object
    CreateSecurityGroupCommand:
      additionalProperties: false
      example:
        protocol: null
        name: name
        standAloneProfileId: 0
        portMinRange: 0
        portMaxRange: 6
        remoteIpPrefix: remoteIpPrefix
      properties:
        name:
          maxLength: 30
          minLength: 3
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        protocol:
          $ref: '#/components/schemas/SecurityGroupProtocol'
        portMinRange:
          format: int32
          type: integer
        portMaxRange:
          format: int32
          type: integer
        remoteIpPrefix:
          minLength: 1
          type: string
        standAloneProfileId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
      required:
      - name
      - remoteIpPrefix
      - standAloneProfileId
      type: object
    CreateStripeCustomerCommand:
      additionalProperties: false
      example:
        legalName: legalName
        country: country
        address: address
        billingEmail: billingEmail
        city: city
        vatNumber: vatNumber
      properties:
        legalName:
          nullable: true
          type: string
        billingEmail:
          nullable: true
          type: string
        country:
          maxLength: 90
          minLength: 3
          type: string
        address:
          nullable: true
          type: string
        city:
          nullable: true
          type: string
        vatNumber:
          nullable: true
          type: string
      required:
      - country
      type: object
    CredentialChartDto:
      additionalProperties: false
      example:
        openstack: 7
        google: 9
        aws: 5
        tanzu: 3
        totalCount: 2
        azure: 2
      properties:
        aws:
          format: int32
          type: integer
        azure:
          format: int32
          type: integer
        openstack:
          format: int32
          type: integer
        google:
          format: int32
          type: integer
        tanzu:
          format: int32
          type: integer
        totalCount:
          format: int32
          type: integer
      type: object
    CredentialMakeDefaultCommand:
      additionalProperties: false
      example:
        id: 0
      properties:
        id:
          format: int32
          type: integer
      type: object
    CredentialsChart:
      additionalProperties: false
      example:
        amazon:
        - projectCount: 6
          projects:
          - name: name
            id: 0
          - name: name
            id: 0
          organizationName: organizationName
          lastModifiedBy: lastModifiedBy
          availabilityZones:
          - availabilityZones
          - availabilityZones
          organizationId: 1
          createdAt: createdAt
          isDefault: true
          createdBy: createdBy
          isLocked: true
          name: name
          id: 0
          lastModified: lastModified
          region: region
          continentName: continentName
        - projectCount: 6
          projects:
          - name: name
            id: 0
          - name: name
            id: 0
          organizationName: organizationName
          lastModifiedBy: lastModifiedBy
          availabilityZones:
          - availabilityZones
          - availabilityZones
          organizationId: 1
          createdAt: createdAt
          isDefault: true
          createdBy: createdBy
          isLocked: true
          name: name
          id: 0
          lastModified: lastModified
          region: region
          continentName: continentName
        totalCountOpenstack: 2
        totalCountAws: 4
        openstack:
        - volumeType: volumeType
          projectCount: 6
          projects:
          - name: name
            id: 0
          - name: name
            id: 0
          project: project
          availabilityZone: availabilityZone
          publicNetwork: publicNetwork
          organizationId: 1
          createdAt: createdAt
          isLocked: true
          id: 0
          organizationName: organizationName
          internalSubnetId: internalSubnetId
          lastModifiedBy: lastModifiedBy
          importNetwork: true
          isAdmin: true
          url: url
          isDefault: true
          createdBy: createdBy
          domain: domain
          name: name
          tenantId: tenantId
          lastModified: lastModified
          region: region
          continentName: continentName
          user: user
        - volumeType: volumeType
          projectCount: 6
          projects:
          - name: name
            id: 0
          - name: name
            id: 0
          project: project
          availabilityZone: availabilityZone
          publicNetwork: publicNetwork
          organizationId: 1
          createdAt: createdAt
          isLocked: true
          id: 0
          organizationName: organizationName
          internalSubnetId: internalSubnetId
          lastModifiedBy: lastModifiedBy
          importNetwork: true
          isAdmin: true
          url: url
          isDefault: true
          createdBy: createdBy
          domain: domain
          name: name
          tenantId: tenantId
          lastModified: lastModified
          region: region
          continentName: continentName
          user: user
        google:
        - projects:
          - name: name
            id: 0
          - name: name
            id: 0
          organizationName: organizationName
          partnerName: partnerName
          partnerLogo: partnerLogo
          billingAccountId: billingAccountId
          zones:
          - zones
          - zones
          folderId: folderId
          organizationId: 5
          createdAt: createdAt
          isDefault: true
          isLocked: true
          name: name
          billingAccountName: billingAccountName
          id: 5
          region: region
          continentName: continentName
          projectId: projectId
        - projects:
          - name: name
            id: 0
          - name: name
            id: 0
          organizationName: organizationName
          partnerName: partnerName
          partnerLogo: partnerLogo
          billingAccountId: billingAccountId
          zones:
          - zones
          - zones
          folderId: folderId
          organizationId: 5
          createdAt: createdAt
          isDefault: true
          isLocked: true
          name: name
          billingAccountName: billingAccountName
          id: 5
          region: region
          continentName: continentName
          projectId: projectId
        totalCountTanzu: 1
        tanzu:
        - volumeType: volumeType
          projectCount: 7
          projects:
          - name: name
            id: 0
          - name: name
            id: 0
          organizationName: organizationName
          lastModifiedBy: lastModifiedBy
          url: url
          organizationId: 3
          createdAt: createdAt
          isDefault: true
          port: 9
          createdBy: createdBy
          isLocked: true
          name: name
          namespace: namespace
          id: 2
          lastModified: lastModified
          continentName: continentName
          username: username
        - volumeType: volumeType
          projectCount: 7
          projects:
          - name: name
            id: 0
          - name: name
            id: 0
          organizationName: organizationName
          lastModifiedBy: lastModifiedBy
          url: url
          organizationId: 3
          createdAt: createdAt
          isDefault: true
          port: 9
          createdBy: createdBy
          isLocked: true
          name: name
          namespace: namespace
          id: 2
          lastModified: lastModified
          continentName: continentName
          username: username
        totalCountGoogle: 1
        azure:
        - projectCount: 6
          projects:
          - name: name
            id: 0
          - name: name
            id: 0
          organizationName: organizationName
          lastModifiedBy: lastModifiedBy
          availabilityZones:
          - availabilityZones
          - availabilityZones
          organizationId: 1
          createdAt: createdAt
          isDefault: true
          createdBy: createdBy
          isLocked: true
          name: name
          tenantId: tenantId
          location: location
          id: 0
          lastModified: lastModified
          continentName: continentName
        - projectCount: 6
          projects:
          - name: name
            id: 0
          - name: name
            id: 0
          organizationName: organizationName
          lastModifiedBy: lastModifiedBy
          availabilityZones:
          - availabilityZones
          - availabilityZones
          organizationId: 1
          createdAt: createdAt
          isDefault: true
          createdBy: createdBy
          isLocked: true
          name: name
          tenantId: tenantId
          location: location
          id: 0
          lastModified: lastModified
          continentName: continentName
        totalCountAzure: 7
      properties:
        amazon:
          items:
            $ref: '#/components/schemas/AmazonCredentialsListDto'
          nullable: true
          type: array
        openstack:
          items:
            $ref: '#/components/schemas/OpenstackCredentialsListDto'
          nullable: true
          type: array
        azure:
          items:
            $ref: '#/components/schemas/AzureCredentialsListDto'
          nullable: true
          type: array
        google:
          items:
            $ref: '#/components/schemas/GoogleCredentialsListDto'
          nullable: true
          type: array
        tanzu:
          items:
            $ref: '#/components/schemas/TanzuCredentialsListDto'
          nullable: true
          type: array
        totalCountOpenstack:
          format: int32
          type: integer
        totalCountAws:
          format: int32
          type: integer
        totalCountAzure:
          format: int32
          type: integer
        totalCountGoogle:
          format: int32
          type: integer
        totalCountTanzu:
          format: int32
          type: integer
      type: object
    CredentialsForCli:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          partnerName: partnerName
          cloudType: cloudType
          id: 0
          cloudCredentialName: cloudCredentialName
        - organizationId: 6
          organizationName: organizationName
          partnerName: partnerName
          cloudType: cloudType
          id: 0
          cloudCredentialName: cloudCredentialName
        totalCount: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/CredentialsForCliDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    CredentialsForCliDto:
      additionalProperties: false
      example:
        organizationId: 6
        organizationName: organizationName
        partnerName: partnerName
        cloudType: cloudType
        id: 0
        cloudCredentialName: cloudCredentialName
      properties:
        id:
          format: int32
          type: integer
        cloudCredentialName:
          nullable: true
          type: string
        cloudType:
          nullable: true
          type: string
        organizationId:
          format: int32
          type: integer
        organizationName:
          nullable: true
          type: string
        partnerName:
          nullable: true
          type: string
      type: object
    CredentialsForProjectList:
      additionalProperties: false
      example:
        cloudType: null
        cloudCredentialRevision: 0
        openstack:
          openStackUrl: openStackUrl
          applicationCredEnabled: true
          openStackPassword: openStackPassword
          openStackUser: openStackUser
          openStackVolumeType: openStackVolumeType
          openStackProject: openStackProject
          openStackTenantId: openStackTenantId
          openStackDomain: openStackDomain
          openStackInternalSubnetId: openStackInternalSubnetId
          openStackAvailabilityZone: openStackAvailabilityZone
          openStackRegion: openStackRegion
          openStackImportNetwork: true
          openStackPublicNetwork: openStackPublicNetwork
        google:
          zone: zone
          billingAccountId: billingAccountId
          region: region
          config: config
          folderId: folderId
        billingEnabled: true
        continentName: continentName
        aws:
          awsRegion: awsRegion
          awsAccessKeyId: awsAccessKeyId
          awsSecretAccessKey: awsSecretAccessKey
        tanzu:
          volumeType: volumeType
          password: password
          port: 6
          namespace: namespace
          url: url
          username: username
        requiresVPN: true
        proxmox:
          password: password
          proxmoxNetworks:
          - netMask: 1
            ipAddress: ipAddress
            bridge: bridge
            isPrivate: true
            gateway: gateway
          - netMask: 1
            ipAddress: ipAddress
            bridge: bridge
            isPrivate: true
            gateway: gateway
          storage: storage
          vmTemplateName: vmTemplateName
          url: url
          username: username
        azure:
          azureClientSecret: azureClientSecret
          azureClientId: azureClientId
          azureLocation: azureLocation
          azureTenantId: azureTenantId
          azureSubscriptionId: azureSubscriptionId
      properties:
        cloudType:
          $ref: '#/components/schemas/CloudType'
        cloudCredentialRevision:
          format: int32
          type: integer
        billingEnabled:
          type: boolean
        continentName:
          nullable: true
          type: string
        requiresVPN:
          type: boolean
        openstack:
          $ref: '#/components/schemas/OpenstackCredentialsForProjectDto'
        azure:
          $ref: '#/components/schemas/AzureCredentialsForProjectDto'
        aws:
          $ref: '#/components/schemas/AwsCredentialsForProjectDto'
        google:
          $ref: '#/components/schemas/GoogleCredentialForProjectDto'
        tanzu:
          $ref: '#/components/schemas/TanzuCredentialsForProjectDto'
        proxmox:
          $ref: '#/components/schemas/ProxmoxCredentialsForProjectDto'
      type: object
    CronJobCommand:
      additionalProperties: false
      example:
        cronPeriod: cronPeriod
      properties:
        cronPeriod:
          minLength: 1
          type: string
      required:
      - cronPeriod
      type: object
    DaemonSetDto:
      additionalProperties: false
      example:
        namespace: namespace
        metadataName: metadataName
        age: age
        status: status
      properties:
        metadataName:
          nullable: true
          type: string
        status:
          nullable: true
          type: string
        namespace:
          nullable: true
          type: string
        age:
          nullable: true
          type: string
      type: object
    DaemonSetSearchCommand:
      additionalProperties: false
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          nullable: true
          type: integer
        offset:
          format: int32
          nullable: true
          type: integer
        searchTerm:
          nullable: true
          type: string
      type: object
    DaemonSetSearchList:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/CommonSearchKubernetesResponseData'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    DaemonSets:
      additionalProperties: false
      example:
        data:
        - namespace: namespace
          metadataName: metadataName
          age: age
          status: status
        - namespace: namespace
          metadataName: metadataName
          age: age
          status: status
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/DaemonSetDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    DashboardChart:
      additionalProperties: false
      example:
        projects:
          updating:
          - expiredAt: expiredAt
            name: name
            id: 1
          - expiredAt: expiredAt
            name: name
            id: 1
          pending:
          - expiredAt: expiredAt
            name: name
            id: 1
          - expiredAt: expiredAt
            name: name
            id: 1
          failed:
          - expiredAt: expiredAt
            name: name
            id: 1
          - expiredAt: expiredAt
            name: name
            id: 1
          totalCount: 5
          succeeded:
          - expiredAt: expiredAt
            name: name
            id: 1
          - expiredAt: expiredAt
            name: name
            id: 1
        servers:
          totalUpdatingCount: 1
          totalDiskSize: 1
          waiting:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          totalGoogleCount: 6
          google:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          failed:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          tanzu:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          totalCount: 7
          totalRam: 1
          totalSucceededCount: 7
          totalOpenstackCount: 9
          totalPendingCount: 4
          usedResources:
          - diskSize: 6
            maxRam: 1
            cpu: 6
            maxCpu: 2
            projectName: projectName
            maxDiskSize: 6
            projectId: 9
            ram: 3
          - diskSize: 6
            maxRam: 1
            cpu: 6
            maxCpu: 2
            projectName: projectName
            maxDiskSize: 6
            projectId: 9
            ram: 3
          updating:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          totalCpu: 1
          totalFailedCount: 6
          totalAzureCount: 9
          openstack:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          totalAwsCount: 5
          totalTanzuCount: 8
          aws:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          azure:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          succeeded:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
        standAloneVms:
          totalUpdatingCount: 1
          totalDiskSize: 1
          waiting:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          totalGoogleCount: 6
          google:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          failed:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          tanzu:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          totalCount: 7
          totalRam: 1
          totalSucceededCount: 7
          totalOpenstackCount: 9
          totalPendingCount: 4
          usedResources:
          - diskSize: 6
            maxRam: 1
            cpu: 6
            maxCpu: 2
            projectName: projectName
            maxDiskSize: 6
            projectId: 9
            ram: 3
          - diskSize: 6
            maxRam: 1
            cpu: 6
            maxCpu: 2
            projectName: projectName
            maxDiskSize: 6
            projectId: 9
            ram: 3
          updating:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          totalCpu: 1
          totalFailedCount: 6
          totalAzureCount: 9
          openstack:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          totalAwsCount: 5
          totalTanzuCount: 8
          aws:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          azure:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          succeeded:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
        organization:
          name: name
          id: 0
          users: 6
        cloudCredentials:
          openstack: 7
          google: 9
          aws: 5
          tanzu: 3
          totalCount: 2
          azure: 2
      properties:
        organization:
          $ref: '#/components/schemas/OrganizationEntityForDashboard'
        projects:
          $ref: '#/components/schemas/ProjectChartDto'
        cloudCredentials:
          $ref: '#/components/schemas/CredentialChartDto'
        servers:
          $ref: '#/components/schemas/ServerChartDto'
        standAloneVms:
          $ref: '#/components/schemas/ServerChartDto'
      type: object
    DeleteAlertCommand:
      additionalProperties: false
      example:
        projectId: 0
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
      required:
      - projectId
      type: object
    DeleteBackupCommand:
      additionalProperties: false
      example:
        name: name
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
      type: object
    DeleteBackupStorageLocationCommand:
      additionalProperties: false
      example:
        storageLocation: storageLocation
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        storageLocation:
          nullable: true
          type: string
      type: object
    DeleteExpiredAlertsCommand:
      additionalProperties: false
      type: object
    DeleteExpiredEventsCommand:
      additionalProperties: false
      type: object
    DeleteExpiredHistoryLogsCommand:
      additionalProperties: false
      type: object
    DeleteExpiredRefreshTokensCommand:
      additionalProperties: false
      type: object
    DeleteImageFromProjectCommand:
      additionalProperties: false
      example:
        ids:
        - 0
        - 0
      properties:
        ids:
          items:
            format: int32
            type: integer
          nullable: true
          type: array
      type: object
    DeleteKubeConfigByProjectIdCommand:
      additionalProperties: false
      example:
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
      type: object
    DeleteKubeConfigCommand:
      additionalProperties: false
      example:
        id: 0
      properties:
        id:
          format: int32
          type: integer
      type: object
    DeleteRedundantProjectActionsCommand:
      additionalProperties: false
      type: object
    DeleteRemovedUsersKubeConfigCommand:
      additionalProperties: false
      type: object
    DeleteRequestsCommand:
      additionalProperties: false
      type: object
    DeleteRestoreCommand:
      additionalProperties: false
      example:
        name: name
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
      type: object
    DeleteScheduleCommand:
      additionalProperties: false
      example:
        name: name
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
      type: object
    DeploymentDto:
      additionalProperties: false
      example:
        namespace: namespace
        metadataName: metadataName
        age: age
        status: status
      properties:
        metadataName:
          nullable: true
          type: string
        status:
          nullable: true
          type: string
        namespace:
          nullable: true
          type: string
        age:
          nullable: true
          type: string
      type: object
    DeploymentSearchCommand:
      additionalProperties: false
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          nullable: true
          type: integer
        offset:
          format: int32
          nullable: true
          type: integer
        searchTerm:
          nullable: true
          type: string
      type: object
    DeploymentSearchList:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/CommonSearchKubernetesResponseData'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    Deployments:
      additionalProperties: false
      example:
        data:
        - namespace: namespace
          metadataName: metadataName
          age: age
          status: status
        - namespace: namespace
          metadataName: metadataName
          age: age
          status: status
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/DeploymentDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    DescribeConfigMapCommand:
      additionalProperties: false
      example:
        name: name
        namespace: namespace
        projectId: 0
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          minLength: 1
          type: string
        namespace:
          minLength: 1
          type: string
      required:
      - name
      - namespace
      - projectId
      type: object
    DescribeCrdCommand:
      additionalProperties: false
      example:
        name: name
        projectId: 0
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          minLength: 1
          type: string
      required:
      - name
      - projectId
      type: object
    DescribeCronJobCommand:
      additionalProperties: false
      example:
        name: name
        namespace: namespace
        projectId: 0
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          minLength: 1
          type: string
        namespace:
          minLength: 1
          type: string
      required:
      - name
      - namespace
      - projectId
      type: object
    DescribeDaemonSetCommand:
      additionalProperties: false
      example:
        name: name
        namespace: namespace
        projectId: 0
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          minLength: 1
          type: string
        namespace:
          minLength: 1
          type: string
      required:
      - name
      - namespace
      - projectId
      type: object
    DescribeDeploymentCommand:
      additionalProperties: false
      example:
        name: name
        namespace: namespace
        projectId: 0
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          minLength: 1
          type: string
        namespace:
          minLength: 1
          type: string
      required:
      - name
      - namespace
      - projectId
      type: object
    DescribeIngressCommand:
      additionalProperties: false
      example:
        name: name
        namespace: namespace
        projectId: 0
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          minLength: 1
          type: string
        namespace:
          minLength: 1
          type: string
      required:
      - name
      - namespace
      - projectId
      type: object
    DescribeJobCommand:
      additionalProperties: false
      example:
        name: name
        namespace: namespace
        projectId: 0
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          minLength: 1
          type: string
        namespace:
          minLength: 1
          type: string
      required:
      - name
      - namespace
      - projectId
      type: object
    DescribeNetworkPolicyCommand:
      additionalProperties: false
      example:
        name: name
        namespace: namespace
        projectId: 0
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          minLength: 1
          type: string
        namespace:
          minLength: 1
          type: string
      required:
      - name
      - namespace
      - projectId
      type: object
    DescribeNodeCommand:
      additionalProperties: false
      example:
        name: name
        projectId: 0
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          minLength: 1
          type: string
      required:
      - name
      - projectId
      type: object
    DescribePodCommand:
      additionalProperties: false
      example:
        name: name
        namespace: namespace
        projectId: 0
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          minLength: 1
          type: string
        namespace:
          minLength: 1
          type: string
      required:
      - name
      - namespace
      - projectId
      type: object
    DescribePodDisruptionCommand:
      additionalProperties: false
      example:
        name: name
        namespace: namespace
        projectId: 0
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          minLength: 1
          type: string
        namespace:
          minLength: 1
          type: string
      required:
      - name
      - namespace
      - projectId
      type: object
    DescribePvcCommand:
      additionalProperties: false
      example:
        name: name
        namespace: namespace
        projectId: 0
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          minLength: 1
          type: string
        namespace:
          minLength: 1
          type: string
      required:
      - name
      - namespace
      - projectId
      type: object
    DescribeSecretCommand:
      additionalProperties: false
      example:
        name: name
        namespace: namespace
        projectId: 0
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          minLength: 1
          type: string
        namespace:
          minLength: 1
          type: string
      required:
      - name
      - namespace
      - projectId
      type: object
    DescribeServiceCommand:
      additionalProperties: false
      example:
        name: name
        namespace: namespace
        projectId: 0
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          minLength: 1
          type: string
        namespace:
          minLength: 1
          type: string
      required:
      - name
      - namespace
      - projectId
      type: object
    DescribeStorageClassCommand:
      additionalProperties: false
      example:
        name: name
        projectId: 0
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          minLength: 1
          type: string
      required:
      - name
      - projectId
      type: object
    DescribeStsCommand:
      additionalProperties: false
      example:
        name: name
        namespace: namespace
        projectId: 0
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          minLength: 1
          type: string
        namespace:
          minLength: 1
          type: string
      required:
      - name
      - namespace
      - projectId
      type: object
    DisableAutoscalingCommand:
      additionalProperties: false
      example:
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
      type: object
    DisableBackupCommand:
      additionalProperties: false
      example:
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
      type: object
    DisableGatekeeperCommand:
      additionalProperties: false
      example:
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
      type: object
    DnsCommand:
      additionalProperties: false
      example:
        address: address
      properties:
        address:
          minLength: 1
          type: string
      required:
      - address
      type: object
    DnsNtpAddressEditDto:
      additionalProperties: false
      example:
        address: address
      properties:
        address:
          nullable: true
          type: string
      type: object
    DnsServerCreateDto:
      additionalProperties: false
      example:
        address: address
      properties:
        address:
          minLength: 1
          type: string
      required:
      - address
      type: object
    DnsServerListDto:
      additionalProperties: false
      example:
        address: address
        id: 1
      properties:
        id:
          format: int32
          type: integer
        address:
          nullable: true
          type: string
      type: object
    DnsServersListDto:
      additionalProperties: false
      example:
        address: address
        accessProfileName: accessProfileName
        id: 0
      properties:
        id:
          format: int32
          type: integer
        address:
          nullable: true
          type: string
        accessProfileName:
          nullable: true
          type: string
      type: object
    DocumentationData:
      additionalProperties: false
      example:
        role: role
        link: link
        id: 0
        key: key
      properties:
        id:
          format: int32
          type: integer
        key:
          nullable: true
          type: string
        link:
          nullable: true
          type: string
        role:
          nullable: true
          type: string
      type: object
    DocumentationsList:
      additionalProperties: false
      example:
        data:
        - role: role
          link: link
          id: 0
          key: key
        - role: role
          link: link
          id: 0
          key: key
        totalCount: 6
      properties:
        data:
          items:
            $ref: '#/components/schemas/DocumentationData'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    DownloadInvoiceCommand:
      additionalProperties: false
      example:
        name: name
        id: 0
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
      type: object
    DownloadKubeConfigCommand:
      additionalProperties: false
      example:
        id: 0
        projectId: 6
      properties:
        id:
          format: int32
          type: integer
        projectId:
          format: int32
          type: integer
      type: object
    DuplicateNameCheckerCommand:
      additionalProperties: false
      example:
        organizationId: 0
        name: name
        type: type
      properties:
        organizationId:
          format: int32
          nullable: true
          type: integer
        type:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
      required:
      - name
      - type
      type: object
    EditAlertingIntegrationCommand:
      additionalProperties: false
      example:
        alertingProfileId: 0
        id: 0
        url: url
        token: token
        alertingIntegrationType: null
      properties:
        id:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        url:
          minLength: 1
          type: string
        token:
          nullable: true
          type: string
        alertingIntegrationType:
          $ref: '#/components/schemas/AlertingIntegrationType'
        alertingProfileId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
      required:
      - alertingIntegrationType
      - alertingProfileId
      - id
      - url
      type: object
    EditAllowedHostDto:
      additionalProperties: false
      example:
        ipAddress: ipAddress
        description: description
        maskBits: 0
      properties:
        description:
          nullable: true
          type: string
        ipAddress:
          nullable: true
          type: string
        maskBits:
          format: int32
          type: integer
      type: object
    EditAutoscalingCommand:
      additionalProperties: false
      example:
        minSize: 60
        maxSize: 14
        projectId: 0
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        minSize:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
        maxSize:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
      required:
      - projectId
      type: object
    EditCatalogAppParamCommand:
      additionalProperties: false
      example:
        catalogAppId: 0
        parameters:
        - isEditableWhenInstalling: true
          value: value
          key: key
          isMandatory: true
          isEditableAfterInstallation: true
        - isEditableWhenInstalling: true
          value: value
          key: key
          isMandatory: true
          isEditableAfterInstallation: true
      properties:
        catalogAppId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        parameters:
          items:
            $ref: '#/components/schemas/CatalogAppParamsDto'
          nullable: true
          type: array
      required:
      - catalogAppId
      type: object
    EditCatalogAppVersionCommand:
      additionalProperties: false
      example:
        catalogAppId: 0
        version: version
      properties:
        catalogAppId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        version:
          minLength: 1
          type: string
      required:
      - catalogAppId
      - version
      type: object
    EditCatalogCommand:
      additionalProperties: false
      example:
        name: name
        description: description
        id: 0
      properties:
        id:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          maxLength: 30
          minLength: 3
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        description:
          nullable: true
          type: string
      required:
      - id
      - name
      type: object
    EditProjectAppParamsDto:
      additionalProperties: false
      example:
        value: value
        key: key
      properties:
        key:
          minLength: 1
          type: string
        value:
          nullable: true
          type: string
      required:
      - key
      type: object
    EditSecurityGroupCommand:
      additionalProperties: false
      example:
        protocol: null
        name: name
        id: 0
        portMinRange: 6
        portMaxRange: 1
        remoteIpPrefix: remoteIpPrefix
      properties:
        id:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          maxLength: 30
          minLength: 3
          type: string
        protocol:
          $ref: '#/components/schemas/SecurityGroupProtocol'
        portMinRange:
          format: int32
          type: integer
        portMaxRange:
          format: int32
          type: integer
        remoteIpPrefix:
          minLength: 1
          type: string
      required:
      - id
      - name
      - remoteIpPrefix
      type: object
    EnableAutoscalingCommand:
      additionalProperties: false
      example:
        flavor: flavor
        diskSize: 5257355331280.957
        spotEnabled: true
        minSize: 60
        maxSize: 14
        id: 0
        autoscalingGroupName: autoscalingGroupName
      properties:
        id:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        autoscalingGroupName:
          minLength: 1
          type: string
        minSize:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
        maxSize:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
        diskSize:
          format: double
          maximum: 8796093022209
          minimum: 32212254719
          type: number
        flavor:
          minLength: 1
          type: string
        spotEnabled:
          type: boolean
      required:
      - autoscalingGroupName
      - flavor
      - id
      type: object
    EnableBackupCommand:
      additionalProperties: false
      example:
        s3CredentialId: 6
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        s3CredentialId:
          format: int32
          type: integer
      type: object
    EnableGatekeeperCommand:
      additionalProperties: false
      example:
        opaProfileId: 6
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        opaProfileId:
          format: int32
          type: integer
      type: object
    EnumList:
      additionalProperties: false
      example:
        serverStatuses:
        - name: name
          id: 0
        - name: name
          id: 0
        prometheusTypes:
        - name: name
          id: 0
        - name: name
          id: 0
        availability:
        - name: name
          id: true
        - name: name
          id: true
        azureQuotas:
        - name: name
          id: 0
        - name: name
          id: 0
        auditLogs:
        - name: name
          id: 0
        - name: name
          id: 0
        showbackKinds:
        - name: name
          id: 0
        - name: name
          id: 0
        requestLogs:
        - name: name
          id: 0
        - name: name
          id: 0
        ticketPriorities:
        - name: name
          id: 0
        - name: name
          id: 0
        cloudTypes:
        - name: name
          id: 0
        - name: name
          id: 0
        openstackContinents:
        - name: name
          id: id
        - name: name
          id: id
        awsPlatforms:
        - name: name
          id: id
        - name: name
          id: id
        proxmoxRoles:
        - name: name
          id: 0
        - name: name
          id: 0
        projectStatuses:
        - name: name
          id: 0
        - name: name
          id: 0
        standaloneVmStatuses:
        - name: name
          id: 0
        - name: name
          id: 0
        reminderTypes:
        - name: name
          id: 0
        - name: name
          id: 0
        alertTypes:
        - name: name
          id: 0
        - name: name
          id: 0
        retentionPeriods:
        - name: name
          id: id
        - name: name
          id: id
        googleImageTypes:
        - name: name
          id: 0
        - name: name
          id: 0
        slackTypes:
        - name: name
          id: 0
        - name: name
          id: 0
        userRoles:
        - name: name
          id: 0
        - name: name
          id: 0
        cronPeriods:
        - name: name
          id: id
        - name: name
          id: id
        serverRoles:
        - name: name
          id: 0
        - name: name
          id: 0
        validityPeriods:
        - name: name
          id: 0
        - name: name
          id: 0
        securityGroupRules:
        - name: name
          id: 0
        - name: name
          id: 0
        alertingIntegrationTypes:
        - name: name
          id: 0
        - name: name
          id: 0
        rebootOptions:
        - name: name
          id: 0
        - name: name
          id: 0
      properties:
        cloudTypes:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          nullable: true
          type: array
        projectStatuses:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          nullable: true
          type: array
        serverRoles:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          nullable: true
          type: array
        serverStatuses:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          nullable: true
          type: array
        userRoles:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          nullable: true
          type: array
        securityGroupRules:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          nullable: true
          type: array
        prometheusTypes:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          nullable: true
          type: array
        auditLogs:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          nullable: true
          type: array
        rebootOptions:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          nullable: true
          type: array
        availability:
          items:
            $ref: '#/components/schemas/CommonAvailabilityDto'
          nullable: true
          type: array
        slackTypes:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          nullable: true
          type: array
        requestLogs:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          nullable: true
          type: array
        azureQuotas:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          nullable: true
          type: array
        showbackKinds:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          nullable: true
          type: array
        alertTypes:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          nullable: true
          type: array
        reminderTypes:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          nullable: true
          type: array
        awsPlatforms:
          items:
            $ref: '#/components/schemas/CommonStringBasedDropdownDto'
          nullable: true
          type: array
        cronPeriods:
          items:
            $ref: '#/components/schemas/CommonStringBasedDropdownDto'
          nullable: true
          type: array
        validityPeriods:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          nullable: true
          type: array
        alertingIntegrationTypes:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          nullable: true
          type: array
        googleImageTypes:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          nullable: true
          type: array
        standaloneVmStatuses:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          nullable: true
          type: array
        openstackContinents:
          items:
            $ref: '#/components/schemas/CommonStringBasedDropdownDto'
          nullable: true
          type: array
        retentionPeriods:
          items:
            $ref: '#/components/schemas/CommonStringBasedDropdownDto'
          nullable: true
          type: array
        ticketPriorities:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          nullable: true
          type: array
        proxmoxRoles:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          nullable: true
          type: array
      type: object
    ExceededQuotaList:
      additionalProperties: false
      example:
        data: ""
        totalCount: 0
      properties:
        data:
          nullable: true
        totalCount:
          format: int32
          type: integer
      type: object
    FillArtifacthubOrganizationCommand:
      additionalProperties: false
      type: object
    FinalPriceCommand:
      additionalProperties: false
      example:
        subscriptionId: 0
      properties:
        subscriptionId:
          format: int32
          type: integer
      type: object
    FinalPriceDto:
      additionalProperties: false
      example:
        yearlyFinalPrice: 0.8008281904610115
        monthlyFinalPrice: 6.027456183070403
      properties:
        yearlyFinalPrice:
          format: double
          type: number
        monthlyFinalPrice:
          format: double
          type: number
      type: object
    FlavorsListDto:
      additionalProperties: false
      example:
        maxDataDiskCount: 1.4658129805029452
        name: name
        cpu: 6
        description: ""
        ram: 0
      properties:
        ram:
          format: int64
          type: integer
        cpu:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        description:
          nullable: true
        maxDataDiskCount:
          format: double
          nullable: true
          type: number
      type: object
    ForgotPasswordCommand:
      additionalProperties: false
      example:
        email: email
      properties:
        email:
          nullable: true
          type: string
      type: object
    GetCatalogAppValueAutocompleteCommand:
      additionalProperties: false
      example:
        packageId: packageId
        version: version
        catalogAppId: 0
      properties:
        packageId:
          minLength: 1
          type: string
        version:
          minLength: 1
          type: string
        catalogAppId:
          format: int32
          nullable: true
          type: integer
      required:
      - packageId
      - version
      type: object
    GetCatalogAppValueCommand:
      additionalProperties: false
      example:
        packageId: packageId
        version: version
      properties:
        packageId:
          minLength: 1
          type: string
        version:
          minLength: 1
          type: string
      required:
      - packageId
      - version
      type: object
    GetProjectOperationCommand:
      additionalProperties: false
      example:
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
      type: object
    GetToken:
      additionalProperties: false
      example:
        refreshTokenExpireTime: 2000-01-23T04:56:07.000+00:00
        token: token
        refreshToken: refreshToken
      properties:
        token:
          nullable: true
          type: string
        refreshToken:
          nullable: true
          type: string
        refreshTokenExpireTime:
          format: date-time
          type: string
      type: object
    GoogleCommonImages:
      additionalProperties: false
      example:
        displayName: displayName
        name: name
      properties:
        name:
          nullable: true
          type: string
        displayName:
          nullable: true
          type: string
      type: object
    GoogleCredentialForProjectDto:
      additionalProperties: false
      example:
        zone: zone
        billingAccountId: billingAccountId
        region: region
        config: config
        folderId: folderId
      properties:
        config:
          nullable: true
          type: string
        folderId:
          nullable: true
          type: string
        billingAccountId:
          nullable: true
          type: string
        zone:
          nullable: true
          type: string
        region:
          nullable: true
          type: string
      type: object
    GoogleCredentialList:
      additionalProperties: false
      example:
        data:
        - projects:
          - name: name
            id: 0
          - name: name
            id: 0
          organizationName: organizationName
          partnerName: partnerName
          partnerLogo: partnerLogo
          billingAccountId: billingAccountId
          zones:
          - zones
          - zones
          folderId: folderId
          organizationId: 5
          createdAt: createdAt
          isDefault: true
          isLocked: true
          name: name
          billingAccountName: billingAccountName
          id: 5
          region: region
          continentName: continentName
          projectId: projectId
        - projects:
          - name: name
            id: 0
          - name: name
            id: 0
          organizationName: organizationName
          partnerName: partnerName
          partnerLogo: partnerLogo
          billingAccountId: billingAccountId
          zones:
          - zones
          - zones
          folderId: folderId
          organizationId: 5
          createdAt: createdAt
          isDefault: true
          isLocked: true
          name: name
          billingAccountName: billingAccountName
          id: 5
          region: region
          continentName: continentName
          projectId: projectId
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/GoogleCredentialsListDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    GoogleCredentialsListDto:
      additionalProperties: false
      example:
        projects:
        - name: name
          id: 0
        - name: name
          id: 0
        organizationName: organizationName
        partnerName: partnerName
        partnerLogo: partnerLogo
        billingAccountId: billingAccountId
        zones:
        - zones
        - zones
        folderId: folderId
        organizationId: 5
        createdAt: createdAt
        isDefault: true
        isLocked: true
        name: name
        billingAccountName: billingAccountName
        id: 5
        region: region
        continentName: continentName
        projectId: projectId
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        projects:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          nullable: true
          type: array
        organizationId:
          format: int32
          type: integer
        organizationName:
          nullable: true
          type: string
        partnerLogo:
          nullable: true
          type: string
        partnerName:
          nullable: true
          type: string
        folderId:
          nullable: true
          type: string
        projectId:
          nullable: true
          type: string
        billingAccountId:
          nullable: true
          type: string
        zones:
          items:
            type: string
          nullable: true
          type: array
        region:
          nullable: true
          type: string
        isLocked:
          type: boolean
        isDefault:
          type: boolean
        billingAccountName:
          nullable: true
          type: string
        createdAt:
          nullable: true
          type: string
        continentName:
          nullable: true
          type: string
      type: object
    GoogleFlavorDto:
      additionalProperties: false
      example:
        windowsSpotPrice: windowsSpotPrice
        name: name
        cpu: 0
        description: ""
        windowsPrice: windowsPrice
        linuxPrice: linuxPrice
        ram: 6
        linuxSpotPrice: linuxSpotPrice
      properties:
        name:
          nullable: true
          type: string
        cpu:
          format: int32
          nullable: true
          type: integer
        ram:
          format: int64
          nullable: true
          type: integer
        description:
          nullable: true
        linuxPrice:
          nullable: true
          type: string
        windowsPrice:
          nullable: true
          type: string
        linuxSpotPrice:
          nullable: true
          type: string
        windowsSpotPrice:
          nullable: true
          type: string
      type: object
    GoogleFlavorList:
      additionalProperties: false
      example:
        data:
        - windowsSpotPrice: windowsSpotPrice
          name: name
          cpu: 0
          description: ""
          windowsPrice: windowsPrice
          linuxPrice: linuxPrice
          ram: 6
          linuxSpotPrice: linuxSpotPrice
        - windowsSpotPrice: windowsSpotPrice
          name: name
          cpu: 0
          description: ""
          windowsPrice: windowsPrice
          linuxPrice: linuxPrice
          ram: 6
          linuxSpotPrice: linuxSpotPrice
        totalCount: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/GoogleFlavorDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    GoogleImageList:
      additionalProperties: false
      example:
        data:
        - name: name
          id: id
        - name: name
          id: id
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/CommonStringBasedDropdownDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    GoogleOwnerDetails:
      additionalProperties: false
      example:
        owner: owner
        image:
          displayName: displayName
          name: name
      properties:
        owner:
          nullable: true
          type: string
        image:
          $ref: '#/components/schemas/GoogleCommonImages'
      type: object
    GroupedBillingInfo:
      additionalProperties: false
      example:
        data:
        - tcu: 0
          startDate: startDate
        - tcu: 0
          startDate: startDate
        projectName: projectName
        projectId: 6
      properties:
        data:
          items:
            $ref: '#/components/schemas/GroupedBillings'
          nullable: true
          type: array
        projectId:
          format: int32
          type: integer
        projectName:
          nullable: true
          type: string
      type: object
    GroupedBillings:
      additionalProperties: false
      example:
        tcu: 0
        startDate: startDate
      properties:
        startDate:
          nullable: true
          type: string
        tcu:
          format: int64
          type: integer
      type: object
    HelmMetadata:
      additionalProperties: false
      example:
        name: name
        namespace: namespace
        creationTimestamp: creationTimestamp
      properties:
        name:
          nullable: true
          type: string
        namespace:
          nullable: true
          type: string
        creationTimestamp:
          nullable: true
          type: string
      type: object
    HelmReleaseDto:
      additionalProperties: false
      example:
        metadata:
          name: name
          namespace: namespace
          creationTimestamp: creationTimestamp
        apiVersion: apiVersion
        kind: kind
        spec:
          targetNamespace: targetNamespace
          releaseName: releaseName
          values:
            parent: null
            root: null
            options:
              propertyNameCaseInsensitive: true
          storageNamespace: storageNamespace
          interval: interval
          chart:
            spec:
              interval: interval
              sourceRef:
                kind: kind
                name: name
              chart: chart
              version: version
          url: url
        status:
          failures: 0
          helmChart: helmChart
          conditions:
          - reason: reason
            lastTransitionTime: 2000-01-23T04:56:07.000+00:00
            message: message
            type: type
            status: status
          - reason: reason
            lastTransitionTime: 2000-01-23T04:56:07.000+00:00
            message: message
            type: type
            status: status
          observedGeneration: 6
      properties:
        apiVersion:
          nullable: true
          type: string
        kind:
          nullable: true
          type: string
        metadata:
          $ref: '#/components/schemas/HelmMetadata'
        spec:
          $ref: '#/components/schemas/HelmSpec'
        status:
          $ref: '#/components/schemas/HelmStatus'
      type: object
    HelmReleasesList:
      additionalProperties: false
      example:
        data:
        - metadata:
            name: name
            namespace: namespace
            creationTimestamp: creationTimestamp
          apiVersion: apiVersion
          kind: kind
          spec:
            targetNamespace: targetNamespace
            releaseName: releaseName
            values:
              parent: null
              root: null
              options:
                propertyNameCaseInsensitive: true
            storageNamespace: storageNamespace
            interval: interval
            chart:
              spec:
                interval: interval
                sourceRef:
                  kind: kind
                  name: name
                chart: chart
                version: version
            url: url
          status:
            failures: 0
            helmChart: helmChart
            conditions:
            - reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              status: status
            - reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              status: status
            observedGeneration: 6
        - metadata:
            name: name
            namespace: namespace
            creationTimestamp: creationTimestamp
          apiVersion: apiVersion
          kind: kind
          spec:
            targetNamespace: targetNamespace
            releaseName: releaseName
            values:
              parent: null
              root: null
              options:
                propertyNameCaseInsensitive: true
            storageNamespace: storageNamespace
            interval: interval
            chart:
              spec:
                interval: interval
                sourceRef:
                  kind: kind
                  name: name
                chart: chart
                version: version
            url: url
          status:
            failures: 0
            helmChart: helmChart
            conditions:
            - reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              status: status
            - reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              status: status
            observedGeneration: 6
        totalCount: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/HelmReleaseDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    HelmSpec:
      additionalProperties: false
      example:
        targetNamespace: targetNamespace
        releaseName: releaseName
        values:
          parent: null
          root: null
          options:
            propertyNameCaseInsensitive: true
        storageNamespace: storageNamespace
        interval: interval
        chart:
          spec:
            interval: interval
            sourceRef:
              kind: kind
              name: name
            chart: chart
            version: version
        url: url
      properties:
        interval:
          nullable: true
          type: string
        releaseName:
          nullable: true
          type: string
        url:
          nullable: true
          type: string
        targetNamespace:
          nullable: true
          type: string
        storageNamespace:
          nullable: true
          type: string
        chart:
          $ref: '#/components/schemas/Chart'
        values:
          $ref: '#/components/schemas/JsonNode'
      type: object
    HelmStatus:
      additionalProperties: false
      example:
        failures: 0
        helmChart: helmChart
        conditions:
        - reason: reason
          lastTransitionTime: 2000-01-23T04:56:07.000+00:00
          message: message
          type: type
          status: status
        - reason: reason
          lastTransitionTime: 2000-01-23T04:56:07.000+00:00
          message: message
          type: type
          status: status
        observedGeneration: 6
      properties:
        conditions:
          items:
            $ref: '#/components/schemas/Condition'
          nullable: true
          type: array
        failures:
          format: int64
          type: integer
        helmChart:
          nullable: true
          type: string
        observedGeneration:
          format: int64
          type: integer
      type: object
    IResult:
      additionalProperties: false
      type: object
    ImageByIdCommand:
      additionalProperties: false
      example:
        imageId: imageId
        cloudId: 0
      properties:
        cloudId:
          format: int32
          type: integer
        imageId:
          nullable: true
          type: string
      type: object
    ImportBackupStorageLocationCommand:
      additionalProperties: false
      example:
        targetProjectId: 0
        sourceProjectId: 6
      properties:
        targetProjectId:
          format: int32
          type: integer
        sourceProjectId:
          format: int32
          type: integer
      type: object
    IngressDto:
      additionalProperties: false
      example:
        hosts: hosts
        namespace: namespace
        metadataName: metadataName
        age: age
      properties:
        metadataName:
          nullable: true
          type: string
        hosts:
          nullable: true
          type: string
        namespace:
          nullable: true
          type: string
        age:
          nullable: true
          type: string
      type: object
    IngressSearchCommand:
      additionalProperties: false
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          nullable: true
          type: integer
        offset:
          format: int32
          nullable: true
          type: integer
        searchTerm:
          nullable: true
          type: string
      type: object
    IngressSearchList:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/CommonSearchKubernetesResponseData'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    Ingresses:
      additionalProperties: false
      example:
        data:
        - hosts: hosts
          namespace: namespace
          metadataName: metadataName
          age: age
        - hosts: hosts
          namespace: namespace
          metadataName: metadataName
          age: age
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/IngressDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    InteractiveShellSendCommand:
      additionalProperties: false
      example:
        projectId: 0
        token: token
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        token:
          minLength: 1
          type: string
      required:
      - projectId
      - token
      type: object
    InvoiceDto:
      additionalProperties: false
      example:
        isPaid: true
        endDate: 2000-01-23T04:56:07.000+00:00
        documentNumber: documentNumber
        price: 2.3021358869347655
        dueDate: 2000-01-23T04:56:07.000+00:00
        name: name
        organizationSubscriptionId: 5
        requiredPaymentAction: true
        stripeInvoiceId: stripeInvoiceId
        id: 5
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        documentNumber:
          nullable: true
          type: string
        organizationSubscriptionId:
          format: int32
          type: integer
        isPaid:
          type: boolean
        requiredPaymentAction:
          type: boolean
        stripeInvoiceId:
          nullable: true
          type: string
        price:
          format: double
          type: number
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        dueDate:
          format: date-time
          type: string
      type: object
    InvoiceListDto:
      additionalProperties: false
      example:
        organizationName: organizationName
        endDate: endDate
        organizationSubscriptionId: 5
        requiredPaymentAction: true
        organizationId: 1
        isPaid: true
        subscriptionType: subscriptionType
        price: 6.027456183070403
        subscriptionName: subscriptionName
        name: name
        invoiceNumber: invoiceNumber
        invoiceId: invoiceId
        id: 0
        startDate: startDate
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        startDate:
          nullable: true
          type: string
        endDate:
          nullable: true
          type: string
        requiredPaymentAction:
          type: boolean
        isPaid:
          type: boolean
        invoiceId:
          nullable: true
          type: string
        subscriptionType:
          nullable: true
          type: string
        subscriptionName:
          nullable: true
          type: string
        price:
          format: double
          type: number
        organizationId:
          format: int32
          type: integer
        organizationName:
          nullable: true
          type: string
        invoiceNumber:
          nullable: true
          type: string
        organizationSubscriptionId:
          format: int32
          type: integer
      type: object
    Invoices:
      additionalProperties: false
      example:
        data:
        - organizationName: organizationName
          endDate: endDate
          organizationSubscriptionId: 5
          requiredPaymentAction: true
          organizationId: 1
          isPaid: true
          subscriptionType: subscriptionType
          price: 6.027456183070403
          subscriptionName: subscriptionName
          name: name
          invoiceNumber: invoiceNumber
          invoiceId: invoiceId
          id: 0
          startDate: startDate
        - organizationName: organizationName
          endDate: endDate
          organizationSubscriptionId: 5
          requiredPaymentAction: true
          organizationId: 1
          isPaid: true
          subscriptionType: subscriptionType
          price: 6.027456183070403
          subscriptionName: subscriptionName
          name: name
          invoiceNumber: invoiceNumber
          invoiceId: invoiceId
          id: 0
          startDate: startDate
        totalCount: 5
      properties:
        data:
          items:
            $ref: '#/components/schemas/InvoiceListDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    IpAddressRangeCountCommand:
      additionalProperties: false
      example:
        end: end
        begin: begin
      properties:
        begin:
          nullable: true
          pattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
          type: string
        end:
          nullable: true
          pattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
          type: string
      type: object
    IpAddressRangeListCommand:
      additionalProperties: false
      example:
        netMask: 16
        ipAddress: ipAddress
        gateway: gateway
      properties:
        ipAddress:
          nullable: true
          pattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
          type: string
        netMask:
          format: int32
          maximum: 28
          minimum: 16
          type: integer
        gateway:
          nullable: true
          pattern: "^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$"
          type: string
      type: object
    JsonNode:
      additionalProperties: false
      example:
        parent: null
        root: null
        options:
          propertyNameCaseInsensitive: true
      properties:
        options:
          $ref: '#/components/schemas/JsonNodeOptions'
        parent:
          $ref: '#/components/schemas/JsonNode'
        root:
          $ref: '#/components/schemas/JsonNode'
      type: object
    JsonNodeOptions:
      additionalProperties: false
      example:
        propertyNameCaseInsensitive: true
      properties:
        propertyNameCaseInsensitive:
          type: boolean
      type: object
    KeycloakCheckerCommand:
      additionalProperties: false
      example:
        clientId: clientId
        name: name
        clientSecret: clientSecret
        url: url
        realmsName: realmsName
      properties:
        name:
          maxLength: 30
          minLength: 3
          type: string
        url:
          minLength: 1
          type: string
        realmsName:
          minLength: 1
          type: string
        clientId:
          minLength: 1
          type: string
        clientSecret:
          minLength: 1
          type: string
      required:
      - clientId
      - clientSecret
      - name
      - realmsName
      - url
      type: object
    KeycloakCreateCommand:
      additionalProperties: false
      example:
        clientId: clientId
        name: name
        clientSecret: clientSecret
        url: url
        realmsName: realmsName
      properties:
        name:
          maxLength: 30
          minLength: 3
          type: string
        url:
          minLength: 1
          type: string
        realmsName:
          minLength: 1
          type: string
        clientId:
          minLength: 1
          type: string
        clientSecret:
          minLength: 1
          type: string
      required:
      - clientId
      - clientSecret
      - name
      - realmsName
      - url
      type: object
    KeycloakDeleteCommand:
      additionalProperties: false
      example:
        id: 0
      properties:
        id:
          format: int32
          type: integer
      type: object
    KeycloakEditCommand:
      additionalProperties: false
      example:
        clientId: clientId
        name: name
        clientSecret: clientSecret
        id: 0
        url: url
        realmsName: realmsName
      properties:
        id:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          minLength: 1
          type: string
        url:
          minLength: 1
          type: string
        realmsName:
          minLength: 1
          type: string
        clientId:
          minLength: 1
          type: string
        clientSecret:
          minLength: 1
          type: string
      required:
      - clientId
      - clientSecret
      - id
      - name
      - realmsName
      - url
      type: object
    KeycloakListDto:
      additionalProperties: false
      example:
        organizationId: 6
        clientId: clientId
        organizationName: organizationName
        partnerLogo: partnerLogo
        name: name
        clientSecret: clientSecret
        id: 0
        url: url
        enabled: true
        realmsName: realmsName
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        url:
          nullable: true
          type: string
        clientId:
          nullable: true
          type: string
        clientSecret:
          nullable: true
          type: string
        realmsName:
          nullable: true
          type: string
        organizationId:
          format: int32
          type: integer
        organizationName:
          nullable: true
          type: string
        partnerLogo:
          nullable: true
          type: string
        enabled:
          type: boolean
      type: object
    KubeConfigForUserDto:
      additionalProperties: false
      example:
        createdAt: createdAt
        isAccessibleForManager: true
        createdBy: createdBy
        displayName: displayName
        namespace: namespace
        isAccessibleForAll: true
        id: 0
        projectName: projectName
        userId: userId
        projectId: 6
        kubeConfigRoleName: kubeConfigRoleName
        expirationDate: expirationDate
      properties:
        id:
          format: int32
          type: integer
        userId:
          nullable: true
          type: string
        displayName:
          nullable: true
          type: string
        projectId:
          format: int32
          type: integer
        projectName:
          nullable: true
          type: string
        isAccessibleForAll:
          type: boolean
        isAccessibleForManager:
          type: boolean
        kubeConfigRoleName:
          nullable: true
          type: string
        createdBy:
          nullable: true
          type: string
        createdAt:
          nullable: true
          type: string
        namespace:
          nullable: true
          type: string
        expirationDate:
          nullable: true
          type: string
      type: object
    KubeConfigForUserList:
      additionalProperties: false
      example:
        data:
        - createdAt: createdAt
          isAccessibleForManager: true
          createdBy: createdBy
          displayName: displayName
          namespace: namespace
          isAccessibleForAll: true
          id: 0
          projectName: projectName
          userId: userId
          projectId: 6
          kubeConfigRoleName: kubeConfigRoleName
          expirationDate: expirationDate
        - createdAt: createdAt
          isAccessibleForManager: true
          createdBy: createdBy
          displayName: displayName
          namespace: namespace
          isAccessibleForAll: true
          id: 0
          projectName: projectName
          userId: userId
          projectId: 6
          kubeConfigRoleName: kubeConfigRoleName
          expirationDate: expirationDate
        totalCount: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/KubeConfigForUserDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    KubeConfigInteractiveShellCommand:
      additionalProperties: false
      example:
        kubeConfigId: 0
        projectId: 0
        token: token
      properties:
        kubeConfigId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        token:
          minLength: 1
          type: string
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
      required:
      - kubeConfigId
      - projectId
      - token
      type: object
    KubeConfigResponse:
      additionalProperties: false
      example:
        data: data
      properties:
        data:
          nullable: true
          type: string
      type: object
    KubeConfigRoleDto:
      additionalProperties: false
      example:
        name: name
        id: 0
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
      type: object
    KubeConfigRoleResponse:
      additionalProperties: false
      example:
        data:
        - name: name
          id: 0
        - name: name
          id: 0
        totalCount: 6
      properties:
        data:
          items:
            $ref: '#/components/schemas/KubeConfigRoleDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    KubernetesAlertCreateDto:
      additionalProperties: false
      example:
        fingerprint: fingerprint
        annotations:
          description: description
          title: title
        startsAt: 2000-01-23T04:56:07.000+00:00
        endsAt: 2000-01-23T04:56:07.000+00:00
        status: status
        labels: ""
      properties:
        status:
          nullable: true
          type: string
        labels:
          nullable: true
        annotations:
          $ref: '#/components/schemas/Annotations'
        startsAt:
          format: date-time
          type: string
        endsAt:
          format: date-time
          type: string
        fingerprint:
          nullable: true
          type: string
      type: object
    KubernetesAlertDto:
      additionalProperties: false
      example:
        severity: severity
        lastModifiedBy: lastModifiedBy
        description: description
        title: title
        endAt: endAt
        silenceReason: silenceReason
        labels: ""
        isSolved: true
        isSilenced: true
        fingerprint: fingerprint
        startsAt: startsAt
        id: 0
        projectName: projectName
        projectId: 6
        status: status
      properties:
        id:
          format: int32
          type: integer
        labels:
          nullable: true
        description:
          nullable: true
          type: string
        title:
          nullable: true
          type: string
        severity:
          nullable: true
          type: string
        fingerprint:
          nullable: true
          type: string
        status:
          nullable: true
          type: string
        startsAt:
          nullable: true
          type: string
        endAt:
          nullable: true
          type: string
        isSolved:
          type: boolean
        projectId:
          format: int32
          type: integer
        projectName:
          nullable: true
          type: string
        isSilenced:
          type: boolean
        silenceReason:
          nullable: true
          type: string
        lastModifiedBy:
          nullable: true
          type: string
      type: object
    KubernetesAlertList:
      additionalProperties: false
      example:
        data:
        - severity: severity
          lastModifiedBy: lastModifiedBy
          description: description
          title: title
          endAt: endAt
          silenceReason: silenceReason
          labels: ""
          isSolved: true
          isSilenced: true
          fingerprint: fingerprint
          startsAt: startsAt
          id: 0
          projectName: projectName
          projectId: 6
          status: status
        - severity: severity
          lastModifiedBy: lastModifiedBy
          description: description
          title: title
          endAt: endAt
          silenceReason: silenceReason
          labels: ""
          isSolved: true
          isSilenced: true
          fingerprint: fingerprint
          startsAt: startsAt
          id: 0
          projectName: projectName
          projectId: 6
          status: status
        totalCount: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/KubernetesAlertDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    KubernetesCliCommand:
      additionalProperties: false
      example:
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
      type: object
    KubernetesCronJobDto:
      additionalProperties: false
      example:
        suspend: true
        schedule: schedule
        lastSchedule: lastSchedule
        namespace: namespace
        metadataName: metadataName
        age: age
      properties:
        metadataName:
          nullable: true
          type: string
        lastSchedule:
          nullable: true
          type: string
        suspend:
          nullable: true
          type: boolean
        schedule:
          nullable: true
          type: string
        namespace:
          nullable: true
          type: string
        age:
          nullable: true
          type: string
      type: object
    KubernetesCronJobsList:
      additionalProperties: false
      example:
        data:
        - suspend: true
          schedule: schedule
          lastSchedule: lastSchedule
          namespace: namespace
          metadataName: metadataName
          age: age
        - suspend: true
          schedule: schedule
          lastSchedule: lastSchedule
          namespace: namespace
          metadataName: metadataName
          age: age
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/KubernetesCronJobDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    KubernetesEventCreateDto:
      additionalProperties: false
      example:
        reason: reason
        metadata: ""
        lastTimeStamp: 2000-01-23T04:56:07.000+00:00
        involvedObject: ""
        firstTimeStamp: 2000-01-23T04:56:07.000+00:00
        count: 0
        source: ""
        type: type
        message: message
      properties:
        type:
          nullable: true
          type: string
        reason:
          nullable: true
          type: string
        message:
          nullable: true
          type: string
        metadata:
          nullable: true
        source:
          nullable: true
        involvedObject:
          nullable: true
        firstTimeStamp:
          format: date-time
          nullable: true
          type: string
        lastTimeStamp:
          format: date-time
          nullable: true
          type: string
        count:
          format: int32
          type: integer
      type: object
    KubernetesJobDto:
      additionalProperties: false
      example:
        namespace: namespace
        metadataName: metadataName
        completions: 0
        conditions: conditions
        age: age
      properties:
        metadataName:
          nullable: true
          type: string
        namespace:
          nullable: true
          type: string
        age:
          nullable: true
          type: string
        completions:
          format: int32
          nullable: true
          type: integer
        conditions:
          nullable: true
          type: string
      type: object
    KubernetesJobList:
      additionalProperties: false
      example:
        data:
        - namespace: namespace
          metadataName: metadataName
          completions: 0
          conditions: conditions
          age: age
        - namespace: namespace
          metadataName: metadataName
          completions: 0
          conditions: conditions
          age: age
        totalCount: 6
      properties:
        data:
          items:
            $ref: '#/components/schemas/KubernetesJobDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    KubernetesPodLogsCommand:
      additionalProperties: false
      example:
        container: container
        name: name
        namespace: namespace
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        namespace:
          nullable: true
          type: string
        container:
          nullable: true
          type: string
      type: object
    KubernetesProfilesEntity:
      additionalProperties: false
      example:
        name: name
        id: 0
        taikunLBEnabled: true
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        taikunLBEnabled:
          type: boolean
      type: object
    KubernetesProfilesList:
      additionalProperties: false
      example:
        data:
        - projects:
          - name: name
            id: 0
          - name: name
            id: 0
          organizationName: organizationName
          lastModifiedBy: lastModifiedBy
          exposeNodePortOnBastion: true
          taikunLBEnabled: true
          organizationId: 6
          createdAt: createdAt
          proxmoxStorage: proxmoxStorage
          createdBy: createdBy
          octaviaEnabled: true
          isLocked: true
          name: name
          allowSchedulingOnMaster: true
          id: 0
          lastModified: lastModified
          uniqueClusterName: true
          cni: cni
        - projects:
          - name: name
            id: 0
          - name: name
            id: 0
          organizationName: organizationName
          lastModifiedBy: lastModifiedBy
          exposeNodePortOnBastion: true
          taikunLBEnabled: true
          organizationId: 6
          createdAt: createdAt
          proxmoxStorage: proxmoxStorage
          createdBy: createdBy
          octaviaEnabled: true
          isLocked: true
          name: name
          allowSchedulingOnMaster: true
          id: 0
          lastModified: lastModified
          uniqueClusterName: true
          cni: cni
        totalCount: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/KubernetesProfilesListDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    KubernetesProfilesListDto:
      additionalProperties: false
      example:
        projects:
        - name: name
          id: 0
        - name: name
          id: 0
        organizationName: organizationName
        lastModifiedBy: lastModifiedBy
        exposeNodePortOnBastion: true
        taikunLBEnabled: true
        organizationId: 6
        createdAt: createdAt
        proxmoxStorage: proxmoxStorage
        createdBy: createdBy
        octaviaEnabled: true
        isLocked: true
        name: name
        allowSchedulingOnMaster: true
        id: 0
        lastModified: lastModified
        uniqueClusterName: true
        cni: cni
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        organizationId:
          format: int32
          nullable: true
          type: integer
        organizationName:
          nullable: true
          type: string
        cni:
          nullable: true
          type: string
        octaviaEnabled:
          type: boolean
        exposeNodePortOnBastion:
          type: boolean
        isLocked:
          type: boolean
        taikunLBEnabled:
          type: boolean
        allowSchedulingOnMaster:
          type: boolean
        uniqueClusterName:
          type: boolean
        projects:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          nullable: true
          type: array
        createdBy:
          nullable: true
          type: string
        createdAt:
          nullable: true
          type: string
        lastModified:
          nullable: true
          type: string
        lastModifiedBy:
          nullable: true
          type: string
        proxmoxStorage:
          nullable: true
          type: string
      type: object
    KubernetesProfilesLockManagerCommand:
      additionalProperties: false
      example:
        mode: mode
        id: 0
      properties:
        id:
          format: int32
          type: integer
        mode:
          nullable: true
          type: string
      type: object
    KubernetesProfilesSearchCommand:
      additionalProperties: false
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          nullable: true
          type: integer
        offset:
          format: int32
          nullable: true
          type: integer
        searchTerm:
          nullable: true
          type: string
      type: object
    KubernetesProfilesSearchList:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          name: name
          id: 0
        - organizationId: 6
          organizationName: organizationName
          name: name
          id: 0
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/CommonSearchResponseData'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    KubernetesVersionListDto:
      additionalProperties: false
      example:
        isKubevapEnabled: true
        version: version
      properties:
        version:
          nullable: true
          type: string
        isKubevapEnabled:
          type: boolean
      type: object
    KubesprayCreateCommand:
      additionalProperties: false
      example:
        version: version
        kubernetesVersion: kubernetesVersion
      properties:
        version:
          maxLength: 15
          minLength: 3
          pattern: "^v\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}"
          type: string
        kubernetesVersion:
          maxLength: 15
          minLength: 3
          pattern: "^v\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}"
          type: string
      required:
      - kubernetesVersion
      - version
      type: object
    KubesprayListDto:
      additionalProperties: false
      example:
        isDeprecated: true
        id: 0
        version: version
        kubernetesVersion: kubernetesVersion
      properties:
        id:
          format: int32
          type: integer
        version:
          nullable: true
          type: string
        kubernetesVersion:
          nullable: true
          type: string
        isDeprecated:
          type: boolean
      type: object
    Kubesprays:
      additionalProperties: false
      example:
        data:
        - isDeprecated: true
          id: 0
          version: version
          kubernetesVersion: kubernetesVersion
        - isDeprecated: true
          id: 0
          version: version
          kubernetesVersion: kubernetesVersion
        totalCount: 6
      properties:
        data:
          items:
            $ref: '#/components/schemas/KubesprayListDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    LeaveTaikunCommand:
      additionalProperties: false
      example:
        reason: reason
        message: message
      properties:
        reason:
          minLength: 1
          type: string
        message:
          nullable: true
          type: string
      required:
      - reason
      type: object
    LeaveTaikunDto:
      additionalProperties: false
      example:
        paymentIntentId: paymentIntentId
        paymentClientSecret: paymentClientSecret
      properties:
        paymentIntentId:
          nullable: true
          type: string
        paymentClientSecret:
          nullable: true
          type: string
      type: object
    ListAllBackupStorageLocations:
      additionalProperties: false
      example:
        data:
        - phase: phase
          createdAt: 2000-01-23T04:56:07.000+00:00
          provider: provider
          namespace: namespace
          metadataName: metadataName
          accessMode: accessMode
          lastValidated: 2000-01-23T04:56:07.000+00:00
          backupCredentialId: 0
        - phase: phase
          createdAt: 2000-01-23T04:56:07.000+00:00
          provider: provider
          namespace: namespace
          metadataName: metadataName
          accessMode: accessMode
          lastValidated: 2000-01-23T04:56:07.000+00:00
          backupCredentialId: 0
        totalCount: 6
      properties:
        data:
          items:
            $ref: '#/components/schemas/BackupStorageLocationDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    ListAllBackups:
      additionalProperties: false
      type: object
    ListAllDeleteBackupRequests:
      additionalProperties: false
      type: object
    ListAllRestores:
      additionalProperties: false
      type: object
    ListAllSchedules:
      additionalProperties: false
      example:
        data:
        - phase: phase
          createdAt: 2000-01-23T04:56:07.000+00:00
          schedule: schedule
          lastBackup: 2000-01-23T04:56:07.000+00:00
          namespace: namespace
          metadataName: metadataName
          includedNamespaces:
          - includedNamespaces
          - includedNamespaces
          excludedNamespaces:
          - excludedNamespaces
          - excludedNamespaces
          ttl: ttl
          status:
            phase: phase
            lastBackup: 2000-01-23T04:56:07.000+00:00
        - phase: phase
          createdAt: 2000-01-23T04:56:07.000+00:00
          schedule: schedule
          lastBackup: 2000-01-23T04:56:07.000+00:00
          namespace: namespace
          metadataName: metadataName
          includedNamespaces:
          - includedNamespaces
          - includedNamespaces
          excludedNamespaces:
          - excludedNamespaces
          - excludedNamespaces
          ttl: ttl
          status:
            phase: phase
            lastBackup: 2000-01-23T04:56:07.000+00:00
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/CScheduleDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    ListCatalogAppAvailableVersionsCommand:
      additionalProperties: false
      example:
        repoName: repoName
        packageName: packageName
        currentVersion: currentVersion
      properties:
        repoName:
          nullable: true
          type: string
        packageName:
          nullable: true
          type: string
        currentVersion:
          nullable: true
          type: string
      type: object
    LockProjectAppCommand:
      additionalProperties: false
      example:
        mode: mode
        id: 0
      properties:
        id:
          format: int32
          type: integer
        mode:
          nullable: true
          type: string
      type: object
    LoginCommand:
      additionalProperties: false
      example:
        mode: mode
        password: password
        secretKey: secretKey
        accessKey: accessKey
        email: email
      properties:
        email:
          nullable: true
          type: string
        password:
          nullable: true
          type: string
        mode:
          nullable: true
          type: string
        accessKey:
          nullable: true
          type: string
        secretKey:
          nullable: true
          type: string
      type: object
    MakeCsmCommand:
      additionalProperties: false
      example:
        mode: mode
        userId: userId
      properties:
        userId:
          minLength: 1
          type: string
        mode:
          minLength: 1
          type: string
      required:
      - mode
      - userId
      type: object
    MakeOwnerCommand:
      additionalProperties: false
      example:
        userId: userId
      properties:
        userId:
          minLength: 1
          type: string
      required:
      - userId
      type: object
    NetworkPolicies:
      additionalProperties: false
      example:
        data:
        - podSelector:
            key: podSelector
          namespace: namespace
          metadataName: metadataName
          age: age
        - podSelector:
            key: podSelector
          namespace: namespace
          metadataName: metadataName
          age: age
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/NetworkPolicyDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    NetworkPolicyDto:
      additionalProperties: false
      example:
        podSelector:
          key: podSelector
        namespace: namespace
        metadataName: metadataName
        age: age
      properties:
        metadataName:
          nullable: true
          type: string
        podSelector:
          additionalProperties:
            type: string
          nullable: true
          type: object
        namespace:
          nullable: true
          type: string
        age:
          nullable: true
          type: string
      type: object
    NodeCommand:
      additionalProperties: false
      example:
        name: name
        projectId: 0
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          minLength: 1
          type: string
      required:
      - name
      - projectId
      type: object
    NodeSearchResponseData:
      additionalProperties: false
      example:
        organizationId: 6
        organizationName: organizationName
        metadataName: metadataName
        projectName: projectName
        projectId: 0
      properties:
        metadataName:
          nullable: true
          type: string
        projectId:
          format: int32
          type: integer
        projectName:
          nullable: true
          type: string
        organizationId:
          format: int32
          type: integer
        organizationName:
          nullable: true
          type: string
      type: object
    NodesSearchCommand:
      additionalProperties: false
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          nullable: true
          type: integer
        offset:
          format: int32
          nullable: true
          type: integer
        searchTerm:
          nullable: true
          type: string
      type: object
    NodesSearchList:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        - organizationId: 6
          organizationName: organizationName
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        totalCount: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/NodeSearchResponseData'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    NotificationHistory:
      additionalProperties: false
      example:
        data:
        - createdAt: createdAt
          actionStatus: actionStatus
          isDeleted: true
          actionMessage: actionMessage
          category: category
          projectName: projectName
          projectId: 0
          username: username
        - createdAt: createdAt
          actionStatus: actionStatus
          isDeleted: true
          actionMessage: actionMessage
          category: category
          projectName: projectName
          projectId: 0
          username: username
        totalCount: 6
      properties:
        data:
          items:
            $ref: '#/components/schemas/NotificationListDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    NotificationListDto:
      additionalProperties: false
      example:
        createdAt: createdAt
        actionStatus: actionStatus
        isDeleted: true
        actionMessage: actionMessage
        category: category
        projectName: projectName
        projectId: 0
        username: username
      properties:
        createdAt:
          nullable: true
          type: string
        actionMessage:
          nullable: true
          type: string
        actionStatus:
          nullable: true
          type: string
        username:
          nullable: true
          type: string
        category:
          nullable: true
          type: string
        projectName:
          nullable: true
          type: string
        projectId:
          format: int32
          type: integer
        isDeleted:
          type: boolean
      type: object
    NotificationSendCommand:
      additionalProperties: false
      example:
        actionType: null
        actionStatus: null
        projectType: null
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        actionType:
          $ref: '#/components/schemas/ActionType'
        actionStatus:
          $ref: '#/components/schemas/ActionStatus'
        projectType:
          $ref: '#/components/schemas/ProjectType'
      type: object
    NotifyOwnersCommand:
      additionalProperties: false
      example:
        organizationId: 0
      properties:
        organizationId:
          format: int32
          type: integer
      type: object
    NtpCommand:
      additionalProperties: false
      example:
        address: address
      properties:
        address:
          minLength: 1
          type: string
      required:
      - address
      type: object
    NtpServerCreateDto:
      additionalProperties: false
      example:
        address: address
      properties:
        address:
          minLength: 1
          type: string
      required:
      - address
      type: object
    NtpServerListDto:
      additionalProperties: false
      example:
        address: address
        id: 5
      properties:
        id:
          format: int32
          type: integer
        address:
          nullable: true
          type: string
      type: object
    NtpServersListDto:
      additionalProperties: false
      example:
        address: address
        accessProfileName: accessProfileName
        id: 0
      properties:
        id:
          format: int32
          type: integer
        address:
          nullable: true
          type: string
        accessProfileName:
          nullable: true
          type: string
      type: object
    OpaMakeDefaultCommand:
      additionalProperties: false
      example:
        id: 0
      properties:
        id:
          format: int32
          type: integer
      type: object
    OpaProfileList:
      additionalProperties: false
      example:
        data:
        - projects:
          - name: name
            id: 0
          - name: name
            id: 0
          organizationName: organizationName
          forbidSpecificTags:
          - forbidSpecificTags
          - forbidSpecificTags
          forbidNodePort: true
          ingressWhitelist:
          - ingressWhitelist
          - ingressWhitelist
          revision: 6
          organizationId: 1
          forbidHttpIngress: true
          allowedRepo:
          - allowedRepo
          - allowedRepo
          createdAt: createdAt
          isDefault: true
          requireProbe: true
          isLocked: true
          name: name
          uniqueServiceSelector: true
          id: 0
          uniqueIngresses: true
        - projects:
          - name: name
            id: 0
          - name: name
            id: 0
          organizationName: organizationName
          forbidSpecificTags:
          - forbidSpecificTags
          - forbidSpecificTags
          forbidNodePort: true
          ingressWhitelist:
          - ingressWhitelist
          - ingressWhitelist
          revision: 6
          organizationId: 1
          forbidHttpIngress: true
          allowedRepo:
          - allowedRepo
          - allowedRepo
          createdAt: createdAt
          isDefault: true
          requireProbe: true
          isLocked: true
          name: name
          uniqueServiceSelector: true
          id: 0
          uniqueIngresses: true
        totalCount: 5
      properties:
        data:
          items:
            $ref: '#/components/schemas/OpaProfileListDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    OpaProfileListDto:
      additionalProperties: false
      example:
        projects:
        - name: name
          id: 0
        - name: name
          id: 0
        organizationName: organizationName
        forbidSpecificTags:
        - forbidSpecificTags
        - forbidSpecificTags
        forbidNodePort: true
        ingressWhitelist:
        - ingressWhitelist
        - ingressWhitelist
        revision: 6
        organizationId: 1
        forbidHttpIngress: true
        allowedRepo:
        - allowedRepo
        - allowedRepo
        createdAt: createdAt
        isDefault: true
        requireProbe: true
        isLocked: true
        name: name
        uniqueServiceSelector: true
        id: 0
        uniqueIngresses: true
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        forbidNodePort:
          type: boolean
        forbidHttpIngress:
          type: boolean
        requireProbe:
          type: boolean
        uniqueIngresses:
          type: boolean
        uniqueServiceSelector:
          type: boolean
        allowedRepo:
          items:
            type: string
          nullable: true
          type: array
        forbidSpecificTags:
          items:
            type: string
          nullable: true
          type: array
        ingressWhitelist:
          items:
            type: string
          nullable: true
          type: array
        isLocked:
          type: boolean
        revision:
          format: int32
          type: integer
        organizationId:
          format: int32
          type: integer
        organizationName:
          nullable: true
          type: string
        createdAt:
          nullable: true
          type: string
        isDefault:
          type: boolean
        projects:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          nullable: true
          type: array
      type: object
    OpaProfileLockManagerCommand:
      additionalProperties: false
      example:
        mode: mode
        id: 0
      properties:
        id:
          format: int32
          type: integer
        mode:
          nullable: true
          type: string
      type: object
    OpaProfileSyncCommand:
      additionalProperties: false
      example:
        projectId: 0
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
      required:
      - projectId
      type: object
    OpaProfileUpdateCommand:
      additionalProperties: false
      example:
        forbidHttpIngress: true
        allowedRepo:
        - allowedRepo
        - allowedRepo
        requireProbe: true
        name: name
        uniqueServiceSelector: true
        forbidSpecificTags:
        - forbidSpecificTags
        - forbidSpecificTags
        id: 0
        forbidNodePort: true
        uniqueIngresses: true
        ingressWhitelist:
        - ingressWhitelist
        - ingressWhitelist
      properties:
        id:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          maxLength: 50
          minLength: 2
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        forbidNodePort:
          nullable: true
          type: boolean
        forbidHttpIngress:
          nullable: true
          type: boolean
        requireProbe:
          nullable: true
          type: boolean
        uniqueIngresses:
          nullable: true
          type: boolean
        uniqueServiceSelector:
          nullable: true
          type: boolean
        allowedRepo:
          items:
            type: string
          nullable: true
          type: array
        forbidSpecificTags:
          items:
            type: string
          nullable: true
          type: array
        ingressWhitelist:
          items:
            type: string
          nullable: true
          type: array
      required:
      - id
      - name
      type: object
    OpenStackNetworkListQuery:
      additionalProperties: false
      example:
        openStackUrl: openStackUrl
        applicationCredEnabled: true
        openStackPassword: openStackPassword
        openStackDomain: openStackDomain
        openStackProjectId: openStackProjectId
        openStackUser: openStackUser
        openStackRegion: openStackRegion
        isAdmin: true
      properties:
        openStackUser:
          nullable: true
          type: string
        openStackPassword:
          nullable: true
          type: string
        openStackUrl:
          nullable: true
          type: string
        openStackProjectId:
          nullable: true
          type: string
        openStackDomain:
          nullable: true
          type: string
        openStackRegion:
          nullable: true
          type: string
        applicationCredEnabled:
          type: boolean
        isAdmin:
          type: boolean
      type: object
    OpenStackProjectListQuery:
      additionalProperties: false
      example:
        openStackUrl: openStackUrl
        applicationCredEnabled: true
        openStackPassword: openStackPassword
        openStackDomain: openStackDomain
        openStackUser: openStackUser
        isAdmin: true
      properties:
        openStackUser:
          nullable: true
          type: string
        openStackPassword:
          nullable: true
          type: string
        openStackUrl:
          nullable: true
          type: string
        openStackDomain:
          nullable: true
          type: string
        applicationCredEnabled:
          type: boolean
        isAdmin:
          type: boolean
      type: object
    OpenStackRegionListQuery:
      additionalProperties: false
      example:
        openStackUrl: openStackUrl
        applicationCredEnabled: true
        openStackPassword: openStackPassword
        openStackDomain: openStackDomain
        openStackUser: openStackUser
        isAdmin: true
      properties:
        openStackUser:
          nullable: true
          type: string
        openStackPassword:
          nullable: true
          type: string
        openStackUrl:
          nullable: true
          type: string
        openStackDomain:
          nullable: true
          type: string
        applicationCredEnabled:
          type: boolean
        isAdmin:
          type: boolean
      type: object
    OpenStackZoneListQuery:
      additionalProperties: false
      example:
        openstackProject: openstackProject
        openStackUrl: openStackUrl
        applicationCredEnabled: true
        openStackPassword: openStackPassword
        openStackDomain: openStackDomain
        openStackUser: openStackUser
        openStackRegion: openStackRegion
        isAdmin: true
      properties:
        openStackUser:
          nullable: true
          type: string
        openStackPassword:
          nullable: true
          type: string
        openStackUrl:
          nullable: true
          type: string
        openStackDomain:
          nullable: true
          type: string
        openStackRegion:
          nullable: true
          type: string
        applicationCredEnabled:
          type: boolean
        isAdmin:
          type: boolean
        openstackProject:
          nullable: true
          type: string
      type: object
    OpenstackComputeQuotaDto:
      additionalProperties: false
      example:
        maxTotalCores: 5
        maxTotalInstances: 1
        usedRamSize: 5
        maxServerGroups: 6
        usedServerGroups: 9
        maxTotalRamSize: 0
        usedCpuSize: 2
        usedInstanceSize: 7
      properties:
        maxTotalRamSize:
          format: int64
          type: integer
        maxServerGroups:
          format: int64
          type: integer
        maxTotalInstances:
          format: int64
          type: integer
        maxTotalCores:
          format: int64
          type: integer
        usedRamSize:
          format: int64
          type: integer
        usedCpuSize:
          format: int64
          type: integer
        usedInstanceSize:
          format: int64
          type: integer
        usedServerGroups:
          format: int64
          type: integer
      type: object
    OpenstackCredentialList:
      additionalProperties: false
      example:
        data:
        - volumeType: volumeType
          projectCount: 6
          projects:
          - name: name
            id: 0
          - name: name
            id: 0
          project: project
          availabilityZone: availabilityZone
          publicNetwork: publicNetwork
          organizationId: 1
          createdAt: createdAt
          isLocked: true
          id: 0
          organizationName: organizationName
          internalSubnetId: internalSubnetId
          lastModifiedBy: lastModifiedBy
          importNetwork: true
          isAdmin: true
          url: url
          isDefault: true
          createdBy: createdBy
          domain: domain
          name: name
          tenantId: tenantId
          lastModified: lastModified
          region: region
          continentName: continentName
          user: user
        - volumeType: volumeType
          projectCount: 6
          projects:
          - name: name
            id: 0
          - name: name
            id: 0
          project: project
          availabilityZone: availabilityZone
          publicNetwork: publicNetwork
          organizationId: 1
          createdAt: createdAt
          isLocked: true
          id: 0
          organizationName: organizationName
          internalSubnetId: internalSubnetId
          lastModifiedBy: lastModifiedBy
          importNetwork: true
          isAdmin: true
          url: url
          isDefault: true
          createdBy: createdBy
          domain: domain
          name: name
          tenantId: tenantId
          lastModified: lastModified
          region: region
          continentName: continentName
          user: user
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/OpenstackCredentialsListDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    OpenstackCredentialsForProjectDto:
      additionalProperties: false
      example:
        openStackUrl: openStackUrl
        applicationCredEnabled: true
        openStackPassword: openStackPassword
        openStackUser: openStackUser
        openStackVolumeType: openStackVolumeType
        openStackProject: openStackProject
        openStackTenantId: openStackTenantId
        openStackDomain: openStackDomain
        openStackInternalSubnetId: openStackInternalSubnetId
        openStackAvailabilityZone: openStackAvailabilityZone
        openStackRegion: openStackRegion
        openStackImportNetwork: true
        openStackPublicNetwork: openStackPublicNetwork
      properties:
        openStackUser:
          nullable: true
          type: string
        openStackDomain:
          nullable: true
          type: string
        openStackPassword:
          nullable: true
          type: string
        openStackProject:
          nullable: true
          type: string
        openStackRegion:
          nullable: true
          type: string
        openStackUrl:
          nullable: true
          type: string
        openStackPublicNetwork:
          nullable: true
          type: string
        openStackAvailabilityZone:
          nullable: true
          type: string
        openStackVolumeType:
          nullable: true
          type: string
        openStackTenantId:
          nullable: true
          type: string
        openStackImportNetwork:
          type: boolean
        openStackInternalSubnetId:
          nullable: true
          type: string
        applicationCredEnabled:
          type: boolean
      type: object
    OpenstackCredentialsListDto:
      additionalProperties: false
      example:
        volumeType: volumeType
        projectCount: 6
        projects:
        - name: name
          id: 0
        - name: name
          id: 0
        project: project
        availabilityZone: availabilityZone
        publicNetwork: publicNetwork
        organizationId: 1
        createdAt: createdAt
        isLocked: true
        id: 0
        organizationName: organizationName
        internalSubnetId: internalSubnetId
        lastModifiedBy: lastModifiedBy
        importNetwork: true
        isAdmin: true
        url: url
        isDefault: true
        createdBy: createdBy
        domain: domain
        name: name
        tenantId: tenantId
        lastModified: lastModified
        region: region
        continentName: continentName
        user: user
      properties:
        id:
          format: int32
          type: integer
        projectCount:
          format: int32
          type: integer
        isLocked:
          type: boolean
        name:
          nullable: true
          type: string
        user:
          nullable: true
          type: string
        url:
          nullable: true
          type: string
        project:
          nullable: true
          type: string
        domain:
          nullable: true
          type: string
        region:
          nullable: true
          type: string
        publicNetwork:
          nullable: true
          type: string
        importNetwork:
          type: boolean
        tenantId:
          nullable: true
          type: string
        availabilityZone:
          nullable: true
          type: string
        volumeType:
          nullable: true
          type: string
        internalSubnetId:
          nullable: true
          type: string
        projects:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          nullable: true
          type: array
        createdBy:
          nullable: true
          type: string
        lastModified:
          nullable: true
          type: string
        lastModifiedBy:
          nullable: true
          type: string
        isDefault:
          type: boolean
        organizationId:
          format: int32
          type: integer
        organizationName:
          nullable: true
          type: string
        createdAt:
          nullable: true
          type: string
        continentName:
          nullable: true
          type: string
        isAdmin:
          type: boolean
      type: object
    OpenstackFlavorList:
      additionalProperties: false
      example:
        data:
        - name: name
          cpu: 6
          description: description
          ram: 0
        - name: name
          cpu: 6
          description: description
          ram: 0
        totalCount: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/OpenstackFlavorListDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    OpenstackFlavorListDto:
      additionalProperties: false
      example:
        name: name
        cpu: 6
        description: description
        ram: 0
      properties:
        ram:
          format: int64
          type: integer
        cpu:
          format: int64
          type: integer
        name:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
      type: object
    OpenstackImageList:
      additionalProperties: false
      example:
        data:
        - name: name
          id: id
        - name: name
          id: id
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/CommonStringBasedDropdownDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    OpenstackNetworkDto:
      additionalProperties: false
      example:
        routerUsed: 6
        floatingIpLimit: 1
        securityGroupRuleLimit: 1
        networkLimit: 1
        securityGroupRuleUsed: 6
        routerLimit: 6
        portLimit: 4
        securityGroupUsed: 8
        subnetUsed: 9
        securityGroupLimit: 7
        portUsed: 9
        subnetLimit: 1
        floatingIpUsed: 9
        networkUsed: 5
      properties:
        networkLimit:
          format: int64
          type: integer
        subnetLimit:
          format: int64
          type: integer
        floatingIpLimit:
          format: int64
          type: integer
        routerLimit:
          format: int64
          type: integer
        securityGroupLimit:
          format: int64
          type: integer
        securityGroupRuleLimit:
          format: int64
          type: integer
        portLimit:
          format: int64
          type: integer
        networkUsed:
          format: int64
          type: integer
        subnetUsed:
          format: int64
          type: integer
        floatingIpUsed:
          format: int64
          type: integer
        routerUsed:
          format: int64
          type: integer
        securityGroupUsed:
          format: int64
          type: integer
        portUsed:
          format: int64
          type: integer
        securityGroupRuleUsed:
          format: int64
          type: integer
      type: object
    OpenstackQuotaList:
      additionalProperties: false
      example:
        compute:
          maxTotalCores: 5
          maxTotalInstances: 1
          usedRamSize: 5
          maxServerGroups: 6
          usedServerGroups: 9
          maxTotalRamSize: 0
          usedCpuSize: 2
          usedInstanceSize: 7
        volume:
          usedVolumeSize: 2
          maxCountVolumeSize: 4
          countVolumeSize: 7
          maxTotalVolumeSize: 3
        network:
          routerUsed: 6
          floatingIpLimit: 1
          securityGroupRuleLimit: 1
          networkLimit: 1
          securityGroupRuleUsed: 6
          routerLimit: 6
          portLimit: 4
          securityGroupUsed: 8
          subnetUsed: 9
          securityGroupLimit: 7
          portUsed: 9
          subnetLimit: 1
          floatingIpUsed: 9
          networkUsed: 5
      properties:
        compute:
          $ref: '#/components/schemas/OpenstackComputeQuotaDto'
        volume:
          $ref: '#/components/schemas/OpenstackVolumeQuotaDto'
        network:
          $ref: '#/components/schemas/OpenstackNetworkDto'
      type: object
    OpenstackQuotasCommand:
      additionalProperties: false
      example:
        id: 0
      properties:
        id:
          format: int32
          type: integer
      type: object
    OpenstackSubnetListQuery:
      additionalProperties: false
      example:
        openStackUrl: openStackUrl
        applicationCredEnabled: true
        openStackPassword: openStackPassword
        openStackDomain: openStackDomain
        openStackProjectId: openStackProjectId
        openStackUser: openStackUser
        openStackRegion: openStackRegion
        openStackProject: openStackProject
      properties:
        openStackUser:
          nullable: true
          type: string
        openStackPassword:
          nullable: true
          type: string
        openStackUrl:
          nullable: true
          type: string
        openStackProject:
          nullable: true
          type: string
        openStackProjectId:
          nullable: true
          type: string
        openStackDomain:
          nullable: true
          type: string
        openStackRegion:
          nullable: true
          type: string
        applicationCredEnabled:
          type: boolean
      type: object
    OpenstackVolumeQuotaDto:
      additionalProperties: false
      example:
        usedVolumeSize: 2
        maxCountVolumeSize: 4
        countVolumeSize: 7
        maxTotalVolumeSize: 3
      properties:
        maxTotalVolumeSize:
          format: int64
          type: integer
        usedVolumeSize:
          format: int64
          type: integer
        maxCountVolumeSize:
          format: int64
          type: integer
        countVolumeSize:
          format: int64
          type: integer
      type: object
    OpenstackVolumeTypeListQuery:
      additionalProperties: false
      example:
        openstackProject: openstackProject
        openStackUrl: openStackUrl
        applicationCredEnabled: true
        openStackPassword: openStackPassword
        openStackDomain: openStackDomain
        openStackUser: openStackUser
        openStackRegion: openStackRegion
        isAdmin: true
        projectId: 0
      properties:
        projectId:
          format: int32
          nullable: true
          type: integer
        openStackUser:
          nullable: true
          type: string
        openStackPassword:
          nullable: true
          type: string
        openStackUrl:
          nullable: true
          type: string
        openStackDomain:
          nullable: true
          type: string
        openStackRegion:
          nullable: true
          type: string
        applicationCredEnabled:
          type: boolean
        isAdmin:
          type: boolean
        openstackProject:
          nullable: true
          type: string
      type: object
    OperationCredentialLockManagerCommand:
      additionalProperties: false
      example:
        mode: mode
        id: 0
      properties:
        id:
          format: int32
          type: integer
        mode:
          nullable: true
          type: string
      type: object
    OperationCredentials:
      additionalProperties: false
      example:
        data:
        - organizationName: organizationName
          lastModifiedBy: lastModifiedBy
          prometheusUrl: prometheusUrl
          rules:
          - prometheusRuleName: prometheusRuleName
            prometheusRuleId: 1
          - prometheusRuleName: prometheusRuleName
            prometheusRuleId: 1
          organizationId: 6
          isDefault: true
          createdBy: createdBy
          isLocked: true
          name: name
          prometheusUsername: prometheusUsername
          id: 0
          lastModified: lastModified
          prometheusPassword: prometheusPassword
        - organizationName: organizationName
          lastModifiedBy: lastModifiedBy
          prometheusUrl: prometheusUrl
          rules:
          - prometheusRuleName: prometheusRuleName
            prometheusRuleId: 1
          - prometheusRuleName: prometheusRuleName
            prometheusRuleId: 1
          organizationId: 6
          isDefault: true
          createdBy: createdBy
          isLocked: true
          name: name
          prometheusUsername: prometheusUsername
          id: 0
          lastModified: lastModified
          prometheusPassword: prometheusPassword
        totalCount: 5
      properties:
        data:
          items:
            $ref: '#/components/schemas/OperationCredentialsListDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    OperationCredentialsCreateCommand:
      additionalProperties: false
      example:
        organizationId: 0
        name: name
        prometheusUrl: prometheusUrl
        prometheusUsername: prometheusUsername
        prometheusPassword: prometheusPassword
      properties:
        name:
          maxLength: 30
          minLength: 3
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        prometheusUsername:
          minLength: 1
          type: string
        prometheusPassword:
          minLength: 1
          type: string
        prometheusUrl:
          minLength: 1
          type: string
        organizationId:
          format: int32
          nullable: true
          type: integer
      required:
      - name
      - prometheusPassword
      - prometheusUrl
      - prometheusUsername
      type: object
    OperationCredentialsForOrganizationEntity:
      additionalProperties: false
      example:
        isDefault: true
        operationCredentialId: 0
        name: name
      properties:
        operationCredentialId:
          format: int32
          nullable: true
          type: integer
        name:
          nullable: true
          type: string
        isDefault:
          type: boolean
      type: object
    OperationCredentialsListDto:
      additionalProperties: false
      example:
        organizationName: organizationName
        lastModifiedBy: lastModifiedBy
        prometheusUrl: prometheusUrl
        rules:
        - prometheusRuleName: prometheusRuleName
          prometheusRuleId: 1
        - prometheusRuleName: prometheusRuleName
          prometheusRuleId: 1
        organizationId: 6
        isDefault: true
        createdBy: createdBy
        isLocked: true
        name: name
        prometheusUsername: prometheusUsername
        id: 0
        lastModified: lastModified
        prometheusPassword: prometheusPassword
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        prometheusUsername:
          nullable: true
          type: string
        prometheusPassword:
          nullable: true
          type: string
        prometheusUrl:
          nullable: true
          type: string
        organizationId:
          format: int32
          nullable: true
          type: integer
        organizationName:
          nullable: true
          type: string
        isLocked:
          type: boolean
        rules:
          items:
            $ref: '#/components/schemas/SimplePrometheusEntity'
          nullable: true
          type: array
        createdBy:
          nullable: true
          type: string
        lastModified:
          nullable: true
          type: string
        lastModifiedBy:
          nullable: true
          type: string
        isDefault:
          type: boolean
      type: object
    OperationCredentialsMakeDefaultCommand:
      additionalProperties: false
      example:
        id: 0
      properties:
        id:
          format: int32
          type: integer
      type: object
    OrganizationCreateCommand:
      additionalProperties: false
      example:
        country: country
        discountRate: 0.8008281904610115
        adminCloudCredentialId: 6
        address: address
        phone: phone
        billingEmail: billingEmail
        city: city
        name: name
        fullName: fullName
        isEligibleUpdateSubscription: true
        email: email
        vatNumber: vatNumber
      properties:
        name:
          maxLength: 30
          minLength: 3
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        fullName:
          maxLength: 200
          minLength: 3
          type: string
        phone:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        billingEmail:
          nullable: true
          type: string
        address:
          nullable: true
          type: string
        country:
          nullable: true
          type: string
        city:
          nullable: true
          type: string
        vatNumber:
          nullable: true
          type: string
        discountRate:
          format: double
          nullable: true
          type: number
        isEligibleUpdateSubscription:
          type: boolean
        adminCloudCredentialId:
          format: int32
          nullable: true
          type: integer
      required:
      - fullName
      - name
      type: object
    OrganizationDetailsDto:
      additionalProperties: false
      example:
        country: country
        discountRate: 9.301444243932576
        address: address
        projects: 1
        city: city
        partnerName: partnerName
        boundRules:
        - prometheusRuleName: prometheusRuleName
          ruleDiscountRate: 2.027123023002322
          prometheusRuleId: 3
        - prometheusRuleName: prometheusRuleName
          ruleDiscountRate: 2.027123023002322
          prometheusRuleId: 3
        fullName: fullName
        cloudCredentials: 5
        isEligibleUpdateSubscription: true
        users: 6
        createdAt: createdAt
        isReadOnly: true
        servers: 5
        partner:
          domain: domain
          name: name
          link: link
          logo: logo
          id: 7
        billingEmail: billingEmail
        phone: phone
        isLocked: true
        name: name
        id: 0
        partnerId: 2
        email: email
        vatNumber: vatNumber
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        fullName:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        billingEmail:
          nullable: true
          type: string
        phone:
          nullable: true
          type: string
        country:
          nullable: true
          type: string
        city:
          nullable: true
          type: string
        vatNumber:
          nullable: true
          type: string
        address:
          nullable: true
          type: string
        isEligibleUpdateSubscription:
          type: boolean
        isLocked:
          type: boolean
        isReadOnly:
          type: boolean
        users:
          format: int32
          type: integer
        projects:
          format: int32
          type: integer
        servers:
          format: int32
          type: integer
        cloudCredentials:
          format: int32
          type: integer
        createdAt:
          nullable: true
          type: string
        partnerId:
          format: int32
          nullable: true
          type: integer
        partnerName:
          nullable: true
          type: string
        partner:
          $ref: '#/components/schemas/PartnerDetailsForOrganizationsDto'
        discountRate:
          format: double
          type: number
        boundRules:
          items:
            $ref: '#/components/schemas/PrometheusEntity'
          nullable: true
          type: array
      type: object
    OrganizationDto:
      additionalProperties: false
      example:
        organizationId: 0
        isBound: true
      properties:
        organizationId:
          format: int32
          type: integer
        isBound:
          type: boolean
      type: object
    OrganizationEntityForDashboard:
      additionalProperties: false
      example:
        name: name
        id: 0
        users: 6
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        users:
          format: int32
          type: integer
      type: object
    OrganizationNameCheckerCommand:
      additionalProperties: false
      example:
        name: name
      properties:
        name:
          minLength: 1
          type: string
      required:
      - name
      type: object
    OrganizationSearchCommand:
      additionalProperties: false
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          nullable: true
          type: integer
        offset:
          format: int32
          nullable: true
          type: integer
        searchTerm:
          nullable: true
          type: string
      type: object
    OrganizationSearchList:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          name: name
          id: 0
        - organizationId: 6
          organizationName: organizationName
          name: name
          id: 0
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/CommonSearchResponseData'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    OrganizationSubscriptionDto:
      additionalProperties: false
      example:
        organizationId: 6
        stripeSubscriptionId: stripeSubscriptionId
        organizationName: organizationName
        invoices:
        - isPaid: true
          endDate: 2000-01-23T04:56:07.000+00:00
          documentNumber: documentNumber
          price: 2.3021358869347655
          dueDate: 2000-01-23T04:56:07.000+00:00
          name: name
          organizationSubscriptionId: 5
          requiredPaymentAction: true
          stripeInvoiceId: stripeInvoiceId
          id: 5
          startDate: 2000-01-23T04:56:07.000+00:00
        - isPaid: true
          endDate: 2000-01-23T04:56:07.000+00:00
          documentNumber: documentNumber
          price: 2.3021358869347655
          dueDate: 2000-01-23T04:56:07.000+00:00
          name: name
          organizationSubscriptionId: 5
          requiredPaymentAction: true
          stripeInvoiceId: stripeInvoiceId
          id: 5
          startDate: 2000-01-23T04:56:07.000+00:00
        subscriptionType: subscriptionType
        endDate: 2000-01-23T04:56:07.000+00:00
        subscriptionName: subscriptionName
        id: 0
        subscriptionId: 1
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: int32
          type: integer
        organizationId:
          format: int32
          type: integer
        organizationName:
          nullable: true
          type: string
        subscriptionId:
          format: int32
          type: integer
        stripeSubscriptionId:
          nullable: true
          type: string
        subscriptionType:
          nullable: true
          type: string
        subscriptionName:
          nullable: true
          type: string
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          nullable: true
          type: string
        invoices:
          items:
            $ref: '#/components/schemas/InvoiceDto'
          nullable: true
          type: array
      type: object
    OrganizationSubscriptionList:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          stripeSubscriptionId: stripeSubscriptionId
          organizationName: organizationName
          invoices:
          - isPaid: true
            endDate: 2000-01-23T04:56:07.000+00:00
            documentNumber: documentNumber
            price: 2.3021358869347655
            dueDate: 2000-01-23T04:56:07.000+00:00
            name: name
            organizationSubscriptionId: 5
            requiredPaymentAction: true
            stripeInvoiceId: stripeInvoiceId
            id: 5
            startDate: 2000-01-23T04:56:07.000+00:00
          - isPaid: true
            endDate: 2000-01-23T04:56:07.000+00:00
            documentNumber: documentNumber
            price: 2.3021358869347655
            dueDate: 2000-01-23T04:56:07.000+00:00
            name: name
            organizationSubscriptionId: 5
            requiredPaymentAction: true
            stripeInvoiceId: stripeInvoiceId
            id: 5
            startDate: 2000-01-23T04:56:07.000+00:00
          subscriptionType: subscriptionType
          endDate: 2000-01-23T04:56:07.000+00:00
          subscriptionName: subscriptionName
          id: 0
          subscriptionId: 1
          startDate: 2000-01-23T04:56:07.000+00:00
        - organizationId: 6
          stripeSubscriptionId: stripeSubscriptionId
          organizationName: organizationName
          invoices:
          - isPaid: true
            endDate: 2000-01-23T04:56:07.000+00:00
            documentNumber: documentNumber
            price: 2.3021358869347655
            dueDate: 2000-01-23T04:56:07.000+00:00
            name: name
            organizationSubscriptionId: 5
            requiredPaymentAction: true
            stripeInvoiceId: stripeInvoiceId
            id: 5
            startDate: 2000-01-23T04:56:07.000+00:00
          - isPaid: true
            endDate: 2000-01-23T04:56:07.000+00:00
            documentNumber: documentNumber
            price: 2.3021358869347655
            dueDate: 2000-01-23T04:56:07.000+00:00
            name: name
            organizationSubscriptionId: 5
            requiredPaymentAction: true
            stripeInvoiceId: stripeInvoiceId
            id: 5
            startDate: 2000-01-23T04:56:07.000+00:00
          subscriptionType: subscriptionType
          endDate: 2000-01-23T04:56:07.000+00:00
          subscriptionName: subscriptionName
          id: 0
          subscriptionId: 1
          startDate: 2000-01-23T04:56:07.000+00:00
        totalCount: 7
      properties:
        data:
          items:
            $ref: '#/components/schemas/OrganizationSubscriptionDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    OrganizationsList:
      additionalProperties: false
      example:
        data:
        - country: country
          discountRate: 9.301444243932576
          address: address
          projects: 1
          city: city
          partnerName: partnerName
          boundRules:
          - prometheusRuleName: prometheusRuleName
            ruleDiscountRate: 2.027123023002322
            prometheusRuleId: 3
          - prometheusRuleName: prometheusRuleName
            ruleDiscountRate: 2.027123023002322
            prometheusRuleId: 3
          fullName: fullName
          cloudCredentials: 5
          isEligibleUpdateSubscription: true
          users: 6
          createdAt: createdAt
          isReadOnly: true
          servers: 5
          partner:
            domain: domain
            name: name
            link: link
            logo: logo
            id: 7
          billingEmail: billingEmail
          phone: phone
          isLocked: true
          name: name
          id: 0
          partnerId: 2
          email: email
          vatNumber: vatNumber
        - country: country
          discountRate: 9.301444243932576
          address: address
          projects: 1
          city: city
          partnerName: partnerName
          boundRules:
          - prometheusRuleName: prometheusRuleName
            ruleDiscountRate: 2.027123023002322
            prometheusRuleId: 3
          - prometheusRuleName: prometheusRuleName
            ruleDiscountRate: 2.027123023002322
            prometheusRuleId: 3
          fullName: fullName
          cloudCredentials: 5
          isEligibleUpdateSubscription: true
          users: 6
          createdAt: createdAt
          isReadOnly: true
          servers: 5
          partner:
            domain: domain
            name: name
            link: link
            logo: logo
            id: 7
          billingEmail: billingEmail
          phone: phone
          isLocked: true
          name: name
          id: 0
          partnerId: 2
          email: email
          vatNumber: vatNumber
        totalCount: 4
      properties:
        data:
          items:
            $ref: '#/components/schemas/OrganizationDetailsDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    PackageAutocompleteDto:
      additionalProperties: false
      example:
        value: value
        key: key
      properties:
        key:
          nullable: true
          type: string
        value:
          nullable: true
          type: string
      type: object
    PartnerDetailsDto:
      additionalProperties: false
      example:
        whiteListDomains:
        - name: name
          id: 6
        - name: name
          id: 6
        country: country
        address: address
        city: city
        link: link
        paymentEnabled: true
        phone: phone
        domain: domain
        name: name
        organizations:
        - name: name
          id: 0
        - name: name
          id: 0
        logo: logo
        requiredUserApproval: true
        id: 0
        allowRegistration: true
        email: email
        vatNumber: vatNumber
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        link:
          nullable: true
          type: string
        domain:
          nullable: true
          type: string
        country:
          nullable: true
          type: string
        city:
          nullable: true
          type: string
        vatNumber:
          nullable: true
          type: string
        address:
          nullable: true
          type: string
        logo:
          nullable: true
          type: string
        phone:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        paymentEnabled:
          type: boolean
        allowRegistration:
          type: boolean
        requiredUserApproval:
          type: boolean
        organizations:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          nullable: true
          type: array
        whiteListDomains:
          items:
            $ref: '#/components/schemas/WhiteListDomainDto'
          nullable: true
          type: array
      type: object
    PartnerDetailsForOrganizationsDto:
      additionalProperties: false
      example:
        domain: domain
        name: name
        link: link
        logo: logo
        id: 7
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        link:
          nullable: true
          type: string
        domain:
          nullable: true
          type: string
        logo:
          nullable: true
          type: string
      type: object
    PartnerEntity:
      additionalProperties: false
      example:
        partnerName: partnerName
        partnerId: 0
      properties:
        partnerId:
          format: int32
          type: integer
        partnerName:
          nullable: true
          type: string
      type: object
    PartnerRecordDto:
      additionalProperties: false
      example:
        imageUrl: imageUrl
        id: 0
        allowRegistration: true
        paymentEnabled: true
      properties:
        imageUrl:
          nullable: true
          type: string
        id:
          format: int32
          type: integer
        paymentEnabled:
          type: boolean
        allowRegistration:
          type: boolean
      type: object
    PartnersList:
      additionalProperties: false
      example:
        data:
        - whiteListDomains:
          - name: name
            id: 6
          - name: name
            id: 6
          country: country
          address: address
          city: city
          link: link
          paymentEnabled: true
          phone: phone
          domain: domain
          name: name
          organizations:
          - name: name
            id: 0
          - name: name
            id: 0
          logo: logo
          requiredUserApproval: true
          id: 0
          allowRegistration: true
          email: email
          vatNumber: vatNumber
        - whiteListDomains:
          - name: name
            id: 6
          - name: name
            id: 6
          country: country
          address: address
          city: city
          link: link
          paymentEnabled: true
          phone: phone
          domain: domain
          name: name
          organizations:
          - name: name
            id: 0
          - name: name
            id: 0
          logo: logo
          requiredUserApproval: true
          id: 0
          allowRegistration: true
          email: email
          vatNumber: vatNumber
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/PartnerDetailsDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    PartnersSearchCommand:
      additionalProperties: false
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          nullable: true
          type: integer
        offset:
          format: int32
          nullable: true
          type: integer
        searchTerm:
          nullable: true
          type: string
      type: object
    PartnersSearchList:
      additionalProperties: false
      example:
        data:
        - name: name
          logo: logo
          id: 0
        - name: name
          logo: logo
          id: 0
        totalCount: 6
      properties:
        data:
          items:
            $ref: '#/components/schemas/PartnersSearchResponseData'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    PartnersSearchResponseData:
      additionalProperties: false
      example:
        name: name
        logo: logo
        id: 0
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        logo:
          nullable: true
          type: string
      type: object
    PatchCrdCommand:
      additionalProperties: false
      example:
        name: name
        projectId: 0
        yaml: yaml
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        yaml:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
      required:
      - name
      - projectId
      - yaml
      type: object
    PatchCronJobCommand:
      additionalProperties: false
      example:
        name: name
        namespace: namespace
        projectId: 0
        yaml: yaml
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        yaml:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        namespace:
          minLength: 1
          type: string
      required:
      - name
      - namespace
      - projectId
      - yaml
      type: object
    PatchIngressCommand:
      additionalProperties: false
      example:
        name: name
        namespace: namespace
        projectId: 0
        yaml: yaml
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        yaml:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        namespace:
          minLength: 1
          type: string
      required:
      - name
      - namespace
      - projectId
      - yaml
      type: object
    PatchJobCommand:
      additionalProperties: false
      example:
        name: name
        namespace: namespace
        projectId: 0
        yaml: yaml
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        yaml:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        namespace:
          minLength: 1
          type: string
      required:
      - name
      - namespace
      - projectId
      - yaml
      type: object
    PatchNodeCommand:
      additionalProperties: false
      example:
        name: name
        projectId: 0
        parameters:
        - mode: mode
          value: value
          key: key
        - mode: mode
          value: value
          key: key
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          minLength: 1
          type: string
        parameters:
          items:
            $ref: '#/components/schemas/PatchNodeLabelsDto'
          nullable: true
          type: array
      required:
      - name
      - projectId
      type: object
    PatchNodeLabelsDto:
      additionalProperties: false
      example:
        mode: mode
        value: value
        key: key
      properties:
        key:
          maxLength: 63
          minLength: 1
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        value:
          nullable: true
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        mode:
          minLength: 1
          type: string
      required:
      - key
      - mode
      type: object
    PatchPdbCommand:
      additionalProperties: false
      example:
        name: name
        namespace: namespace
        projectId: 0
        yaml: yaml
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        yaml:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        namespace:
          minLength: 1
          type: string
      required:
      - name
      - namespace
      - projectId
      - yaml
      type: object
    PatchPodCommand:
      additionalProperties: false
      example:
        name: name
        namespace: namespace
        projectId: 0
        yaml: yaml
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        yaml:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        namespace:
          minLength: 1
          type: string
      required:
      - name
      - namespace
      - projectId
      - yaml
      type: object
    PatchPvcCommand:
      additionalProperties: false
      example:
        name: name
        namespace: namespace
        projectId: 0
        yaml: yaml
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        yaml:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        namespace:
          minLength: 1
          type: string
      required:
      - name
      - namespace
      - projectId
      - yaml
      type: object
    PatchSecretCommand:
      additionalProperties: false
      example:
        name: name
        namespace: namespace
        projectId: 0
        yaml: yaml
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        yaml:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        namespace:
          minLength: 1
          type: string
      required:
      - name
      - namespace
      - projectId
      - yaml
      type: object
    PatchStsCommand:
      additionalProperties: false
      example:
        name: name
        namespace: namespace
        projectId: 0
        yaml: yaml
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        yaml:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        namespace:
          minLength: 1
          type: string
      required:
      - name
      - namespace
      - projectId
      - yaml
      type: object
    PayInvoiceCommand:
      additionalProperties: false
      example:
        invoiceId: invoiceId
      properties:
        invoiceId:
          nullable: true
          type: string
      type: object
    PaymentWebhookCommand:
      additionalProperties: false
      type: object
    PodDisruptionDto:
      additionalProperties: false
      example:
        createdAt: createdAt
        allowedDisruptions: ""
        minAvailable: ""
        name: name
        namespace: namespace
        maxAvailable: ""
      properties:
        name:
          nullable: true
          type: string
        namespace:
          nullable: true
          type: string
        minAvailable:
          nullable: true
        maxAvailable:
          nullable: true
        allowedDisruptions:
          nullable: true
        createdAt:
          nullable: true
          type: string
      type: object
    PodDisruptions:
      additionalProperties: false
      example:
        data:
        - createdAt: createdAt
          allowedDisruptions: ""
          minAvailable: ""
          name: name
          namespace: namespace
          maxAvailable: ""
        - createdAt: createdAt
          allowedDisruptions: ""
          minAvailable: ""
          name: name
          namespace: namespace
          maxAvailable: ""
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/PodDisruptionDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    PodListDto:
      additionalProperties: false
      example:
        phase: phase
        container:
        - container
        - container
        node: node
        restartCount: 0
        namespace: namespace
        metadataName: metadataName
        age: age
        status: status
      properties:
        metadataName:
          nullable: true
          type: string
        restartCount:
          format: int32
          type: integer
        namespace:
          nullable: true
          type: string
        node:
          nullable: true
          type: string
        age:
          nullable: true
          type: string
        status:
          nullable: true
          type: string
        phase:
          nullable: true
          type: string
        container:
          items:
            type: string
          nullable: true
          type: array
      type: object
    Pods:
      additionalProperties: false
      example:
        data:
        - phase: phase
          container:
          - container
          - container
          node: node
          restartCount: 0
          namespace: namespace
          metadataName: metadataName
          age: age
          status: status
        - phase: phase
          container:
          - container
          - container
          node: node
          restartCount: 0
          namespace: namespace
          metadataName: metadataName
          age: age
          status: status
        totalCount: 6
      properties:
        data:
          items:
            $ref: '#/components/schemas/PodListDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    PodsSearchCommand:
      additionalProperties: false
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          nullable: true
          type: integer
        offset:
          format: int32
          nullable: true
          type: integer
        searchTerm:
          nullable: true
          type: string
      type: object
    PodsSearchList:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/CommonSearchKubernetesResponseData'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    ProblemDetails:
      additionalProperties: {}
      properties:
        type:
          nullable: true
          type: string
        title:
          nullable: true
          type: string
        status:
          format: int32
          nullable: true
          type: integer
        detail:
          nullable: true
          type: string
        instance:
          nullable: true
          type: string
      type: object
    ProjectActionUpdateDto:
      additionalProperties: false
      example:
        estimatedTime: estimatedTime
        jobUrl: jobUrl
        operation: operation
      properties:
        operation:
          nullable: true
          type: string
        jobUrl:
          nullable: true
          type: string
        estimatedTime:
          nullable: true
          type: string
      type: object
    ProjectAppDetailsDto:
      additionalProperties: false
      example:
        projectAppParams:
        - isEditableWhenInstalling: true
          value: value
          key: key
          isMandatory: true
          isEditableAfterInstallation: true
        - isEditableWhenInstalling: true
          value: value
          key: key
          isMandatory: true
          isEditableAfterInstallation: true
        catalogAppName: catalogAppName
        values: values
        autoSync: true
        version: version
        catalogName: catalogName
        appRepoName: appRepoName
        catalogId: 6
        releaseNotes: releaseNotes
        helmResult: helmResult
        hasJsonSchema: true
        name: name
        namespace: namespace
        logo: logo
        id: 0
        projectName: projectName
        projectId: 1
        status: status
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        namespace:
          nullable: true
          type: string
        status:
          nullable: true
          type: string
        version:
          nullable: true
          type: string
        catalogId:
          format: int32
          type: integer
        catalogName:
          nullable: true
          type: string
        catalogAppName:
          nullable: true
          type: string
        appRepoName:
          nullable: true
          type: string
        logo:
          nullable: true
          type: string
        values:
          nullable: true
          type: string
        autoSync:
          type: boolean
        releaseNotes:
          nullable: true
          type: string
        projectName:
          nullable: true
          type: string
        helmResult:
          nullable: true
          type: string
        projectId:
          format: int32
          type: integer
        hasJsonSchema:
          type: boolean
        projectAppParams:
          items:
            $ref: '#/components/schemas/ProjectAppParamDto'
          nullable: true
          type: array
      type: object
    ProjectAppDto:
      additionalProperties: false
      example:
        isLocked: true
        name: name
        namespace: namespace
        id: 5
        projectName: projectName
        projectId: 5
        version: version
        status: status
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        namespace:
          nullable: true
          type: string
        projectName:
          nullable: true
          type: string
        projectId:
          format: int32
          type: integer
        version:
          nullable: true
          type: string
        isLocked:
          type: boolean
        status:
          nullable: true
          type: string
      type: object
    ProjectAppList:
      additionalProperties: false
      example:
        data:
        - catalogAppName: catalogAppName
          created: created
          lastModifiedBy: lastModifiedBy
          autoSync: true
          version: version
          catalogAppId: 1
          catalogName: catalogName
          appRepoName: appRepoName
          catalogId: 6
          createdBy: createdBy
          name: name
          namespace: namespace
          logo: logo
          id: 0
          lastModified: lastModified
          projectName: projectName
          projectId: 5
          status: status
        - catalogAppName: catalogAppName
          created: created
          lastModifiedBy: lastModifiedBy
          autoSync: true
          version: version
          catalogAppId: 1
          catalogName: catalogName
          appRepoName: appRepoName
          catalogId: 6
          createdBy: createdBy
          name: name
          namespace: namespace
          logo: logo
          id: 0
          lastModified: lastModified
          projectName: projectName
          projectId: 5
          status: status
        totalCount: 5
      properties:
        data:
          items:
            $ref: '#/components/schemas/ProjectAppListDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    ProjectAppListDto:
      additionalProperties: false
      example:
        catalogAppName: catalogAppName
        created: created
        lastModifiedBy: lastModifiedBy
        autoSync: true
        version: version
        catalogAppId: 1
        catalogName: catalogName
        appRepoName: appRepoName
        catalogId: 6
        createdBy: createdBy
        name: name
        namespace: namespace
        logo: logo
        id: 0
        lastModified: lastModified
        projectName: projectName
        projectId: 5
        status: status
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        namespace:
          nullable: true
          type: string
        status:
          nullable: true
          type: string
        version:
          nullable: true
          type: string
        catalogId:
          format: int32
          type: integer
        catalogName:
          nullable: true
          type: string
        catalogAppName:
          nullable: true
          type: string
        catalogAppId:
          format: int32
          type: integer
        appRepoName:
          nullable: true
          type: string
        logo:
          nullable: true
          type: string
        autoSync:
          type: boolean
        created:
          nullable: true
          type: string
        createdBy:
          nullable: true
          type: string
        lastModified:
          nullable: true
          type: string
        lastModifiedBy:
          nullable: true
          type: string
        projectId:
          format: int32
          type: integer
        projectName:
          nullable: true
          type: string
      type: object
    ProjectAppParamDto:
      additionalProperties: false
      example:
        isEditableWhenInstalling: true
        value: value
        key: key
        isMandatory: true
        isEditableAfterInstallation: true
      properties:
        key:
          nullable: true
          type: string
        value:
          nullable: true
          type: string
        isEditableWhenInstalling:
          type: boolean
        isEditableAfterInstallation:
          type: boolean
        isMandatory:
          type: boolean
      type: object
    ProjectAppParamsDto:
      additionalProperties: false
      example:
        value: value
        key: key
      properties:
        key:
          minLength: 1
          type: string
        value:
          nullable: true
          type: string
      required:
      - key
      type: object
    ProjectChartDto:
      additionalProperties: false
      example:
        updating:
        - expiredAt: expiredAt
          name: name
          id: 1
        - expiredAt: expiredAt
          name: name
          id: 1
        pending:
        - expiredAt: expiredAt
          name: name
          id: 1
        - expiredAt: expiredAt
          name: name
          id: 1
        failed:
        - expiredAt: expiredAt
          name: name
          id: 1
        - expiredAt: expiredAt
          name: name
          id: 1
        totalCount: 5
        succeeded:
        - expiredAt: expiredAt
          name: name
          id: 1
        - expiredAt: expiredAt
          name: name
          id: 1
      properties:
        succeeded:
          items:
            $ref: '#/components/schemas/ProjectCommonRecordDto'
          nullable: true
          type: array
        pending:
          items:
            $ref: '#/components/schemas/ProjectCommonRecordDto'
          nullable: true
          type: array
        updating:
          items:
            $ref: '#/components/schemas/ProjectCommonRecordDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
        failed:
          items:
            $ref: '#/components/schemas/ProjectCommonRecordDto'
          nullable: true
          type: array
      type: object
    ProjectCommonRecordDto:
      additionalProperties: false
      example:
        expiredAt: expiredAt
        name: name
        id: 1
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        expiredAt:
          nullable: true
          type: string
      type: object
    ProjectGroupDetailsListDto:
      additionalProperties: false
      example:
        organizationId: 6
        userGroups:
        - name: name
          id: 5
        - name: name
          id: 5
        projects:
        - name: name
          id: 1
        - name: name
          id: 1
        organizationName: organizationName
        name: name
        id: 0
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        organizationId:
          format: int32
          type: integer
        organizationName:
          nullable: true
          type: string
        projects:
          items:
            $ref: '#/components/schemas/ProjectListDto'
          nullable: true
          type: array
        userGroups:
          items:
            $ref: '#/components/schemas/UserGroupEntityListDto'
          nullable: true
          type: array
      type: object
    ProjectGroupList:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          userGroups:
          - name: name
            id: 5
          - name: name
            id: 5
          projects:
          - name: name
            id: 1
          - name: name
            id: 1
          organizationName: organizationName
          name: name
          id: 0
        - organizationId: 6
          userGroups:
          - name: name
            id: 5
          - name: name
            id: 5
          projects:
          - name: name
            id: 1
          - name: name
            id: 1
          organizationName: organizationName
          name: name
          id: 0
        totalCount: 5
      properties:
        data:
          items:
            $ref: '#/components/schemas/ProjectGroupDetailsListDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    ProjectListDto:
      additionalProperties: false
      example:
        name: name
        id: 1
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
      type: object
    ProjectListForProjectGroupDto:
      additionalProperties: false
      example:
        isSelected: true
        projectName: projectName
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        projectName:
          nullable: true
          type: string
        isSelected:
          type: boolean
      type: object
    ProjectType:
      enum:
      - 100
      - 200
      format: int32
      type: integer
    ProjectWithFlavorsAndImagesDto:
      additionalProperties: false
      example:
        flavors:
        - flavors
        - flavors
        images:
        - images
        - images
        imageNames:
        - imageNames
        - imageNames
        isReady: true
        name: name
        id: 6
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        flavors:
          items:
            type: string
          nullable: true
          type: array
        images:
          items:
            type: string
          nullable: true
          type: array
        imageNames:
          items:
            type: string
          nullable: true
          type: array
        isReady:
          type: boolean
      type: object
    ProjectsSearchCommand:
      additionalProperties: false
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          nullable: true
          type: integer
        offset:
          format: int32
          nullable: true
          type: integer
        searchTerm:
          nullable: true
          type: string
      type: object
    ProjectsSearchList:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          name: name
          id: 0
        - organizationId: 6
          organizationName: organizationName
          name: name
          id: 0
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/CommonSearchResponseData'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    PrometheusDashboardCreateCommand:
      additionalProperties: false
      example:
        expression: expression
        name: name
        description: description
        projectId: 0
        categoryName: categoryName
      properties:
        projectId:
          format: int32
          type: integer
        name:
          maxLength: 100
          minLength: 3
          type: string
        expression:
          maxLength: 200
          minLength: 3
          type: string
        description:
          maxLength: 100
          minLength: 3
          type: string
        categoryName:
          maxLength: 100
          minLength: 3
          type: string
      required:
      - categoryName
      - description
      - expression
      - name
      type: object
    PrometheusDashboardDto:
      additionalProperties: false
      example:
        isReadonly: true
        name: name
        expressionDecoded: expressionDecoded
        description: description
        id: 0
        expressionEncoded: expressionEncoded
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        expressionDecoded:
          nullable: true
          type: string
        expressionEncoded:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        isReadonly:
          type: boolean
      type: object
    PrometheusDashboardListDto:
      additionalProperties: false
      example:
        data:
        - isReadonly: true
          name: name
          expressionDecoded: expressionDecoded
          description: description
          id: 0
          expressionEncoded: expressionEncoded
        - isReadonly: true
          name: name
          expressionDecoded: expressionDecoded
          description: description
          id: 0
          expressionEncoded: expressionEncoded
        categoryName: categoryName
      properties:
        categoryName:
          nullable: true
          type: string
        data:
          items:
            $ref: '#/components/schemas/PrometheusDashboardDto'
          nullable: true
          type: array
      type: object
    PrometheusDashboardUpdateCommand:
      additionalProperties: false
      example:
        expression: expression
        name: name
        description: description
        id: 0
        categoryName: categoryName
      properties:
        id:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          maxLength: 100
          minLength: 3
          type: string
        expression:
          maxLength: 200
          minLength: 3
          type: string
        description:
          maxLength: 100
          minLength: 3
          type: string
        categoryName:
          maxLength: 100
          minLength: 3
          type: string
      required:
      - categoryName
      - description
      - expression
      - id
      - name
      type: object
    PrometheusEntity:
      additionalProperties: false
      example:
        prometheusRuleName: prometheusRuleName
        ruleDiscountRate: 2.027123023002322
        prometheusRuleId: 3
      properties:
        prometheusRuleId:
          format: int32
          type: integer
        prometheusRuleName:
          nullable: true
          type: string
        ruleDiscountRate:
          format: double
          type: number
      type: object
    PrometheusRulesSearchCommand:
      additionalProperties: false
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          nullable: true
          type: integer
        offset:
          format: int32
          nullable: true
          type: integer
        searchTerm:
          nullable: true
          type: string
      type: object
    PrometheusRulesSearchList:
      additionalProperties: false
      example:
        data:
        - partner: 6
          name: name
          id: 0
        - partner: 6
          name: name
          id: 0
        totalCount: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/PrometheusRulesSearchResponseData'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    PrometheusRulesSearchResponseData:
      additionalProperties: false
      example:
        partner: 6
        name: name
        id: 0
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        partner:
          format: int32
          type: integer
      type: object
    ProxmoxCheckerCommand:
      additionalProperties: false
      example:
        password: password
        url: url
        username: username
      properties:
        url:
          minLength: 1
          type: string
        username:
          minLength: 1
          type: string
        password:
          minLength: 1
          type: string
      required:
      - password
      - url
      - username
      type: object
    ProxmoxCredentialsForProjectDto:
      additionalProperties: false
      example:
        password: password
        proxmoxNetworks:
        - netMask: 1
          ipAddress: ipAddress
          bridge: bridge
          isPrivate: true
          gateway: gateway
        - netMask: 1
          ipAddress: ipAddress
          bridge: bridge
          isPrivate: true
          gateway: gateway
        storage: storage
        vmTemplateName: vmTemplateName
        url: url
        username: username
      properties:
        username:
          nullable: true
          type: string
        url:
          nullable: true
          type: string
        password:
          nullable: true
          type: string
        storage:
          nullable: true
          type: string
        vmTemplateName:
          nullable: true
          type: string
        proxmoxNetworks:
          items:
            $ref: '#/components/schemas/ProxmoxNetworkListDto'
          nullable: true
          type: array
      type: object
    ProxmoxFlavorData:
      additionalProperties: false
      example:
        name: name
        cpu: 0
        ram: 6
      properties:
        name:
          nullable: true
          type: string
        cpu:
          format: int32
          type: integer
        ram:
          format: int64
          type: integer
      type: object
    ProxmoxFlavorList:
      additionalProperties: false
      example:
        data:
        - name: name
          cpu: 0
          ram: 6
        - name: name
          cpu: 0
          ram: 6
        count: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/ProxmoxFlavorData'
          nullable: true
          type: array
        count:
          format: int32
          type: integer
      type: object
    ProxmoxNetworkListDto:
      additionalProperties: false
      example:
        netMask: 1
        ipAddress: ipAddress
        bridge: bridge
        isPrivate: true
        gateway: gateway
      properties:
        bridge:
          nullable: true
          type: string
        gateway:
          nullable: true
          type: string
        ipAddress:
          nullable: true
          type: string
        netMask:
          format: int32
          type: integer
        isPrivate:
          type: boolean
      type: object
    PvcDto:
      additionalProperties: false
      example:
        phase: phase
        size: size
        storageClassName: storageClassName
        namespace: namespace
        metadataName: metadataName
        age: age
      properties:
        metadataName:
          nullable: true
          type: string
        phase:
          nullable: true
          type: string
        size:
          nullable: true
          type: string
        namespace:
          nullable: true
          type: string
        storageClassName:
          nullable: true
          type: string
        age:
          nullable: true
          type: string
      type: object
    PvcSearchCommand:
      additionalProperties: false
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          nullable: true
          type: integer
        offset:
          format: int32
          nullable: true
          type: integer
        searchTerm:
          nullable: true
          type: string
      type: object
    PvcSearchList:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/CommonSearchKubernetesResponseData'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    Pvcs:
      additionalProperties: false
      example:
        data:
        - phase: phase
          size: size
          storageClassName: storageClassName
          namespace: namespace
          metadataName: metadataName
          age: age
        - phase: phase
          size: size
          storageClassName: storageClassName
          namespace: namespace
          metadataName: metadataName
          age: age
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/PvcDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    RefreshTokenCommand:
      additionalProperties: false
      example:
        token: token
        refreshToken: refreshToken
      properties:
        token:
          nullable: true
          type: string
        refreshToken:
          nullable: true
          type: string
      type: object
    RegionListCommand:
      additionalProperties: false
      example:
        awsAccessKeyId: awsAccessKeyId
        awsSecretAccessKey: awsSecretAccessKey
      properties:
        awsAccessKeyId:
          nullable: true
          type: string
        awsSecretAccessKey:
          nullable: true
          type: string
      type: object
    Repository:
      additionalProperties: false
      example:
        scannerDisabled: true
        organizationName: organizationName
        organizationDisplayName: organizationDisplayName
        kind: 4
        name: name
        repositoryId: repositoryId
        official: true
        verifiedPublisher: true
        url: url
      properties:
        url:
          nullable: true
          type: string
        kind:
          format: int64
          type: integer
        name:
          nullable: true
          type: string
        official:
          type: boolean
        repositoryId:
          nullable: true
          type: string
        scannerDisabled:
          type: boolean
        organizationName:
          nullable: true
          type: string
        verifiedPublisher:
          type: boolean
        organizationDisplayName:
          nullable: true
          type: string
      type: object
    ResetPasswordCommand:
      additionalProperties: false
      example:
        newPassword: newPassword
        email: email
        token: token
      properties:
        token:
          minLength: 1
          type: string
        email:
          format: email
          nullable: true
          type: string
        newPassword:
          allOf:
          - pattern: "[A-Z]"
          - pattern: "[a-z]"
          - pattern: "[0-9]"
          - pattern: \W|_
          minLength: 6
          type: string
      required:
      - newPassword
      - token
      type: object
    RestartDaemonSetCommand:
      additionalProperties: false
      example:
        name: name
        namespace: namespace
        projectId: 0
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          minLength: 1
          type: string
        namespace:
          minLength: 1
          type: string
      required:
      - name
      - namespace
      - projectId
      type: object
    RestartDeploymentCommand:
      additionalProperties: false
      example:
        name: name
        namespace: namespace
        projectId: 0
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          minLength: 1
          type: string
        namespace:
          minLength: 1
          type: string
      required:
      - name
      - namespace
      - projectId
      type: object
    RestartStsCommand:
      additionalProperties: false
      example:
        name: name
        namespace: namespace
        projectId: 0
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          minLength: 1
          type: string
        namespace:
          minLength: 1
          type: string
      required:
      - name
      - namespace
      - projectId
      type: object
    RestoreBackupCommand:
      additionalProperties: false
      example:
        excludeNamespaces:
        - excludeNamespaces
        - excludeNamespaces
        projectId: 0
        backupName: backupName
        restoreName: restoreName
        includeNamespaces:
        - includeNamespaces
        - includeNamespaces
      properties:
        projectId:
          format: int32
          type: integer
        backupName:
          nullable: true
          pattern: "^[a-z0-9]([-a-z0-9]*[a-z0-9])?"
          type: string
        restoreName:
          nullable: true
          pattern: "^[a-z0-9]([-a-z0-9]*[a-z0-9])?"
          type: string
        includeNamespaces:
          items:
            type: string
          nullable: true
          type: array
        excludeNamespaces:
          items:
            type: string
          nullable: true
          type: array
      type: object
    SecretDto:
      additionalProperties: false
      example:
        namespace: namespace
        metadataName: metadataName
        age: age
      properties:
        metadataName:
          nullable: true
          type: string
        namespace:
          nullable: true
          type: string
        age:
          nullable: true
          type: string
      type: object
    SecretSearchCommand:
      additionalProperties: false
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          nullable: true
          type: integer
        offset:
          format: int32
          nullable: true
          type: integer
        searchTerm:
          nullable: true
          type: string
      type: object
    SecretSearchList:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/CommonSearchKubernetesResponseData'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    Secrets:
      additionalProperties: false
      example:
        data:
        - namespace: namespace
          metadataName: metadataName
          age: age
        - namespace: namespace
          metadataName: metadataName
          age: age
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/SecretDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    SecurityGroupListDto:
      additionalProperties: false
      example:
        profileName: profileName
        protocol: protocol
        name: name
        id: 0
        portMinRange: 6
        portMaxRange: 1
        remoteIpPrefix: remoteIpPrefix
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        protocol:
          nullable: true
          type: string
        portMinRange:
          format: int32
          type: integer
        portMaxRange:
          format: int32
          type: integer
        remoteIpPrefix:
          nullable: true
          type: string
        profileName:
          nullable: true
          type: string
      type: object
    SecurityGroupProtocol:
      enum:
      - 100
      - 200
      - 300
      format: int32
      type: integer
    SecurityReportSummary:
      additionalProperties: false
      example:
        high: 7
        critical: 2
        low: 2
        medium: 9
        unknown: 3
      properties:
        low:
          format: int64
          nullable: true
          type: integer
        high:
          format: int64
          nullable: true
          type: integer
        medium:
          format: int64
          nullable: true
          type: integer
        unknown:
          format: int64
          nullable: true
          type: integer
        critical:
          format: int64
          nullable: true
          type: integer
      type: object
    SecurityReportSummaryDto:
      additionalProperties: false
      example:
        high: 7
        critical: 2
        low: 2
        medium: 9
        unknown: 3
      properties:
        low:
          format: int64
          type: integer
        high:
          format: int64
          type: integer
        medium:
          format: int64
          type: integer
        unknown:
          format: int64
          type: integer
        critical:
          format: int64
          type: integer
      type: object
    SendEmailAboutProjectExpirationCommand:
      additionalProperties: false
      type: object
    ServerChartDto:
      additionalProperties: false
      example:
        totalUpdatingCount: 1
        totalDiskSize: 1
        waiting:
        - names:
          - names
          - names
          projectName: projectName
          projectId: 4
        - names:
          - names
          - names
          projectName: projectName
          projectId: 4
        totalGoogleCount: 6
        google:
        - names:
          - names
          - names
          projectName: projectName
          projectId: 4
        - names:
          - names
          - names
          projectName: projectName
          projectId: 4
        failed:
        - names:
          - names
          - names
          projectName: projectName
          projectId: 4
        - names:
          - names
          - names
          projectName: projectName
          projectId: 4
        tanzu:
        - names:
          - names
          - names
          projectName: projectName
          projectId: 4
        - names:
          - names
          - names
          projectName: projectName
          projectId: 4
        totalCount: 7
        totalRam: 1
        totalSucceededCount: 7
        totalOpenstackCount: 9
        totalPendingCount: 4
        usedResources:
        - diskSize: 6
          maxRam: 1
          cpu: 6
          maxCpu: 2
          projectName: projectName
          maxDiskSize: 6
          projectId: 9
          ram: 3
        - diskSize: 6
          maxRam: 1
          cpu: 6
          maxCpu: 2
          projectName: projectName
          maxDiskSize: 6
          projectId: 9
          ram: 3
        updating:
        - names:
          - names
          - names
          projectName: projectName
          projectId: 4
        - names:
          - names
          - names
          projectName: projectName
          projectId: 4
        totalCpu: 1
        totalFailedCount: 6
        totalAzureCount: 9
        openstack:
        - names:
          - names
          - names
          projectName: projectName
          projectId: 4
        - names:
          - names
          - names
          projectName: projectName
          projectId: 4
        totalAwsCount: 5
        totalTanzuCount: 8
        aws:
        - names:
          - names
          - names
          projectName: projectName
          projectId: 4
        - names:
          - names
          - names
          projectName: projectName
          projectId: 4
        azure:
        - names:
          - names
          - names
          projectName: projectName
          projectId: 4
        - names:
          - names
          - names
          projectName: projectName
          projectId: 4
        succeeded:
        - names:
          - names
          - names
          projectName: projectName
          projectId: 4
        - names:
          - names
          - names
          projectName: projectName
          projectId: 4
      properties:
        aws:
          items:
            $ref: '#/components/schemas/ServerCommonRecordDto'
          nullable: true
          type: array
        azure:
          items:
            $ref: '#/components/schemas/ServerCommonRecordDto'
          nullable: true
          type: array
        openstack:
          items:
            $ref: '#/components/schemas/ServerCommonRecordDto'
          nullable: true
          type: array
        google:
          items:
            $ref: '#/components/schemas/ServerCommonRecordDto'
          nullable: true
          type: array
        tanzu:
          items:
            $ref: '#/components/schemas/ServerCommonRecordDto'
          nullable: true
          type: array
        failed:
          items:
            $ref: '#/components/schemas/ServerCommonRecordDto'
          nullable: true
          type: array
        succeeded:
          items:
            $ref: '#/components/schemas/ServerCommonRecordDto'
          nullable: true
          type: array
        waiting:
          items:
            $ref: '#/components/schemas/ServerCommonRecordDto'
          nullable: true
          type: array
        updating:
          items:
            $ref: '#/components/schemas/ServerCommonRecordDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
        totalCpu:
          format: int32
          type: integer
        totalRam:
          format: int64
          type: integer
        totalDiskSize:
          format: int64
          type: integer
        totalFailedCount:
          format: int32
          type: integer
        totalSucceededCount:
          format: int32
          type: integer
        totalUpdatingCount:
          format: int32
          type: integer
        totalPendingCount:
          format: int32
          type: integer
        totalAwsCount:
          format: int32
          type: integer
        totalAzureCount:
          format: int32
          type: integer
        totalOpenstackCount:
          format: int32
          type: integer
        totalGoogleCount:
          format: int32
          type: integer
        totalTanzuCount:
          format: int32
          type: integer
        usedResources:
          items:
            $ref: '#/components/schemas/UserResourceChartDto'
          nullable: true
          type: array
      type: object
    ServerCommonRecordDto:
      additionalProperties: false
      example:
        names:
        - names
        - names
        projectName: projectName
        projectId: 4
      properties:
        projectId:
          format: int32
          type: integer
        projectName:
          nullable: true
          type: string
        names:
          items:
            type: string
          nullable: true
          type: array
      type: object
    ServersSearchCommand:
      additionalProperties: false
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          nullable: true
          type: integer
        offset:
          format: int32
          nullable: true
          type: integer
        searchTerm:
          nullable: true
          type: string
      type: object
    ServersSearchList:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          name: name
          id: 0
          projectName: projectName
          projectId: 1
        - organizationId: 6
          organizationName: organizationName
          name: name
          id: 0
          projectName: projectName
          projectId: 1
        totalCount: 5
      properties:
        data:
          items:
            $ref: '#/components/schemas/ServersSearchResponseData'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    ServersSearchResponseData:
      additionalProperties: false
      example:
        organizationId: 6
        organizationName: organizationName
        name: name
        id: 0
        projectName: projectName
        projectId: 1
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        organizationId:
          format: int32
          nullable: true
          type: integer
        organizationName:
          nullable: true
          type: string
        projectId:
          format: int32
          type: integer
        projectName:
          nullable: true
          type: string
      type: object
    ServiceDto:
      additionalProperties: false
      example:
        ip: ""
        namespace: namespace
        metadataName: metadataName
        type: type
        age: age
      properties:
        metadataName:
          nullable: true
          type: string
        namespace:
          nullable: true
          type: string
        age:
          nullable: true
          type: string
        type:
          nullable: true
          type: string
        ip:
          nullable: true
      type: object
    ServiceSearchCommand:
      additionalProperties: false
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          nullable: true
          type: integer
        offset:
          format: int32
          nullable: true
          type: integer
        searchTerm:
          nullable: true
          type: string
      type: object
    ServiceSearchList:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/CommonSearchKubernetesResponseData'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    Services:
      additionalProperties: false
      example:
        data:
        - ip: ""
          namespace: namespace
          metadataName: metadataName
          type: type
          age: age
        - ip: ""
          namespace: namespace
          metadataName: metadataName
          type: type
          age: age
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/ServiceDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    SilenceOperationsCommand:
      additionalProperties: false
      example:
        mode: mode
        reason: reason
        id: 0
      properties:
        id:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        mode:
          minLength: 1
          type: string
        reason:
          nullable: true
          type: string
      required:
      - id
      - mode
      type: object
    SimplePrometheusEntity:
      additionalProperties: false
      example:
        prometheusRuleName: prometheusRuleName
        prometheusRuleId: 1
      properties:
        prometheusRuleId:
          format: int32
          type: integer
        prometheusRuleName:
          nullable: true
          type: string
      type: object
    SourceRef:
      additionalProperties: false
      example:
        kind: kind
        name: name
      properties:
        kind:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
      type: object
    SshKeyCommand:
      additionalProperties: false
      example:
        sshPublicKey: sshPublicKey
      properties:
        sshPublicKey:
          minLength: 1
          type: string
      required:
      - sshPublicKey
      type: object
    SshUserCreateDto:
      additionalProperties: false
      example:
        sshPublicKey: sshPublicKey
        name: name
      properties:
        name:
          maxLength: 30
          minLength: 3
          pattern: "^[a-z_][a-z0-9_-]*[$]?$"
          type: string
        sshPublicKey:
          minLength: 1
          type: string
      required:
      - name
      - sshPublicKey
      type: object
    StandAloneProfilesSearchCommand:
      additionalProperties: false
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          nullable: true
          type: integer
        offset:
          format: int32
          nullable: true
          type: integer
        searchTerm:
          nullable: true
          type: string
      type: object
    StandAloneProfilesSearchList:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          name: name
          id: 0
        - organizationId: 6
          organizationName: organizationName
          name: name
          id: 0
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/CommonSearchResponseData'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    Status:
      additionalProperties: false
      example:
        phase: phase
        lastBackup: 2000-01-23T04:56:07.000+00:00
      properties:
        lastBackup:
          format: date-time
          type: string
        phase:
          nullable: true
          type: string
      type: object
    StorageClassDto:
      additionalProperties: false
      example:
        volumeBindingMode: volumeBindingMode
        provisioner: provisioner
        reclaimPolicy: reclaimPolicy
        allowVolumeExpansion: true
        metadataName: metadataName
        age: age
      properties:
        metadataName:
          nullable: true
          type: string
        age:
          nullable: true
          type: string
        provisioner:
          nullable: true
          type: string
        reclaimPolicy:
          nullable: true
          type: string
        volumeBindingMode:
          nullable: true
          type: string
        allowVolumeExpansion:
          nullable: true
          type: boolean
      type: object
    StorageClasses:
      additionalProperties: false
      example:
        data:
        - volumeBindingMode: volumeBindingMode
          provisioner: provisioner
          reclaimPolicy: reclaimPolicy
          allowVolumeExpansion: true
          metadataName: metadataName
          age: age
        - volumeBindingMode: volumeBindingMode
          provisioner: provisioner
          reclaimPolicy: reclaimPolicy
          allowVolumeExpansion: true
          metadataName: metadataName
          age: age
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/StorageClassDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    StripeInvoiceListDto:
      additionalProperties: false
      example:
        endDate: 2000-01-23T04:56:07.000+00:00
        price: 0.8008281904610115
        chargeReason: chargeReason
        id: id
        invoiceStatus: invoiceStatus
        chargeStatus: chargeStatus
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          nullable: true
          type: string
        invoiceStatus:
          nullable: true
          type: string
        chargeStatus:
          nullable: true
          type: string
        chargeReason:
          nullable: true
          type: string
        price:
          format: double
          type: number
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
      type: object
    StripeInvoices:
      additionalProperties: false
      example:
        data:
        - endDate: 2000-01-23T04:56:07.000+00:00
          price: 0.8008281904610115
          chargeReason: chargeReason
          id: id
          invoiceStatus: invoiceStatus
          chargeStatus: chargeStatus
          startDate: 2000-01-23T04:56:07.000+00:00
        - endDate: 2000-01-23T04:56:07.000+00:00
          price: 0.8008281904610115
          chargeReason: chargeReason
          id: id
          invoiceStatus: invoiceStatus
          chargeStatus: chargeStatus
          startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          items:
            $ref: '#/components/schemas/StripeInvoiceListDto'
          nullable: true
          type: array
      type: object
    StsDto:
      additionalProperties: false
      example:
        namespace: namespace
        metadataName: metadataName
        age: age
        status: status
      properties:
        metadataName:
          nullable: true
          type: string
        status:
          nullable: true
          type: string
        namespace:
          nullable: true
          type: string
        age:
          nullable: true
          type: string
      type: object
    StsList:
      additionalProperties: false
      example:
        data:
        - namespace: namespace
          metadataName: metadataName
          age: age
          status: status
        - namespace: namespace
          metadataName: metadataName
          age: age
          status: status
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/StsDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    StsSearchCommand:
      additionalProperties: false
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          nullable: true
          type: integer
        offset:
          format: int32
          nullable: true
          type: integer
        searchTerm:
          nullable: true
          type: string
      type: object
    StsSearchList:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/CommonSearchKubernetesResponseData'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    Subnet:
      additionalProperties: false
      example:
        name: name
        cidr: cidr
        id: id
      properties:
        id:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        cidr:
          nullable: true
          type: string
      type: object
    SyncAppProxyCommand:
      additionalProperties: false
      type: object
    SyncBackupCredentialsCommand:
      additionalProperties: false
      type: object
    SyncOrganizationsCommand:
      additionalProperties: false
      type: object
    SyncProjectAppCommand:
      additionalProperties: false
      example:
        projectAppId: 0
      properties:
        projectAppId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
      required:
      - projectAppId
      type: object
    SyncProjectAppsCommand:
      additionalProperties: false
      type: object
    SyncProjectsCommand:
      additionalProperties: false
      type: object
    TanzuCredentialsForProjectDto:
      additionalProperties: false
      example:
        volumeType: volumeType
        password: password
        port: 6
        namespace: namespace
        url: url
        username: username
      properties:
        username:
          nullable: true
          type: string
        url:
          nullable: true
          type: string
        password:
          nullable: true
          type: string
        volumeType:
          nullable: true
          type: string
        namespace:
          nullable: true
          type: string
        port:
          format: int32
          nullable: true
          type: integer
      type: object
    TanzuCredentialsListDto:
      additionalProperties: false
      example:
        volumeType: volumeType
        projectCount: 7
        projects:
        - name: name
          id: 0
        - name: name
          id: 0
        organizationName: organizationName
        lastModifiedBy: lastModifiedBy
        url: url
        organizationId: 3
        createdAt: createdAt
        isDefault: true
        port: 9
        createdBy: createdBy
        isLocked: true
        name: name
        namespace: namespace
        id: 2
        lastModified: lastModified
        continentName: continentName
        username: username
      properties:
        id:
          format: int32
          type: integer
        projectCount:
          format: int32
          type: integer
        isLocked:
          type: boolean
        name:
          nullable: true
          type: string
        username:
          nullable: true
          type: string
        url:
          nullable: true
          type: string
        volumeType:
          nullable: true
          type: string
        namespace:
          nullable: true
          type: string
        port:
          format: int32
          nullable: true
          type: integer
        projects:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          nullable: true
          type: array
        createdBy:
          nullable: true
          type: string
        createdAt:
          nullable: true
          type: string
        lastModified:
          nullable: true
          type: string
        lastModifiedBy:
          nullable: true
          type: string
        isDefault:
          type: boolean
        organizationId:
          format: int32
          type: integer
        organizationName:
          nullable: true
          type: string
        continentName:
          nullable: true
          type: string
      type: object
    TanzuFlavorList:
      additionalProperties: false
      example:
        data:
        - name: name
          cpu: 0
          ram: 6
        - name: name
          cpu: 0
          ram: 6
        totalCount: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/TanzuFlavorsListDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    TanzuFlavorsListDto:
      additionalProperties: false
      example:
        name: name
        cpu: 0
        ram: 6
      properties:
        name:
          nullable: true
          type: string
        cpu:
          format: int32
          type: integer
        ram:
          format: int64
          type: integer
      type: object
    TanzuImageList:
      additionalProperties: false
      example:
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          imageId: imageId
          name: name
          details: ""
          type: type
        - createdAt: 2000-01-23T04:56:07.000+00:00
          imageId: imageId
          name: name
          details: ""
          type: type
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/TanzuImagesListDto'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    TanzuImagesListDto:
      additionalProperties: false
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        imageId: imageId
        name: name
        details: ""
        type: type
      properties:
        imageId:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        createdAt:
          format: date-time
          type: string
        type:
          nullable: true
          type: string
        details:
          nullable: true
      type: object
    ToggleKeycloakCommand:
      additionalProperties: false
      example:
        mode: mode
      properties:
        mode:
          nullable: true
          type: string
      type: object
    TriggerTemplateCommand:
      additionalProperties: false
      type: object
    TryForFreeCommand:
      additionalProperties: false
      example:
        organizationName: organizationName
        email: email
        username: username
      properties:
        organizationName:
          maxLength: 30
          minLength: 3
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        username:
          maxLength: 30
          minLength: 3
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        email:
          format: email
          maxLength: 200
          minLength: 3
          type: string
      required:
      - email
      - organizationName
      - username
      type: object
    UnbindFlavorFromProjectCommand:
      additionalProperties: false
      example:
        ids:
        - 0
        - 0
      properties:
        ids:
          items:
            format: int32
            type: integer
          nullable: true
          type: array
      type: object
    UpdateAccessProfileDto:
      additionalProperties: false
      example:
        httpProxy: httpProxy
        name: name
      properties:
        name:
          nullable: true
          type: string
        httpProxy:
          nullable: true
          type: string
      type: object
    UpdateAlertingProfileCommand:
      additionalProperties: false
      example:
        organizationId: 1
        slackConfigurationId: 6
        reminder: null
        name: name
        id: 0
      properties:
        id:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          nullable: true
          type: string
        slackConfigurationId:
          format: int32
          nullable: true
          type: integer
        organizationId:
          format: int32
          nullable: true
          type: integer
        reminder:
          $ref: '#/components/schemas/AlertingReminder'
      required:
      - id
      type: object
    UpdateAwsCommand:
      additionalProperties: false
      example:
        awsAccessKeyId: awsAccessKeyId
        name: name
        id: 0
        awsSecretAccessKey: awsSecretAccessKey
      properties:
        id:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          maxLength: 30
          minLength: 3
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        awsSecretAccessKey:
          minLength: 1
          type: string
        awsAccessKeyId:
          minLength: 1
          type: string
      required:
      - awsAccessKeyId
      - awsSecretAccessKey
      - id
      - name
      type: object
    UpdateAzureCommand:
      additionalProperties: false
      example:
        azureClientSecret: azureClientSecret
        azureClientId: azureClientId
        name: name
        id: 0
      properties:
        id:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          maxLength: 30
          minLength: 3
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        azureClientSecret:
          minLength: 1
          type: string
        azureClientId:
          minLength: 1
          type: string
      required:
      - azureClientId
      - azureClientSecret
      - id
      - name
      type: object
    UpdateCatalogDto:
      additionalProperties: false
      example:
        isBound: true
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        isBound:
          type: boolean
      type: object
    UpdateInvoiceDto:
      additionalProperties: false
      example:
        isPaid: true
        endDate: 2000-01-23T04:56:07.000+00:00
        price: 6.027456183070403
        dueDate: 2000-01-23T04:56:07.000+00:00
        name: name
        organizationSubscriptionId: 0
        requiredPaymentAction: true
        stripeInvoiceId: stripeInvoiceId
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        name:
          nullable: true
          type: string
        organizationSubscriptionId:
          format: int32
          nullable: true
          type: integer
        startDate:
          format: date-time
          nullable: true
          type: string
        endDate:
          format: date-time
          nullable: true
          type: string
        dueDate:
          format: date-time
          nullable: true
          type: string
        isPaid:
          nullable: true
          type: boolean
        requiredPaymentAction:
          nullable: true
          type: boolean
        stripeInvoiceId:
          nullable: true
          type: string
        price:
          format: double
          nullable: true
          type: number
      type: object
    UpdateKubernetesAlertDto:
      additionalProperties: false
      example:
        isSilenced: true
        fingerprint: fingerprint
        startsAt: 2000-01-23T04:56:07.000+00:00
        silenceReason: silenceReason
        endsAt: 2000-01-23T04:56:07.000+00:00
        status: status
        labels: ""
      properties:
        status:
          nullable: true
          type: string
        labels:
          nullable: true
        startsAt:
          format: date-time
          type: string
        endsAt:
          format: date-time
          type: string
        fingerprint:
          nullable: true
          type: string
        isSilenced:
          nullable: true
          type: boolean
        silenceReason:
          nullable: true
          type: string
      type: object
    UpdateOpenStackCommand:
      additionalProperties: false
      example:
        openStackPassword: openStackPassword
        name: name
        id: 0
        openStackUser: openStackUser
      properties:
        id:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          maxLength: 30
          minLength: 3
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        openStackUser:
          minLength: 1
          type: string
        openStackPassword:
          minLength: 1
          type: string
      required:
      - id
      - name
      - openStackPassword
      - openStackUser
      type: object
    UpdateOrganizationCommand:
      additionalProperties: false
      example:
        country: country
        discountRate: 6.027456183070403
        address: address
        city: city
        fullName: fullName
        isEligibleUpdateSubscription: true
        phone: phone
        billingEmail: billingEmail
        isLocked: true
        name: name
        id: 0
        email: email
        vatNumber: vatNumber
      properties:
        id:
          format: int32
          type: integer
        name:
          maxLength: 30
          minLength: 3
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        fullName:
          minLength: 1
          type: string
        phone:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        address:
          nullable: true
          type: string
        country:
          nullable: true
          type: string
        city:
          nullable: true
          type: string
        vatNumber:
          nullable: true
          type: string
        isLocked:
          type: boolean
        billingEmail:
          nullable: true
          type: string
        discountRate:
          format: double
          nullable: true
          type: number
        isEligibleUpdateSubscription:
          type: boolean
      required:
      - fullName
      - name
      type: object
    UpdateOrganizationSubscriptionCommand:
      additionalProperties: false
      example:
        isYearly: true
        subscriptionId: 0
      properties:
        subscriptionId:
          format: int32
          type: integer
        isYearly:
          type: boolean
      type: object
    UpdatePaymentIdCommand:
      additionalProperties: false
      example:
        paymentIntentId: paymentIntentId
        paymentMethodId: paymentMethodId
      properties:
        paymentMethodId:
          nullable: true
          type: string
        paymentIntentId:
          nullable: true
          type: string
      type: object
    UpdateProjectGroupDto:
      additionalProperties: false
      example:
        name: name
        projectIds:
        - 0
        - 0
      properties:
        name:
          nullable: true
          type: string
        projectIds:
          items:
            format: int32
            type: integer
          nullable: true
          type: array
      type: object
    UpdateProjectUserGroupDto:
      additionalProperties: false
      example:
        userGroupId: 0
        isBound: true
      properties:
        userGroupId:
          format: int32
          type: integer
        isBound:
          type: boolean
      type: object
    UserExistCommand:
      additionalProperties: false
      example:
        userName: userName
        email: email
      properties:
        email:
          nullable: true
          type: string
        userName:
          nullable: true
          type: string
      type: object
    UserGroupEntityListDto:
      additionalProperties: false
      example:
        name: name
        id: 5
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
      type: object
    UserResourceChartDto:
      additionalProperties: false
      example:
        diskSize: 6
        maxRam: 1
        cpu: 6
        maxCpu: 2
        projectName: projectName
        maxDiskSize: 6
        projectId: 9
        ram: 3
      properties:
        projectName:
          nullable: true
          type: string
        projectId:
          format: int32
          type: integer
        diskSize:
          format: int64
          type: integer
        ram:
          format: int64
          type: integer
        cpu:
          format: int64
          type: integer
        maxRam:
          format: int64
          type: integer
        maxCpu:
          format: int64
          type: integer
        maxDiskSize:
          format: int64
          type: integer
      type: object
    UserRole:
      enum:
      - 100
      - 200
      - 250
      - 400
      - 6000
      format: int32
      type: integer
    UsersSearchCommand:
      additionalProperties: false
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          nullable: true
          type: integer
        offset:
          format: int32
          nullable: true
          type: integer
        searchTerm:
          nullable: true
          type: string
      type: object
    UsersSearchList:
      additionalProperties: false
      example:
        data:
        - organizationId: 0
          organizationName: organizationName
          name: name
          id: id
          email: email
        - organizationId: 0
          organizationName: organizationName
          name: name
          id: id
          email: email
        totalCount: 6
      properties:
        data:
          items:
            $ref: '#/components/schemas/UsersSearchResponseData'
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    UsersSearchResponseData:
      additionalProperties: false
      example:
        organizationId: 0
        organizationName: organizationName
        name: name
        id: id
        email: email
      properties:
        id:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        organizationId:
          format: int32
          nullable: true
          type: integer
        organizationName:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
      type: object
    VerifyWebhookCommand:
      additionalProperties: false
      example:
        url: url
      properties:
        url:
          minLength: 1
          type: string
      required:
      - url
      type: object
    WebhookHeaderDto:
      additionalProperties: false
      example:
        id: 6
        value: value
        key: key
      properties:
        id:
          format: int32
          type: integer
        key:
          nullable: true
          type: string
        value:
          nullable: true
          type: string
      type: object
    WhiteListDomainCreateCommand:
      additionalProperties: false
      example:
        whiteListDomains:
        - name: name
        - name: name
        partnerId: 0
      properties:
        whiteListDomains:
          items:
            $ref: '#/components/schemas/WhiteListDomainCreateDto'
          nullable: true
          type: array
        partnerId:
          format: int32
          nullable: true
          type: integer
      type: object
    WhiteListDomainCreateDto:
      additionalProperties: false
      example:
        name: name
      properties:
        name:
          nullable: true
          type: string
      type: object
    WhiteListDomainDeleteCommand:
      additionalProperties: false
      example:
        id: 0
      properties:
        id:
          format: int32
          type: integer
      type: object
    WhiteListDomainDto:
      additionalProperties: false
      example:
        name: name
        id: 6
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
      type: object
    YamlValidatorCommand:
      additionalProperties: false
      example:
        yaml: yaml
      properties:
        yaml:
          nullable: true
          type: string
      type: object
  securitySchemes:
    Bearer:
      description: "Input your Bearer token in this format - Bearer {your token here}\
        \ to access this API"
      in: header
      name: Authorization
      type: apiKey
